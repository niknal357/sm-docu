"use strict";(self.webpackChunksm_docs=self.webpackChunksm_docs||[]).push([[7371],{1580:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>d,default:()=>a,frontMatter:()=>i,metadata:()=>t,toc:()=>h});var s=n(5893),l=n(1151);const i={sidebar_position:9,title:"CullSphereGroup",hide_title:!0,"sidebar-label":"CullSphereGroup"},d=void 0,t={id:"Game-Script-Environment/Userdata/CullSphereGroup",title:"CullSphereGroup",description:"CullSphereGroup",source:"@site/docs/Game-Script-Environment/Userdata/CullSphereGroup.md",sourceDirName:"Game-Script-Environment/Userdata",slug:"/Game-Script-Environment/Userdata/CullSphereGroup",permalink:"/docs/Game-Script-Environment/Userdata/CullSphereGroup",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9,title:"CullSphereGroup",hide_title:!0,"sidebar-label":"CullSphereGroup"},sidebar:"tutorialSidebar",previous:{title:"Container",permalink:"/docs/Game-Script-Environment/Userdata/Container"},next:{title:"Effect",permalink:"/docs/Game-Script-Environment/Userdata/Effect"}},c={},h=[{value:"CullSphereGroup",id:"cullspheregroup",level:2},{value:"Functions",id:"functions",level:2},{value:"addSphere",id:"addsphere",level:3},{value:"getDelta",id:"getdelta",level:3},{value:"getOverlaps",id:"getoverlaps",level:3},{value:"leave",id:"leave",level:3},{value:"removeSphere",id:"removesphere",level:3}];function o(e){const r={a:"a",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("br",{}),"\n",(0,s.jsx)(r.h2,{id:"cullspheregroup",children:"CullSphereGroup"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Associated namespace:"})," ",(0,s.jsx)(r.a,{href:"/docs/Game-Script-Environment/Static-Functions/sm.cullSphereGroup",children:"sm.cullSphereGroup"})]}),"\n",(0,s.jsxs)(r.p,{children:["A userdata object representing a ",(0,s.jsx)("strong",{children:"cull sphere group"}),"."]}),"\n",(0,s.jsx)("strong",{children:"Values:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)("code",{children:"id"})," [",(0,s.jsx)("strong",{children:" int "}),"] ",(0,s.jsx)("br",{})]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)("code",{children:"Get"}),": The id of the sphere group."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)("strong",{children:"Operations:"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Operation"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsxs)(r.td,{children:[(0,s.jsx)("code",{children:"CullSphereGroup"})," == ",(0,s.jsx)("code",{children:"CullSphereGroup"})]}),(0,s.jsxs)(r.td,{children:["Checks if two instances of ",(0,s.jsx)("code",{children:"CullSphereGroup"})," refer to the same ",(0,s.jsx)("code",{children:"CullSphereGroup"}),"."]})]})})]}),"\n",(0,s.jsx)(r.h2,{id:"functions",children:"Functions"}),"\n",(0,s.jsx)(r.h3,{id:"addsphere",children:"addSphere"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"cullSphereGroup:addSphere( id, position, radius )\n"})}),"\n",(0,s.jsx)(r.p,{children:"Adds a sphere to the sphere group, duplicate ids are ignored."}),"\n",(0,s.jsx)("strong",{children:"Arguments:"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)("code",{children:"cullSphereGroup"})," [",(0,s.jsxs)("strong",{children:[" ",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/CullSphereGroup",children:" CullSphereGroup "})," "]}),"]: The sphere group."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)("code",{children:"id"})," [",(0,s.jsx)("strong",{children:" int "}),"]: The sphere id."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)("code",{children:"position"})," [",(0,s.jsxs)("strong",{children:[" ",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The sphere position."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)("code",{children:"radius"})," [",(0,s.jsx)("strong",{children:" number "}),"]: The sphere radius."]}),"\n"]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"getdelta",children:"getDelta"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"cullSphereGroup:getDelta( position, innerRadius, outerRadius )\n"})}),"\n",(0,s.jsx)(r.p,{children:"Queries the change in overlapping spheres since the last call to getDelta."}),"\n",(0,s.jsx)("strong",{children:"Arguments:"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)("code",{children:"cullSphereGroup"})," [",(0,s.jsxs)("strong",{children:[" ",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/CullSphereGroup",children:" CullSphereGroup "})," "]}),"]: The sphere group."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)("code",{children:"position"})," [",(0,s.jsxs)("strong",{children:[" ",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: Position to query sphere."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)("code",{children:"innerRadius"})," [",(0,s.jsx)("strong",{children:" number "}),"]: Radius for the inner sphere."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)("code",{children:"outerRadius"})," [",(0,s.jsx)("strong",{children:" number "}),"]: Radius for the outer sphere."]}),"\n"]}),"\n",(0,s.jsx)("strong",{children:"Returns:"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["[",(0,s.jsx)("strong",{children:" table "}),"]: A table of removed ids."]}),"\n",(0,s.jsxs)(r.li,{children:["[",(0,s.jsx)("strong",{children:" table "}),"]: A table of added ids."]}),"\n"]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"getoverlaps",children:"getOverlaps"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"cullSphereGroup:getOverlaps( position, radius )\n"})}),"\n",(0,s.jsx)(r.p,{children:"Query for overlapping spheres."}),"\n",(0,s.jsx)("strong",{children:"Arguments:"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)("code",{children:"cullSphereGroup"})," [",(0,s.jsxs)("strong",{children:[" ",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/CullSphereGroup",children:" CullSphereGroup "})," "]}),"]: The sphere group."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)("code",{children:"position"})," [",(0,s.jsxs)("strong",{children:[" ",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: Position to query sphere."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)("code",{children:"radius"})," [",(0,s.jsx)("strong",{children:" number "}),"]: Radius for the query sphere."]}),"\n"]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"leave",children:"leave"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"cullSphereGroup:leave()\n"})}),"\n",(0,s.jsx)(r.p,{children:"Query all currently active spheres and leave them."}),"\n",(0,s.jsx)("strong",{children:"Arguments:"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)("code",{children:"cullSphereGroup"})," [",(0,s.jsxs)("strong",{children:[" ",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/CullSphereGroup",children:" CullSphereGroup "})," "]}),"]: The sphere group."]}),"\n"]}),"\n",(0,s.jsx)("strong",{children:"Returns:"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["[",(0,s.jsx)("strong",{children:" table "}),"]: A table of previously active ids."]}),"\n"]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"removesphere",children:"removeSphere"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"cullSphereGroup:removeSphere( id )\n"})}),"\n",(0,s.jsx)(r.p,{children:"Removes a sphere from the sphere group."}),"\n",(0,s.jsx)("strong",{children:"Arguments:"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)("code",{children:"cullSphereGroup"})," [",(0,s.jsxs)("strong",{children:[" ",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/CullSphereGroup",children:" CullSphereGroup "})," "]}),"]: The sphere group."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)("code",{children:"id"})," [",(0,s.jsx)("strong",{children:" int "}),"]: The sphere id."]}),"\n"]}),"\n",(0,s.jsx)(r.hr,{})]})}function a(e={}){const{wrapper:r}={...(0,l.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},1151:(e,r,n)=>{n.d(r,{Z:()=>t,a:()=>d});var s=n(7294);const l={},i=s.createContext(l);function d(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:d(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);