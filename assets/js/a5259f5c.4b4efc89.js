"use strict";(self.webpackChunksm_docs=self.webpackChunksm_docs||[]).push([[4902],{6217:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var t=i(5893),s=i(1151);const o={sidebar_position:13,title:"sm.construction",hide_title:!0,"sidebar-label":"sm.construction"},r=void 0,c={id:"Game-Script-Environment/Static-Functions/sm.construction",title:"sm.construction",description:"sm.construction",source:"@site/docs/Game-Script-Environment/Static-Functions/sm.construction.md",sourceDirName:"Game-Script-Environment/Static-Functions",slug:"/Game-Script-Environment/Static-Functions/sm.construction",permalink:"/docs/Game-Script-Environment/Static-Functions/sm.construction",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13,title:"sm.construction",hide_title:!0,"sidebar-label":"sm.construction"},sidebar:"tutorialSidebar",previous:{title:"sm.color",permalink:"/docs/Game-Script-Environment/Static-Functions/sm.color"},next:{title:"sm.container",permalink:"/docs/Game-Script-Environment/Static-Functions/sm.container"}},a={},l=[{value:"sm.construction",id:"smconstruction",level:2},{value:"Functions",id:"functions",level:2},{value:"buildBlock",id:"buildblock",level:3},{value:"validateLocalPosition",id:"validatelocalposition",level:3}];function d(n){const e={a:"a",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("br",{}),"\n",(0,t.jsx)(e.h2,{id:"smconstruction",children:"sm.construction"}),"\n",(0,t.jsxs)(e.p,{children:["The ",(0,t.jsx)("strong",{children:"Construction"})," api is used for interacting with the shape construction system."]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{href:"/docs/Game-Script-Environment/Constants#smconstructionconstants",children:"Constants"})}),"\n",(0,t.jsx)(e.h2,{id:"functions",children:"Functions"}),"\n",(0,t.jsx)(e.h3,{id:"buildblock",children:"buildBlock"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-lua",children:"sm.construction.buildBlock( uuid, position, target )\n"})}),"\n",(0,t.jsx)("code",{children:"Server-Only"}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)(e.p,{children:"Builds a block."}),"\n",(0,t.jsx)("strong",{children:"Arguments:"}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)("code",{children:"uuid"})," [",(0,t.jsxs)("strong",{children:[" ",(0,t.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Uuid",children:" Uuid "})," "]}),"]: The block uuid."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)("code",{children:"position"})," [",(0,t.jsxs)("strong",{children:[" ",(0,t.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The block position. Local position if building on a target, global if building on terrain."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)("code",{children:"target"})," [",(0,t.jsxs)("strong",{children:[" ",(0,t.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape",children:" Shape "}),"/",(0,t.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Joint",children:" Joint "}),"/",(0,t.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Lift",children:" Lift "}),"/ nil "]}),"]: The target object to build the block on. Use nil to build on terrain."]}),"\n"]}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h3,{id:"validatelocalposition",children:"validateLocalPosition"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-lua",children:"sm.construction.validateLocalPosition( uuid, position, normal, target )\n"})}),"\n",(0,t.jsx)(e.p,{children:"Validates whether a block can be built at the target position."}),"\n",(0,t.jsx)("strong",{children:"Arguments:"}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)("code",{children:"uuid"})," [",(0,t.jsxs)("strong",{children:[" ",(0,t.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Uuid",children:" Uuid "})," "]}),"]: The block uuid."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)("code",{children:"position"})," [",(0,t.jsxs)("strong",{children:[" ",(0,t.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The block position. Local position if building on a target, global if building on terrain."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)("code",{children:"normal"})," [",(0,t.jsxs)("strong",{children:[" ",(0,t.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The normal of the surface to validate placement."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)("code",{children:"target"})," [",(0,t.jsxs)("strong",{children:[" ",(0,t.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape",children:" Shape "}),"/",(0,t.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Joint",children:" Joint "}),"/",(0,t.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Lift",children:" Lift "}),"/ nil "]}),"]: The target object to validate on. Use nil to validate on terrain."]}),"\n"]}),"\n",(0,t.jsx)("strong",{children:"Arguments:"}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["[",(0,t.jsx)("strong",{children:" bool "}),"]: Whether the position is valid or not."]}),"\n"]}),"\n",(0,t.jsx)(e.hr,{})]})}function h(n={}){const{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},1151:(n,e,i)=>{i.d(e,{Z:()=>c,a:()=>r});var t=i(7294);const s={},o=t.createContext(s);function r(n){const e=t.useContext(o);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:r(n.components),t.createElement(o.Provider,{value:e},n.children)}}}]);