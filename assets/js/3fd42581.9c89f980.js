"use strict";(self.webpackChunksm_docs=self.webpackChunksm_docs||[]).push([[3893],{6463:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var r=t(5893),s=t(1151);const i={sidebar_position:17,title:"Network",hide_title:!0,"sidebar-label":"Network"},l=void 0,a={id:"Game-Script-Environment/Userdata/Network",title:"Network",description:"Network",source:"@site/docs/Game-Script-Environment/Userdata/Network.md",sourceDirName:"Game-Script-Environment/Userdata",slug:"/Game-Script-Environment/Userdata/Network",permalink:"/docs/Game-Script-Environment/Userdata/Network",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:17,frontMatter:{sidebar_position:17,title:"Network",hide_title:!0,"sidebar-label":"Network"},sidebar:"tutorialSidebar",previous:{title:"LoadCellHandle",permalink:"/docs/Game-Script-Environment/Userdata/LoadCellHandle"},next:{title:"PathNode",permalink:"/docs/Game-Script-Environment/Userdata/PathNode"}},o={},c=[{value:"Network",id:"network",level:2},{value:"Functions",id:"functions",level:2},{value:"sendToClient",id:"sendtoclient",level:3},{value:"sendToClients",id:"sendtoclients",level:3},{value:"sendToServer",id:"sendtoserver",level:3},{value:"setClientData",id:"setclientdata",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h2,{id:"network",children:"Network"}),"\n",(0,r.jsxs)(n.p,{children:["A userdata object representing a ",(0,r.jsx)("strong",{children:"network"})," object."]}),"\n",(0,r.jsxs)(n.p,{children:["Network is used for sending data between scripts running on ",(0,r.jsx)(n.a,{href:"/docs/#server",children:"server"})," and ",(0,r.jsx)(n.a,{href:"/docs/#client",children:"client"}),". ",(0,r.jsx)("br",{}),"\r\nThis allows the server to call a function on the client with one optional argument, and vice versa."]}),"\n",(0,r.jsx)(n.admonition,{title:"note",type:"info",children:(0,r.jsxs)(n.p,{children:["The network object is only accessible via ",(0,r.jsx)("code",{children:"self.network"})," in scripted objects (see ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Classes/CommonCallbacks",children:"classes"}),")."]})}),"\n",(0,r.jsxs)(n.admonition,{title:"warning",type:"caution",children:[(0,r.jsxs)(n.p,{children:["Network allows any Lua data to be sent between the host and other players in real-time. ",(0,r.jsx)("br",{}),"\r\nThis may result in ",(0,r.jsx)("strong",{children:"high latency"})," and ",(0,r.jsx)("strong",{children:"lag"})," in multiplayer."]}),(0,r.jsxs)(n.p,{children:["To avoid lag and minimize bandwidth usage, consider only sending data when necessary, ",(0,r.jsx)("br",{}),"\r\nwhen data has changed, and attempt to send as little amount of data as possible."]})]}),"\n",(0,r.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,r.jsx)(n.h3,{id:"sendtoclient",children:"sendToClient"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"network:sendToClient( client, callback, data )\n"})}),"\n",(0,r.jsx)("code",{children:"Server-Only"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.p,{children:["Sends a network event from the server to a single client. ",(0,r.jsx)("br",{}),"\r\nThis will run the callback method on the client with one optional argument."]}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"network"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Network",children:" Network "})," "]}),"]: The network."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"client"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Player",children:" Player "})," "]}),"]: The client player (or the host)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"callback"})," [",(0,r.jsx)("strong",{children:" string "}),"]: The name of the client function."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"data"})," [",(0,r.jsx)("strong",{children:" any "}),"]: Optional extra data to send."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"sendtoclients",children:"sendToClients"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"network:sendToClients( callback, data )\n"})}),"\n",(0,r.jsx)("code",{children:"Server-Only"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.p,{children:["Sends a network event from the server to all clients. ",(0,r.jsx)("br",{}),"\r\nThis will run the callback method on the clients with one optional argument."]}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"network"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Network",children:" Network "})," "]}),"]: The network."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"callback"})," [",(0,r.jsx)("strong",{children:" string "}),"]: The name of the client function."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"data"})," [",(0,r.jsx)("strong",{children:" any "}),"]: Optional extra data to send."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",metastring:'title="Example Usage"',children:"-- Example of calling client function over network\r\nMyHorn = class()\r\n\r\nfunction MyHorn.server_onMelee( self, position, attacker, damage, power, direction, normal )\r\n\tself.network:sendToClients( 'client_hit', position )\r\nend\r\n \r\nfunction MyHorn.client_hit( self, position )\r\n\t-- Play sound\r\n\tsm.audio.play( 'Horn', position )\r\nend\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"sendtoserver",children:"sendToServer"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"network:sendToServer( callback, data )\n"})}),"\n",(0,r.jsx)("code",{children:"Client-Only"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.p,{children:["Sends a network event from the client to the server. ",(0,r.jsx)("br",{}),"\r\nThis will run the callback method on the server with one optional argument."]}),"\n",(0,r.jsxs)(n.p,{children:["The callback function receives one additional argument, which is the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Player",children:"player"})," of the client ",(0,r.jsx)("br",{}),"\r\nthat sent the event."]}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"network"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Network",children:" Network "})," "]}),"]: The network."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"callback"})," [",(0,r.jsx)("strong",{children:" string "}),"]: The name of the server function."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"data"})," [",(0,r.jsx)("strong",{children:" any "}),"]: Optional extra data to send."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",metastring:'title="Example Usage"',children:"-- Example of calling server function over network\r\nMySwitch = class()\r\n\r\nfunction MySwitch.client_onInteract( self, char, lookAt )\r\n\tif lookAt then\r\n\t\tself.network:sendToServer( 'server_toggle' )\r\n\tend\r\nend\r\n\r\nfunction MySwitch.server_toggle( self )\r\n\t-- Toggle on and off\r\n\tself.interactable.active = not self.interactable.active\r\nend\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"setclientdata",children:"setClientData"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"network:setClientData( data, channel )\n"})}),"\n",(0,r.jsx)("code",{children:"Server-Only"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.p,{children:"Sets a lua object that will automatically be synchronized to clients."}),"\n",(0,r.jsxs)(n.p,{children:["Scripts which use this feature needs to implement ",(0,r.jsx)("code",{children:"client_onClientDataUpdate"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)("code",{children:"client_onClientDataUpdate"})," will be called on the client whenever the data has changed, ",(0,r.jsx)("br",{}),"\r\nincluding setting the data for the first time."]}),"\n",(0,r.jsx)(n.p,{children:"Channel 1 will be received before channel 2 if both are updated."}),"\n",(0,r.jsx)(n.admonition,{title:"note",type:"info",children:(0,r.jsxs)(n.p,{children:["The callback function on the client is ",(0,r.jsx)(n.strong,{children:"only"})," called if the ",(0,r.jsx)("br",{}),"\r\ndata that is being set ",(0,r.jsx)(n.strong,{children:"has changed"}),". ",(0,r.jsx)("br",{}),"\r\nIf the data being set is ",(0,r.jsx)(n.strong,{children:"the same"}),", the client callback is ",(0,r.jsx)(n.strong,{children:"not"})," called."]})}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"network"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Network",children:" Network "})," "]}),"]: The network."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"data"})," [",(0,r.jsx)("strong",{children:" any "}),"]: The data to set."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"channel"})," [",(0,r.jsx)("strong",{children:" int "}),"]: The data channel (1 or 2, defaults to 1)."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",metastring:'title="Example Usage"',children:'MyEngine = class()\r\n\r\nfunction MyEngine.server_onCreate( self )\r\n\tself.network:setClientData( { "gear" = 1 } )\r\nend\r\n\r\nfunction MyEngine.client_onClientDataUpdate( self, data, channel )\r\n\tself.interactable:setPoseWeight( 0, data.gear / self.maxGears )\r\nend\n'})}),"\n",(0,r.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>l});var r=t(7294);const s={},i=r.createContext(s);function l(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);