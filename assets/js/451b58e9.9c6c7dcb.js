"use strict";(self.webpackChunksm_docs=self.webpackChunksm_docs||[]).push([[1461],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>k});var r=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},l=Object.keys(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var s=r.createContext({}),u=function(t){var e=r.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},c=function(t){var e=u(t.components);return r.createElement(s.Provider,{value:e},t.children)},p="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,l=t.originalType,s=t.parentName,c=i(t,["components","mdxType","originalType","parentName"]),p=u(n),d=o,k=p["".concat(s,".").concat(d)]||p[d]||m[d]||l;return n?r.createElement(k,a(a({ref:e},c),{},{components:n})):r.createElement(k,a({ref:e},c))}));function k(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var l=n.length,a=new Array(l);a[0]=d;var i={};for(var s in e)hasOwnProperty.call(e,s)&&(i[s]=e[s]);i.originalType=t,i[p]="string"==typeof t?t:o,a[1]=i;for(var u=2;u<l;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6657:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var r=n(7462),o=(n(7294),n(3905));const l={sidebar_position:15,title:"sm.creation",hide_title:!0,"sidebar-label":"sm.creation"},a=void 0,i={unversionedId:"Game-Script-Environment/Static-Functions/sm.creation",id:"Game-Script-Environment/Static-Functions/sm.creation",title:"sm.creation",description:"sm.creation",source:"@site/docs/Game-Script-Environment/Static-Functions/sm.creation.md",sourceDirName:"Game-Script-Environment/Static-Functions",slug:"/Game-Script-Environment/Static-Functions/sm.creation",permalink:"/docs/Game-Script-Environment/Static-Functions/sm.creation",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Game-Script-Environment/Static-Functions/sm.creation.md",tags:[],version:"current",sidebarPosition:15,frontMatter:{sidebar_position:15,title:"sm.creation",hide_title:!0,"sidebar-label":"sm.creation"},sidebar:"tutorialSidebar",previous:{title:"sm.container",permalink:"/docs/Game-Script-Environment/Static-Functions/sm.container"},next:{title:"sm.cullSphereGroup",permalink:"/docs/Game-Script-Environment/Static-Functions/sm.cullSphereGroup"}},s={},u=[{value:"sm.creation",id:"smcreation",level:2},{value:"Functions",id:"functions",level:2},{value:"exportToString",id:"exporttostring",level:3},{value:"exportToTable",id:"exporttotable",level:3},{value:"importFromFile",id:"importfromfile",level:3},{value:"importFromString",id:"importfromstring",level:3}],c={toc:u},p="wrapper";function m(t){let{components:e,...n}=t;return(0,o.kt)(p,(0,r.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"smcreation"},"sm.creation"),(0,o.kt)("p",null,"A ",(0,o.kt)("strong",null,"Creation")," represent a collection of ",(0,o.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Body"},"bodies")," linked together by ",(0,o.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Joint"},"joints"),"."),(0,o.kt)("h2",{id:"functions"},"Functions"),(0,o.kt)("h3",{id:"exporttostring"},"exportToString"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"sm.creation.exportToString( body, exportTransforms, forceDynamic )\n")),(0,o.kt)("code",null,"Server-Only")," ",(0,o.kt)("br",null),(0,o.kt)("p",null,"Exports a creation to a blueprint formatted json string."),(0,o.kt)("strong",null,"Arguments:")," ",(0,o.kt)("br",null),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("code",null,"body")," [",(0,o.kt)("strong",null," body "),"]: Any body in the creation."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("code",null,"exportTransforms")," [",(0,o.kt)("strong",null," bool "),"]: Export the current world transform of bodies. Defaults to false."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("code",null,"forceDynamic")," [",(0,o.kt)("strong",null," bool "),"]: Force export to dynamic bodies. Defaults to false.")),(0,o.kt)("strong",null,"Returns:")," ",(0,o.kt)("br",null),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"[",(0,o.kt)("strong",null," string "),"]",": The blueprint json string.")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"exporttotable"},"exportToTable"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"sm.creation.exportToTable( body, exportTransforms, forceDynamic )\n")),(0,o.kt)("code",null,"Server-Only")," ",(0,o.kt)("br",null),(0,o.kt)("p",null,"Exports a creation to a blueprint Lua table."),(0,o.kt)("strong",null,"Arguments:")," ",(0,o.kt)("br",null),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("code",null,"body")," [",(0,o.kt)("strong",null," body "),"]: Any body in the creation."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("code",null,"exportTransforms")," [",(0,o.kt)("strong",null," bool "),"]: Export the current world transform of bodies. Defaults to false."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("code",null,"forceDynamic")," [",(0,o.kt)("strong",null," bool "),"]: Force export to dynamic bodies. Defaults to false.")),(0,o.kt)("strong",null,"Returns:")," ",(0,o.kt)("br",null),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"[",(0,o.kt)("strong",null," table "),"]",": The blueprint Lua table.")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"importfromfile"},"importFromFile"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"sm.creation.importFromFile( world, pathString, worldPosition, worldRotation, importTransforms, indestructible )\n")),(0,o.kt)("code",null,"Server-Only")," ",(0,o.kt)("br",null),(0,o.kt)("p",null,"Imports a blueprint json file into the world."),(0,o.kt)("p",null,"If ",(0,o.kt)("code",null,"importTransforms")," is enabled, the world position and rotation are applied to the imported transform."),(0,o.kt)("admonition",{title:"warning",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"If the blueprint was not exported with transforms, the importer will treat it as if ",(0,o.kt)("code",null,"importTransforms")," was disabled.")),(0,o.kt)("strong",null,"Arguments:")," ",(0,o.kt)("br",null),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("code",null,"world")," [",(0,o.kt)("strong",null," world "),"]: The world to import to."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("code",null,"pathString")," [",(0,o.kt)("strong",null," string "),"]: The path to the blueprint file."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("code",null,"worldPosition")," [",(0,o.kt)("strong",null," vec3 "),"]: The world position of the creation. Defaults to ",(0,o.kt)("code",null,"sm.vec3.zero()")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("code",null,"worldRotation")," [",(0,o.kt)("strong",null,"quat "),"]: The world rotation of the creation. Defaults to ",(0,o.kt)("code",null,"sm.quat.identity()")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("code",null,"importTransforms")," [",(0,o.kt)("strong",null," bool "),"]: Import world transforms from bodies. Defaults to false."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("code",null,"indestructible")," [",(0,o.kt)("strong",null," bool "),"]: (DEPRECATED, use ",(0,o.kt)("code",null,"setDestructable")," on each body in the creation.)")),(0,o.kt)("strong",null,"Returns:")," ",(0,o.kt)("br",null),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"[",(0,o.kt)("strong",null," table "),"]",": A table of bodies created from the blueprint.")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"importfromstring"},"importFromString"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"sm.creation.importFromString( world, jsonString, worldPosition, worldRotation, importTransforms, forceInactive )\n")),(0,o.kt)("code",null,"Server-Only")," ",(0,o.kt)("br",null),(0,o.kt)("p",null,"Imports a blueprint json string into the world."),(0,o.kt)("p",null,"If ",(0,o.kt)("code",null,"importTransforms")," is enabled, the world position and rotation are applied to the imported transform."),(0,o.kt)("admonition",{title:"warning",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"If the blueprint was not exported with transforms, the importer will treat it as if ",(0,o.kt)("code",null,"importTransforms")," was disabled.")),(0,o.kt)("strong",null,"Arguments:")," ",(0,o.kt)("br",null),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("code",null,"world")," [",(0,o.kt)("strong",null," world "),"]: The world to import to."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("code",null,"jsonString")," [",(0,o.kt)("strong",null," string "),"]: The blueprint json string."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("code",null,"worldPosition")," [",(0,o.kt)("strong",null," vec3 "),"]: The world position of the creation. Defaults to ",(0,o.kt)("code",null,"sm.vec3.zero()")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("code",null,"worldRotation")," [",(0,o.kt)("strong",null,"quat "),"]: The world rotation of the creation. Defaults to ",(0,o.kt)("code",null,"sm.quat.identity()")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("code",null,"importTransforms")," [",(0,o.kt)("strong",null," bool "),"]: Import world transforms from bodies. Defaults to false."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("code",null,"forceInactive")," [",(0,o.kt)("strong",null," bool "),"]: Sets whether interactables are forced inactive when imported or not. Defaults to false.")),(0,o.kt)("strong",null,"Returns:")," ",(0,o.kt)("br",null),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"[",(0,o.kt)("strong",null," table "),"]",": A table of bodies created from the blueprint.")),(0,o.kt)("hr",null))}m.isMDXComponent=!0}}]);