"use strict";(self.webpackChunksm_docs=self.webpackChunksm_docs||[]).push([[8844],{1458:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var s=r(5893),t=r(1151);const i={sidebar_position:3,title:"Constants",hide_title:!0,"sidebar-label":"Constants"},l=void 0,o={id:"Game-Script-Environment/Constants",title:"Constants",description:"Class Constants",source:"@site/docs/Game-Script-Environment/Constants.md",sourceDirName:"Game-Script-Environment",slug:"/Game-Script-Environment/Constants",permalink:"/docs/Game-Script-Environment/Constants",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Constants",hide_title:!0,"sidebar-label":"Constants"},sidebar:"tutorialSidebar",previous:{title:"Environment Table",permalink:"/docs/Game-Script-Environment/Environment_Table"},next:{title:"Common Callbacks",permalink:"/docs/Game-Script-Environment/Classes/CommonCallbacks"}},a={},c=[{value:"Class Constants",id:"class-constants",level:2},{value:"ShapeClass",id:"shapeclass",level:3},{value:"UnitClass",id:"unitclass",level:3},{value:"GameClass",id:"gameclass",level:3},{value:"HarvestableClass",id:"harvestableclass",level:3},{value:"WorldClass",id:"worldclass",level:3},{value:"ScriptableObjectClass",id:"scriptableobjectclass",level:3},{value:"Namespace Constants",id:"namespace-constants",level:2},{value:"sm",id:"sm",level:3},{value:"sm.areaTrigger.filter",id:"smareatriggerfilter",level:3},{value:"sm.audio.soundList",id:"smaudiosoundlist",level:3},{value:"sm.camera.state",id:"smcamerastate",level:3},{value:"sm.construction.constants",id:"smconstructionconstants",level:3},{value:"sm.interactable.types",id:"sminteractabletypes",level:3},{value:"sm.interactable.actions",id:"sminteractableactions",level:3},{value:"sm.interactable.connectionType",id:"sminteractableconnectiontype",level:3},{value:"sm.interactable.steering",id:"sminteractablesteering",level:3},{value:"sm.interactable.steering",id:"sminteractablesteering-1",level:3},{value:"sm.joint.types",id:"smjointtypes",level:3},{value:"sm.pathfinder.conditionProperty",id:"smpathfinderconditionproperty",level:3},{value:"sm.physics.filter",id:"smphysicsfilter",level:3},{value:"sm.physics.types",id:"smphysicstypes",level:3},{value:"sm.tool.interactState",id:"smtoolinteractstate",level:3},{value:"sm.world.ids",id:"smworldids",level:3}];function d(n){const e={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("br",{}),"\n",(0,s.jsx)(e.h2,{id:"class-constants",children:"Class Constants"}),"\n",(0,s.jsx)(e.h3,{id:"shapeclass",children:"ShapeClass"}),"\n",(0,s.jsxs)(e.p,{children:["Listed below are ",(0,s.jsx)("code",{children:"ShapeClass"})," constants that can be set like this:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",children:'MyShape = class()\r\n\r\nMyShape.colorHighlight = sm.color.new( "#ff0000" )\r\nMyShape.colorNormal = sm.color.new( "#00ff00" )\r\n--etc. etc.\n'})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"colorHighlight"})," ",(0,s.jsx)("br",{}),"\r\nSets the connection-point highlight color. ",(0,s.jsx)("br",{}),"\r\nThe connection-point is shown when using the Connect Tool and selecting the interactable. ",(0,s.jsx)("br",{}),"\r\nDefaults to white."]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"highlightColor"})," [",(0,s.jsxs)("strong",{children:[" ",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Color",children:" Color "})," "]}),"]: The connection-point's highlight color."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"colorNormal"})," ",(0,s.jsx)("br",{}),"\r\nSets the connection-point normal color. ",(0,s.jsx)("br",{}),"\r\nThe connection-point is shown when using the Connect Tool. ",(0,s.jsx)("br",{}),"\r\nDefaults to gray."]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"normalColor"})," [",(0,s.jsxs)("strong",{children:[" ",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Color",children:" Color "})," "]}),"]: The connection-point's normal color."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"connectionInput"})," ",(0,s.jsx)("br",{}),"\r\nSets the input connection type. ",(0,s.jsx)("br",{})]}),"\n",(0,s.jsxs)(e.p,{children:["See ",(0,s.jsx)(e.a,{href:"/docs/Game-Script-Environment/Constants#sminteractableconnectiontype",children:"sm.interactable.connectionType"})," for details. ",(0,s.jsx)("br",{}),"\r\nDefaults to 0, no input."]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"connectionType"})," [",(0,s.jsx)("strong",{children:" int "}),"]: The input connection type."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"connectionOutput"})," ",(0,s.jsx)("br",{}),"\r\nSets the output connection type. ",(0,s.jsx)("br",{})]}),"\n",(0,s.jsxs)(e.p,{children:["See ",(0,s.jsx)(e.a,{href:"/docs/Game-Script-Environment/Constants#sminteractableconnectiontype",children:"sm.interactable.connectionType"})," for details. ",(0,s.jsx)("br",{}),"\r\nDefaults to 0, no output."]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"connectionType"})," [",(0,s.jsx)("strong",{children:" int "}),"]: The output connection type."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"maxParentCount"})," ",(0,s.jsx)("br",{}),"\r\nSets the maximum number of allowed parent connections - the number of input connections. ",(0,s.jsx)("br",{}),"\r\nDefaults to 0, no allowed parent connections."]}),"\n",(0,s.jsx)(e.admonition,{title:"note",type:"info",children:(0,s.jsxs)(e.p,{children:["Implement ",(0,s.jsx)(e.a,{href:"/docs/Game-Script-Environment/Classes/ShapeClass#getavailableparentconnectioncount",children:"client_getAvailableParentConnectionCount"})," to control specific types."]})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"maxParents"})," [",(0,s.jsx)("strong",{children:" int "}),"]: The maximum amount of input connections."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"maxChildCount"})," ",(0,s.jsx)("br",{}),"\r\nSets the maximum number of allowed child connections - the number of output connections. ",(0,s.jsx)("br",{}),"\r\nDefaults to 0, no allowed child connections."]}),"\n",(0,s.jsx)(e.admonition,{title:"note",type:"info",children:(0,s.jsxs)(e.p,{children:["Implement ",(0,s.jsx)(e.a,{href:"/docs/Game-Script-Environment/Classes/ShapeClass#getavailablechildconnectioncount",children:"client_getAvailableChildConnectionCount"})," to control specific types."]})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"maxChildren"})," [",(0,s.jsx)("strong",{children:" int "}),"]: The maximum amount of output connections."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"poseWeightCount"})," ",(0,s.jsx)("br",{}),"\r\nSets the number of animation poses the shape's model is able to use. ",(0,s.jsx)("br",{})]}),"\n",(0,s.jsx)(e.p,{children:"Value are integers 0-3 (Defaults to 0, no poses)."}),"\n",(0,s.jsxs)(e.p,{children:["A value greater that 0 indicates that the renderable's mesh is set up to blend into ",(0,s.jsx)("code",{children:"pose0"}),", ",(0,s.jsx)("code",{children:"pose1"}),", ",(0,s.jsx)("code",{children:"pose2"}),". ",(0,s.jsx)("br",{})]}),"\n",(0,s.jsx)(e.p,{children:"This is, for example, used to move the lever on the engine."}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"poseWeightCount"})," [",(0,s.jsx)("strong",{children:" int "}),"]: The number of animation poses."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"unitclass",children:"UnitClass"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"isSaveObject"})," ",(0,s.jsx)("br",{}),"\r\nEnables or disables saving of this unit. (Defaults to true) ",(0,s.jsx)("br",{})]}),"\n",(0,s.jsxs)(e.p,{children:["If enabled, the ",(0,s.jsx)(e.a,{href:"/docs/Game-Script-Environment/Userdata/Unit",children:"Unit"})," will be recreated when loading a game. Otherwise, the ",(0,s.jsx)(e.a,{href:"/docs/Game-Script-Environment/Userdata/Unit",children:"Unit"})," is considered a temporary object."]}),"\n",(0,s.jsx)(e.admonition,{title:"note",type:"info",children:(0,s.jsxs)(e.p,{children:["If disabled, ",(0,s.jsx)("code",{children:"self.storage"})," can not be used."]})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"enable"})," [",(0,s.jsx)("strong",{children:" bool "}),"]: A boolean indicating whether saving the unit is enabled or not."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"gameclass",children:"GameClass"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"defaultInventorySize"})," ",(0,s.jsx)("br",{}),"\r\nSets default player inventory size. ",(0,s.jsx)("br",{}),"\r\nDefaults to 40."]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"size"})," [",(0,s.jsx)("strong",{children:" int "}),"]: The inventory size."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"enableAggro"})," ",(0,s.jsx)("br",{}),"\r\nEnables or disables enemy aggression. ",(0,s.jsx)("br",{}),"\r\nDefaults to true."]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"enable"})," [",(0,s.jsx)("strong",{children:" bool "}),"]: A boolean indicating whether enemy aggression is enabled or not."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"enableAmmoConsumption"})," ",(0,s.jsx)("br",{}),"\r\nEnables or disables ammo consumption. ",(0,s.jsx)("br",{}),"\r\nDefaults to false."]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"enable"})," [",(0,s.jsx)("strong",{children:" bool "}),"]: A boolean indicating whether ammo consumption is enabled or not."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"enableFuelConsumption"})," ",(0,s.jsx)("br",{}),"\r\nEnables or disables fuel consumption. ",(0,s.jsx)("br",{}),"\r\nDefaults to false."]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"enable"})," [",(0,s.jsx)("strong",{children:" bool "}),"]: A boolean indicating whether fuel consumption is enabled or not."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"enableLimitedInventory"})," ",(0,s.jsx)("br",{}),"\r\nEnables or disables limited inventory. ",(0,s.jsx)("br",{}),"\r\nDefaults to false."]}),"\n",(0,s.jsxs)(e.p,{children:["When limited in inventory is on, items have a limited amount. ",(0,s.jsx)("br",{}),'\r\nWhen off, the player has access to all items. (Except for items with json value "hidden": true)']}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"enable"})," [",(0,s.jsx)("strong",{children:" bool "}),"]: A boolean indicating whether the inventory is limited or not."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"enableRestrictions"})," ",(0,s.jsx)("br",{}),"\r\nEnables or disables build restrictions. ",(0,s.jsx)("br",{}),"\r\nDefaults to false."]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"enable"})," [",(0,s.jsx)("strong",{children:" bool "}),"]: A boolean indicating whether building is restricted or not."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"enableUpgrade"})," ",(0,s.jsx)("br",{}),"\r\nEnables or disables interactable part upgrade. ",(0,s.jsx)("br",{}),"\r\nDefaults to false."]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"enable"})," [",(0,s.jsx)("strong",{children:" bool "}),"]: A boolean indicating whether part upgrades are enabled or not."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"harvestableclass",children:"HarvestableClass"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"poseWeightCount"})," ",(0,s.jsx)("br",{}),"\r\nSets the number of animation poses the harvestable's model is able to use. ",(0,s.jsx)("br",{})]}),"\n",(0,s.jsx)(e.p,{children:"Value are integers 0-3 (Defaults to 0, no poses)."}),"\n",(0,s.jsxs)(e.p,{children:["A value greater that 0 indicates that the renderable's mesh is set up to blend into ",(0,s.jsx)("code",{children:"pose0"}),", ",(0,s.jsx)("code",{children:"pose1"}),", ",(0,s.jsx)("code",{children:"pose2"}),". ",(0,s.jsx)("br",{})]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"highlightColor"})," [",(0,s.jsxs)("strong",{children:[" ",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Color",children:" Color "})," "]}),"]: The connection-point's normal color."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"worldclass",children:"WorldClass"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"cellMaxX"})," ",(0,s.jsx)("br",{}),"\r\nTerrain generation maximum cell position in X axis. ",(0,s.jsx)("br",{}),"\r\nDefault = 0"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"maxX"})," [",(0,s.jsx)("strong",{children:" int "}),"]: The maximum X cell position."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"cellMaxY"})," ",(0,s.jsx)("br",{}),"\r\nTerrain generation maximum cell position in Y axis. ",(0,s.jsx)("br",{}),"\r\nDefault = 0"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"maxY"})," [",(0,s.jsx)("strong",{children:" int "}),"]: The maximum Y cell position."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"cellMinX"})," ",(0,s.jsx)("br",{}),"\r\nTerrain generation minimum cell position in X axis. ",(0,s.jsx)("br",{}),"\r\nDefault = 0"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"minX"})," [",(0,s.jsx)("strong",{children:" int "}),"]: The minimum X cell position."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"cellMinY"})," ",(0,s.jsx)("br",{}),"\r\nTerrain generation minimum cell position in Y axis. ",(0,s.jsx)("br",{}),"\r\nDefault = 0"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"minY"})," [",(0,s.jsx)("strong",{children:" int "}),"]: The minimum Y cell position."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"enableAssets"})," ",(0,s.jsx)("br",{}),"\r\nEnables or disables terrain assets for this world. ",(0,s.jsx)("br",{}),"\r\nDefault = true"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"enable"})," [",(0,s.jsx)("strong",{children:" bool "}),"]: A boolean indicating whether terrain assets are enabled or not."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"enableClutter"})," ",(0,s.jsx)("br",{}),"\r\nEnables or disables terrain clutter for this world. ",(0,s.jsx)("br",{}),"\r\nDefault = true"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"enable"})," [",(0,s.jsx)("strong",{children:" bool "}),"]: A boolean indicating whether terrain clutter is enabled or not."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"enableCreations"})," ",(0,s.jsx)("br",{}),"\r\nEnables or disables creations for this world. ",(0,s.jsx)("br",{}),"\r\nDefault = true"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"enable"})," [",(0,s.jsx)("strong",{children:" bool "}),"]: A boolean indicating whether creations are enabled or not."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"enableHarvestables"})," ",(0,s.jsx)("br",{}),"\r\nEnables or disables terrain harvestables for this world. ",(0,s.jsx)("br",{}),"\r\nDefault = true"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"enable"})," [",(0,s.jsx)("strong",{children:" bool "}),"]: A boolean indicating whether terrain harvestables are enabled or not."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"enableKinematics"})," ",(0,s.jsx)("br",{}),"\r\nEnables or disables terrain kinematics for this world. ",(0,s.jsx)("br",{}),"\r\nDefault = true"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"enable"})," [",(0,s.jsx)("strong",{children:" bool "}),"]: A boolean indicating whether terrain kinematics are enabled or not."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"enableNodes"})," ",(0,s.jsx)("br",{}),"\r\nEnables or disables nodes for this world. ",(0,s.jsx)("br",{}),"\r\nDefault = true"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"enable"})," [",(0,s.jsx)("strong",{children:" bool "}),"]: A boolean indicating whether nodes are enabled or not."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"enableSurface"})," ",(0,s.jsx)("br",{}),"\r\nEnables or disables terrain surface for this world. ",(0,s.jsx)("br",{}),"\r\nDefault = true"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"enable"})," [",(0,s.jsx)("strong",{children:" bool "}),"]: A boolean indicating whether the terrain surface is enabled or not."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"groundMaterialSet"})," ",(0,s.jsx)("br",{}),"\r\nSets the ground material set used by the terrain. ",(0,s.jsx)("br",{}),'\r\nDefault = "$GAME_DATA/Terrain/Materials/gnd_standard_materialset.json"']}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"materialSet"})," [",(0,s.jsx)("strong",{children:" string "}),"]: The full ",(0,s.jsx)("code",{children:"$-"})," file path to the material set."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"isIndoor"})," ",(0,s.jsx)("br",{}),"\r\nEnables or disables indoor mode. ",(0,s.jsx)("br",{}),"\r\nDefault = false"]}),"\n",(0,s.jsxs)(e.p,{children:["Indoor worlds have only one terrain cell, at ",(0,s.jsx)("code",{children:"0, 0"})]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"enable"})," [",(0,s.jsx)("strong",{children:" bool "}),"]: A boolean indicating whether indoor mode is enabled or not."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"renderMode"})," ",(0,s.jsx)("br",{}),"\r\nSets the render mode for this world. ",(0,s.jsx)("br",{}),'\r\nDefault = "outdoor"']}),"\n",(0,s.jsx)(e.p,{children:'Valid = "outdoor", "challenge", "warehouse"'}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"renderMode"})," [",(0,s.jsx)("strong",{children:" string "}),"]: The render mode."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"terrainScript"})," ",(0,s.jsx)("br",{}),"\r\nSets the script used to generate terrain. ",(0,s.jsx)("br",{})]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"script"})," [",(0,s.jsx)("strong",{children:" string "}),"]: The full ",(0,s.jsx)("code",{children:"$-"})," file path to the terrain generation script."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"worldBorder"})," ",(0,s.jsx)("br",{}),"\r\nAdds borders to the world to prevent objects from falling through the ground. ",(0,s.jsx)("br",{}),"\r\nDefaults to true."]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"enable"})," [",(0,s.jsx)("strong",{children:" bool "}),"]: Whether world borders are enabled or not."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"scriptableobjectclass",children:"ScriptableObjectClass"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("strong",{children:"isSaveObject"})," ",(0,s.jsx)("br",{}),"\r\nEnables or disables saving of this scriptable object. ",(0,s.jsx)("br",{}),"\r\nDefault = false"]}),"\n",(0,s.jsxs)(e.p,{children:["If enabled, the ",(0,s.jsx)(e.a,{href:"/docs/Game-Script-Environment/Userdata/ScriptableObject",children:"ScriptableObject"})," will be recreated when loading a game. ",(0,s.jsx)("br",{}),"\r\nOtherwise, the ",(0,s.jsx)(e.a,{href:"/docs/Game-Script-Environment/Userdata/ScriptableObject",children:"ScriptableObject"})," is considered a temporary object. ",(0,s.jsx)("br",{})]}),"\n",(0,s.jsx)(e.admonition,{title:"note",type:"info",children:(0,s.jsx)(e.p,{children:"If disabled, self.storage can not be used."})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)("code",{children:"enable"})," [",(0,s.jsx)("strong",{children:" bool "}),"]: A boolean indicating whether saving this object is enabled or not."]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h2,{id:"namespace-constants",children:"Namespace Constants"}),"\n",(0,s.jsx)(e.h3,{id:"sm",children:"sm"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("code",{children:"sm.isHost"})," [",(0,s.jsx)("strong",{children:" bool "}),"]: Whether the game is currently running on the hosting player's computer."]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)("code",{children:"sm.version"})," [",(0,s.jsx)("strong",{children:" string "}),"]: The current version of the game as a string."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"smareatriggerfilter",children:"sm.areaTrigger.filter"}),"\n",(0,s.jsxs)(e.p,{children:["Filters are used to specify what object types an area trigger is able to detect. ",(0,s.jsx)("br",{}),"\r\nIf an area trigger is created with a filter, it will only react to objects of that type. ",(0,s.jsx)("br",{}),"\r\nFilters can be combined by adding them. ",(0,s.jsx)("br",{})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",metastring:'title="Table Contents"',children:"{\r\n\tdynamicBody = 1,\r\n\tstaticBody = 2,\r\n\tcharacter = 4,\r\n\tareatrigger = 8,\r\n\tharvestable = 512,\r\n\tlift = 1024,\r\n\tvoxelTerrain = 32768,\r\n\tall = 34319\r\n}\n"})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"smaudiosoundlist",children:"sm.audio.soundList"}),"\n",(0,s.jsxs)(e.p,{children:["A table containing all sounds that can be played using ",(0,s.jsx)(e.a,{href:"/docs/Game-Script-Environment/Static-Functions/sm.audio#play",children:"sm.audio.play"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",metastring:'title="Table Contents"',children:'{   \r\n    "Ambient - Birds",\r\n    "Ambient - Challenge",\r\n    "Ambient - Field",\r\n    "Blueprint - Build",\r\n    "Blueprint - Camera",\r\n    "Blueprint - Close",\r\n    "Blueprint - Delete",\r\n    "Blueprint - Open",\r\n    "Blueprint - Save",\r\n    "Blueprint - Select",\r\n    "Blueprint - Share",\r\n    "Brake",\r\n    "Button off",\r\n    "Button on",\r\n    "Challenge - Fall",\r\n    "Challenge - Start",\r\n    "Challenge - Supervisor generic",\r\n    "Character crouch",\r\n    "Character get up",\r\n    "Character hit",\r\n    "Character jump",\r\n    "Character land",\r\n    "Character movement",\r\n    "Character movement crouched",\r\n    "Character wind",\r\n    "Collision - Debris",\r\n    "Collision - Multiple",\r\n    "Collision - Rolling",\r\n    "Collision - Single",\r\n    "Collision - Sliding",\r\n    "Collision - Vehicle",\r\n    "ConnectTool",\r\n    "ConnectTool - Equip",\r\n    "ConnectTool - Idle",\r\n    "ConnectTool - Released",\r\n    "ConnectTool - Rotate",\r\n    "ConnectTool - Selected",\r\n    "ConnectTool - Unequip",\r\n    "Construction - Block attached to joint",\r\n    "Construction - Block placed",\r\n    "Construction - Resize",\r\n    "Dancebass",\r\n    "Dancedrum",\r\n    "Dancepad",\r\n    "Dancevoice",\r\n    "Destruction - Block destroyed",\r\n    "Destruction - Resize",\r\n    "ElectricEngine",\r\n    "GUI Backpack closed",\r\n    "GUI Backpack opened",\r\n    "GUI Inventory highlight",\r\n    "GUI Item drag",\r\n    "GUI Item released",\r\n    "GUI Quickbar highlight",\r\n    "GUI Shape rotate",\r\n    "Gas Explosion",\r\n    "Gas Leak",\r\n    "GasEngine",\r\n    "Handbook - Close",\r\n    "Handbook - Equip",\r\n    "Handbook - Highlight",\r\n    "Handbook - Open",\r\n    "Handbook - Turn page",\r\n    "Handbook - Unequip",\r\n    "Horn",\r\n    "Lever off",\r\n    "Lever on",\r\n    "Lift - Pickup object",\r\n    "Lift placed",\r\n    "Lift usage",\r\n    "Music",\r\n    "PaintTool - Close",\r\n    "PaintTool - ColorPick",\r\n    "PaintTool - Equip",\r\n    "PaintTool - Erase",\r\n    "PaintTool - Open",\r\n    "PaintTool - Paint",\r\n    "PaintTool - Reload",\r\n    "PaintTool - Unequip",\r\n    "Phaser",\r\n    "Piston",\r\n    "PotatoRifle - Equip",\r\n    "PotatoRifle - NoAmmo",\r\n    "PotatoRifle - Reload",\r\n    "PotatoRifle - Shoot",\r\n    "PotatoRifle - Unequip",\r\n    "Radio",\r\n    "RaftShark",\r\n    "Retrobass",\r\n    "Retrodrum",\r\n    "Retrofmblip",\r\n    "Retrovoice",\r\n    "Retrowildblip",\r\n    "Reverb - Challenge",\r\n    "Reverb - Field",\r\n    "Seat seated",\r\n    "Seat unseated",\r\n    "Sensor off",\r\n    "Sensor on",\r\n    "SequenceController",\r\n    "SequenceController change rotation",\r\n    "Sledgehammer - Equip",\r\n    "Sledgehammer - Swing",\r\n    "Sledgehammer - Unequip",\r\n    "Suspension",\r\n    "Thruster",\r\n    "Thruster dust",\r\n    "Toilet seated",\r\n    "Toilet unseated",\r\n    "Weapon - Hit",\r\n    "WeldTool - Case 1",\r\n    "WeldTool - Case 2",\r\n    "WeldTool - Equip",\r\n    "WeldTool - Error",\r\n    "WeldTool - Sparks",\r\n    "WeldTool - Unequip",\r\n    "WeldTool - Weld"\r\n}\n'})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"smcamerastate",children:"sm.camera.state"}),"\n",(0,s.jsxs)(e.p,{children:["Camera states are used to specify how the camera will view the world. ",(0,s.jsx)("br",{}),"\r\nThe default state is meant for normal gameplay and the first-person and third-person states are meant to be used in cutcenes."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",metastring:'title="Table Contents"',children:"{   \r\n    default = 1,\r\n    cutsceneFP = 2,\r\n    cutsceneTP = 3,\r\n    forcedTP = 4,\r\n    gyroSeatFP = 5,\r\n    gyroSeatTP = 6\r\n}\n"})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"smconstructionconstants",children:"sm.construction.constants"}),"\n",(0,s.jsx)(e.p,{children:"Constants used by the construction system."}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"subdivideRatio - The physical size of one block."}),"\n",(0,s.jsx)(e.li,{children:"subdivideRatio_2 - The physical size of one block divided by two."}),"\n",(0,s.jsx)(e.li,{children:"subdivisions - 1 dividided by subdivideRatio."}),"\n",(0,s.jsx)(e.li,{children:"shapeSpacing - Bias value."}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",metastring:'title="Table Contents"',children:"{   \r\n    subdivideRatio = 0.25,\r\n    subdivideRatio_2 = 0.125,\r\n    subdivisions = 4,\r\n    shapeSpacing = 0.004 \r\n}\n"})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"sminteractabletypes",children:"sm.interactable.types"}),"\n",(0,s.jsx)(e.p,{children:"The table of types that an interactable can be."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",metastring:'title="Table Contents"',children:'{\r\n    "electricEngine",\r\n    "gasEngine",\r\n    "steering",\r\n    "seat",\r\n    "controller",\r\n    "button",\r\n    "lever",\r\n    "sensor",\r\n    "thruster",\r\n    "radio",\r\n    "horn",\r\n    "tone",\r\n    "logic",\r\n    "timer",\r\n    "particlePreview",\r\n    "spring",\r\n    "pointLight",\r\n    "spotLight",\r\n    "chest",\r\n    "itemStack",\r\n    "scripted",\r\n    "piston", \r\n    "simpleInteractive",\r\n    "camera",\r\n    "waypoint",\r\n    "survivalThruster",\r\n    "survivalPiston",\r\n    "survivalSpring",\r\n    "survivalSequence",\r\n    "survivalSensor"\r\n}\n'})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"sminteractableactions",children:"sm.interactable.actions"}),"\n",(0,s.jsxs)(e.p,{children:["A table containing all key actions that can be received by an interactable's ",(0,s.jsx)("code",{children:"client_onAction"})," callback."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",metastring:'title="Table Contents"',children:"{\r\n    none = 0,\r\n    left = 1,\r\n    right = 2,\r\n    forward = 3,\r\n    backward = 4,\r\n    item0 = 5,\r\n    item1 = 6,\r\n    item2 = 7,\r\n    item3 = 8,\r\n    item4 = 9,\r\n    item5 = 10,\r\n    item6 = 11,\r\n    item8 = 13,\r\n    item7 = 12,\r\n    item9 = 14,\r\n    use = 15,\r\n    jump = 16,\r\n    exit = 17,\r\n    attack = 18,\r\n    create = 19,\r\n    zoomIn = 20,\r\n    zoomOut = 21\r\n}\n"})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"sminteractableconnectiontype",children:"sm.interactable.connectionType"}),"\n",(0,s.jsx)(e.p,{children:"A table containing all available connection types for interactables."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",metastring:'title="Table Contents"',children:"{\r\n    none = 0,\r\n    logic = 1,\r\n    power = 2,\r\n    bearing = 4,\r\n    seated = 8,\r\n    piston = 16,\r\n    gasoline = 256,\r\n    electricity = 512,\r\n    water = 1024,\r\n    ammo = 2048\r\n}\n"})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"sminteractablesteering",children:"sm.interactable.steering"}),"\n",(0,s.jsx)(e.p,{children:"Flags used with the steering component."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",metastring:'title="Table Contents"',children:"{\r\n    left = 1,\r\n    right = 2,\r\n    forward = 4,\r\n    backward = 8\r\n}\n"})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"sminteractablesteering-1",children:"sm.interactable.steering"}),"\n",(0,s.jsx)(e.p,{children:"A table of available interactable types."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",metastring:'title="Table Contents"',children:'{\r\n"electricEngine",\r\n"gasEngine",\r\n"steering",\r\n"seat",\r\n"controller",\r\n"button",\r\n"lever",\r\n"sensor",\r\n"thruster",\r\n"radio",\r\n"horn",\r\n"tone",\r\n"logic",\r\n"timer",\r\n"particlePreview",\r\n"spring",\r\n"pointLight",\r\n"spotLight",\r\n"chest",\r\n"scripted",\r\n"piston",\r\n"simpleInteractive",\r\n}\n'})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"smjointtypes",children:"sm.joint.types"}),"\n",(0,s.jsx)(e.p,{children:"A table of joint types."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",metastring:'title="Table Contents"',children:'{\r\n    "bearing",\r\n    "piston"\r\n}\n'})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"smpathfinderconditionproperty",children:"sm.pathfinder.conditionProperty"}),"\n",(0,s.jsx)(e.p,{children:"A table of condition link types."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",metastring:'title="Table Contents"',children:"{\r\n    height = 0,\r\n    target = 1,\r\n    none = 2\r\n}\n"})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"smphysicsfilter",children:"sm.physics.filter"}),"\n",(0,s.jsxs)(e.p,{children:["A table of physics filter types used for things like ",(0,s.jsx)(e.a,{href:"/docs/Game-Script-Environment/Static-Functions/sm.physics#raycast",children:"raycasts"}),"."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",metastring:'title="Table Contents"',children:"{\r\n    dynamicBody = 1,\r\n    staticBody = 2,\r\n    character = 4,\r\n    areaTrigger = 8,\r\n    joints = 4096,\r\n    terrainSurface = ?,\r\n    terrainAsset = ?,\r\n    harvestable = ?,\r\n    static = ?,\r\n    default = 6023,\r\n    all = -1\r\n}\n"})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"smphysicstypes",children:"sm.physics.types"}),"\n",(0,s.jsxs)(e.p,{children:["Physics types are used to define an object's characteristics is in the physics world. ",(0,s.jsx)("br",{}),"\r\nUpon a raycast or collision detection, these types are used to find out what object was intersected."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",metastring:'title="Table Contents"',children:'{\r\n    "invalid",          --No object.\r\n    "terrainSurface",   --The ground.\r\n    "terrainAsset",     --Trees and boulders.\r\n    "lift",             --A Lift.\r\n    "body",             --A Body.\r\n    "character",        --A Character.\r\n    "joint",            --A Joint.\r\n    "harvestable",      --A Harvestable.\r\n    "vision"            --A collision area used by sensors.\r\n}\n'})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"smtoolinteractstate",children:"sm.tool.interactState"}),"\n",(0,s.jsxs)(e.p,{children:["The interact state describe what kind of interaction is made. ",(0,s.jsx)("br",{}),"\r\nThis is used to check whether a mouse button or key was just pressed, held, etc."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",metastring:'title="Table Contents"',children:"{\r\n    null = 0,   --No interaction.\r\n    start = 1,  --The key was just pressed.\r\n    hold = 2,   --The key is held down.\r\n    stop = 3    --The key was just released.\r\n}\n"})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h3,{id:"smworldids",children:"sm.world.ids"}),"\n",(0,s.jsx)(e.p,{children:"Predefined special world ids."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-lua",metastring:'title="Table Contents"',children:"{\r\n    anyWorld = 65535,\r\n    noWorld = 65534\r\n}\n"})}),"\n",(0,s.jsx)(e.hr,{})]})}function h(n={}){const{wrapper:e}={...(0,t.a)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},1151:(n,e,r)=>{r.d(e,{Z:()=>o,a:()=>l});var s=r(7294);const t={},i=s.createContext(t);function l(n){const e=s.useContext(i);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),s.createElement(i.Provider,{value:e},n.children)}}}]);