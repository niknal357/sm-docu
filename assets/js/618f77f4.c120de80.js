"use strict";(self.webpackChunksm_docs=self.webpackChunksm_docs||[]).push([[3778],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>k});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var i=n.createContext({}),c=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(a),m=l,k=p["".concat(i,".").concat(m)]||p[m]||d[m]||r;return a?n.createElement(k,o(o({ref:t},u),{},{components:a})):n.createElement(k,o({ref:t},u))}));function k(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,o=new Array(r);o[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[p]="string"==typeof e?e:l,o[1]=s;for(var c=2;c<r;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},3471:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var n=a(7462),l=(a(7294),a(3905));const r={sidebar_position:7,title:"HarvestableClass",hide_title:!0,"sidebar-label":"HarvestableClass"},o=void 0,s={unversionedId:"Game-Script-Environment/Classes/HarvestableClass",id:"Game-Script-Environment/Classes/HarvestableClass",title:"HarvestableClass",description:"HarvestableClass",source:"@site/docs/Game-Script-Environment/Classes/HarvestableClass.md",sourceDirName:"Game-Script-Environment/Classes",slug:"/Game-Script-Environment/Classes/HarvestableClass",permalink:"/docs/Game-Script-Environment/Classes/HarvestableClass",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Game-Script-Environment/Classes/HarvestableClass.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,title:"HarvestableClass",hide_title:!0,"sidebar-label":"HarvestableClass"},sidebar:"tutorialSidebar",previous:{title:"PlayerClass",permalink:"/docs/Game-Script-Environment/Classes/PlayerClass"},next:{title:"GameClass",permalink:"/docs/Game-Script-Environment/Classes/GameClass"}},i={},c=[{value:"HarvestableClass",id:"harvestableclass",level:3},{value:"Server + Client",id:"server--client",level:2},{value:"onProjectile",id:"onprojectile",level:3},{value:"onCollision",id:"oncollision",level:3},{value:"onMelee",id:"onmelee",level:3},{value:"canErase",id:"canerase",level:3},{value:"Server-only",id:"server-only",level:2},{value:"onUnload",id:"onunload",level:3},{value:"onReceiveUpdate",id:"onreceiveupdate",level:3},{value:"onExplosion",id:"onexplosion",level:3},{value:"onRemoved",id:"onremoved",level:3},{value:"Client-only",id:"client-only",level:2},{value:"onInteract",id:"oninteract",level:3},{value:"canInteract",id:"caninteract",level:3},{value:"onAction",id:"onaction",level:3}],u={toc:c},p="wrapper";function d(e){let{components:t,...a}=e;return(0,l.kt)(p,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("br",null),(0,l.kt)("h3",{id:"harvestableclass"},"HarvestableClass"),(0,l.kt)("p",null,"A script class that is instanced for every ",(0,l.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Harvestable"},"Harvestable")," in the game."),(0,l.kt)("p",null,"A tree or a plant that can be harvested is a typical case of a harvestable."),(0,l.kt)("p",null,"The class can receive events sent with ",(0,l.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Static-Functions/sm.event#sendtoharvestable"},"sm.event.sendToHarvestable"),"."),(0,l.kt)("p",null,"The fields below are accessed using ",(0,l.kt)("code",null,"self.fieldName")," in the HarvestableClass script:"),(0,l.kt)("strong",null,"Fields:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/Game-Script-Environment/Userdata/Harvestable"},"Harvestable")),(0,l.kt)("td",{parentName:"tr",align:null},"harvestable"),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("a",{parentName:"td",href:"/docs/Game-Script-Environment/Userdata/Harvestable"},"Harvestable")," game object belonging to this class instance.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/Game-Script-Environment/Userdata/Network"},"Network")),(0,l.kt)("td",{parentName:"tr",align:null},"network"),(0,l.kt)("td",{parentName:"tr",align:null},"A ",(0,l.kt)("a",{parentName:"td",href:"/docs/Game-Script-Environment/Userdata/Network"},"Network")," object that can be used to send data between client and server.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/Game-Script-Environment/Userdata/Storage"},"Storage")),(0,l.kt)("td",{parentName:"tr",align:null},"storage"),(0,l.kt)("td",{parentName:"tr",align:null},"A server-side ",(0,l.kt)("a",{parentName:"td",href:"/docs/Game-Script-Environment/Userdata/Storage"},"Storage")," object that can be used to save and load data to/from the world database.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"any"),(0,l.kt)("td",{parentName:"tr",align:null},"data"),(0,l.kt)("td",{parentName:"tr",align:null},"Data from the ",(0,l.kt)("code",null,"data")," entry in the harvestable's JSON file entry.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"any"),(0,l.kt)("td",{parentName:"tr",align:null},"params"),(0,l.kt)("td",{parentName:"tr",align:null},"Parameters given to ",(0,l.kt)("code",null,"sm.harvestable.create")," or set in the terrain generation script.")))),(0,l.kt)("strong",null,"Constants:")," ",(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Constants#harvestableclass"},"poseWeightCount")),(0,l.kt)("strong",null,"Callbacks:")," ",(0,l.kt)("br",null),(0,l.kt)("h2",{id:"server--client"},"Server + Client"),(0,l.kt)("h3",{id:"onprojectile"},"onProjectile"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"function HarvestableClass.server_onProjectile( self, position, airTime, velocity, projectileName, shooter, damage, customData, normal, uuid )\nend\nfunction HarvestableClass.client_onProjectile( self, position, airTime, velocity, projectileName, shooter, damage, customData, normal, uuid )\nend\n")),(0,l.kt)("p",null,"Called when the ",(0,l.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Harvestable"},"Harvestable")," is hit by a projectile."),(0,l.kt)("admonition",{title:"note",type:"info"},(0,l.kt)("p",{parentName:"admonition"},"If the shooter is destroyed before the projectile hits, the shooter value will be nil.")),(0,l.kt)("strong",null,"Arguments:")," ",(0,l.kt)("br",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"self")," [",(0,l.kt)("strong",null," table "),"]: The class instance."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"position")," [",(0,l.kt)("strong",null," vec3 "),"]: The position in world space where the projectile hit the Harvestable."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"airTime")," [",(0,l.kt)("strong",null," number "),"]: The time, in seconds, that the projectile spent flying before the hit."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"velocity")," [",(0,l.kt)("strong",null," vec3 "),"]: The velocity of the projectile at impact."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"projectileName")," [",(0,l.kt)("strong",null," string "),"]: The name of the projectile. (Legacy, use uuid instead)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"shooter")," [",(0,l.kt)("strong",null," player/unit/shape/harvestable/nil "),"]: The shooter. Can be a Player, Unit, Shape, Harvestable or nil if unknown."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"damage")," [",(0,l.kt)("strong",null," int "),"]: The damage value of the projectile."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"customData")," [",(0,l.kt)("strong",null," any "),"]: A Lua object that can be defined at shoot time using ",(0,l.kt)("code",null,"sm.projectile.customProjectileAttack")," or any other custom version."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"normal")," [",(0,l.kt)("strong",null," vec3 "),"]: The normal at the point of impact."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"uuid")," [",(0,l.kt)("strong",null," uuid "),"]: The uuid of the projectile.")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"oncollision"},"onCollision"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"function HarvestableClass.server_onCollision( self, other, position, selfPointVelocity, otherPointVelocity, normal )\nend\nfunction HarvestableClass.client_onCollision( self, other, position, selfPointVelocity, otherPointVelocity, normal )\nend\n")),(0,l.kt)("p",null,"Called when the ",(0,l.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Harvestable"},"Harvestable")," collides with another object."),(0,l.kt)("strong",null,"Arguments:")," ",(0,l.kt)("br",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"self")," [",(0,l.kt)("strong",null," table "),"]: The class instance."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"other")," [",(0,l.kt)("strong",null," shape/character/harvestable/lift/nil "),"]: The other object. Nil if terrain."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"position")," [",(0,l.kt)("strong",null," player/nil "),"]: The position in world space where the collision occurred."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"selfPointVelocity")," [",(0,l.kt)("strong",null," int "),"]: The velocity that that the Harvestable had at the point of collision."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"otherPointVelocity")," [",(0,l.kt)("strong",null," number "),"]: The velocity that that the other object had at the point of collision."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"normal")," [",(0,l.kt)("strong",null," vec3 "),"]: The collision normal between the Harvestable and the other object.")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"onmelee"},"onMelee"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"function HarvestableClass.server_onMelee( self, position, attacker, damage, power, direction, normal )\nend\nfunction HarvestableClass.client_onMelee( self, position, attacker, damage, power, direction, normal )\nend\n")),(0,l.kt)("p",null,"Called when the ",(0,l.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Harvestable"},"Harvestable")," is hit by a melee attack."),(0,l.kt)("admonition",{title:"note",type:"info"},(0,l.kt)("p",{parentName:"admonition"},"If the attacker is destroyed before the hit lands, the attacker value will be nil.")),(0,l.kt)("strong",null,"Arguments:")," ",(0,l.kt)("br",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"self")," [",(0,l.kt)("strong",null," table "),"]: The class instance."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"position")," [",(0,l.kt)("strong",null," vec3 "),"]: The position in world space where the Harvestable was hit."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"attacker")," [",(0,l.kt)("strong",null," player/nil "),"]: The attacker. Can be a Player or nil if unknown. Attacks made by a Unit will be nil on the client."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"damage")," [",(0,l.kt)("strong",null," int "),"]: The damage value of the melee hit."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"power")," [",(0,l.kt)("strong",null," number "),"]: The physical impact of the hit."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"direction")," [",(0,l.kt)("strong",null," vec3 "),"]: The direction of the melee attack."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"normal")," [",(0,l.kt)("strong",null," vec3 "),"]: The normal at the point of impact.")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"canerase"},"canErase"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"function HarvestableClass.server_canErase( self )\n    return true --true or false, default false\nend\nfunction HarvestableClass.client_canErase( self )\n    return true --true or false, default false\nend\n")),(0,l.kt)("p",null,"Called to check whether the ",(0,l.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Harvestable"},"Harvestable")," can be erased at this moment."),(0,l.kt)("strong",null,"Arguments:")," ",(0,l.kt)("br",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"self")," [",(0,l.kt)("strong",null," table "),"]: The class instance.")),(0,l.kt)("strong",null,"Returns:")," ",(0,l.kt)("br",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"[",(0,l.kt)("strong",null," bool "),"]",': A boolean indicating whether the Harvestable can be erased or not. Defaults to "removable" json value which defaults to false.')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"server-only"},"Server-only"),(0,l.kt)("h3",{id:"onunload"},"onUnload"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"function HarvestableClass.server_onUnload( self )\nend\n")),(0,l.kt)("p",null,"Called when the ",(0,l.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Harvestable"},"Harvestable")," is unloaded from the game because no ",(0,l.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Player"},"Player"),"'s ",(0,l.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Character"},"Character")," is close enough to it. ",(0,l.kt)("br",null),"\nAlso called when exiting the game."),(0,l.kt)("strong",null,"Arguments:")," ",(0,l.kt)("br",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"self")," [",(0,l.kt)("strong",null," table "),"]: The class instance.")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"onreceiveupdate"},"onReceiveUpdate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"function HarvestableClass.server_onReceiveUpdate( self )\nend\n")),(0,l.kt)("p",null,"Called occasionally on the HarvestableClass to indicate that some time has passed."),(0,l.kt)("p",null,"For performance reasons it is recommended to use this instead of ",(0,l.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Classes/CommonCallbacks#onfixedupdate"},"server_onFixedUpdate")," for updates that do not need to happen frequently."),(0,l.kt)("p",null,"Use ",(0,l.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Static-Functions/sm.game#getcurrenttick"},"sm.game.getCurrentTick")," to calculate the time."),(0,l.kt)("strong",null,"Arguments:")," ",(0,l.kt)("br",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"self")," [",(0,l.kt)("strong",null," table "),"]: The class instance.")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"onexplosion"},"onExplosion"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"function HarvestableClass.server_onExplosion( self, center, destructionLevel )\nend\n")),(0,l.kt)("p",null,"Called when the ",(0,l.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Harvestable"},"Harvestable")," is hit by an explosion. ",(0,l.kt)("br",null)),(0,l.kt)("strong",null,"Arguments:")," ",(0,l.kt)("br",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"self")," [",(0,l.kt)("strong",null," table "),"]: The class instance."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"center")," [",(0,l.kt)("strong",null," vec3 "),"]: The center of the explosion."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"destructionLevel")," [",(0,l.kt)("strong",null," int "),"]: The level of destruction done by this explosion. Corresponds to the ",(0,l.kt)("code",null,"durability")," rating of a Shape.")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"onremoved"},"onRemoved"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"function HarvestableClass.server_onRemoved( self, player )\nend\n")),(0,l.kt)("p",null,"Called when a ",(0,l.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Player"},"Player")," wants to remove the ",(0,l.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Harvestable"},"Harvestable"),"."),(0,l.kt)("admonition",{title:"note",type:"info"},(0,l.kt)("p",{parentName:"admonition"},"The ",(0,l.kt)("code",null,"HarvestableClass")," is responsible for doing the remove using ",(0,l.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Harvestable#destroy"},"Harvestable:destroy"),".")),(0,l.kt)("strong",null,"Arguments:")," ",(0,l.kt)("br",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"self")," [",(0,l.kt)("strong",null," table "),"]: The class instance."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"player")," [",(0,l.kt)("strong",null," player "),"]: The Player that wants to remove the Harvestable.")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"client-only"},"Client-only"),(0,l.kt)("h3",{id:"oninteract"},"onInteract"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"function HarvestableClass.client_onInteract( self, character, state )\nend\n")),(0,l.kt)("p",null,"Called when a ",(0,l.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Player"},"Player")," is interacting with the ",(0,l.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Harvestable"},"Harvestable")," by pressing the ",(0,l.kt)("code",null,"Use")," key (default ",(0,l.kt)("code",null,"E"),")."),(0,l.kt)("strong",null,"Arguments:")," ",(0,l.kt)("br",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"self")," [",(0,l.kt)("strong",null," table "),"]: The class instance."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"character")," [",(0,l.kt)("strong",null," character "),"]: The Character of the Player that is interacting with the Harvestable."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"state")," [",(0,l.kt)("strong",null," bool "),"]: The interaction state (",(0,l.kt)("code",null,"true")," if pressed, ",(0,l.kt)("code",null,"false")," if released).")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"caninteract"},"canInteract"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"function HarvestableClass.client_canInteract( self, character )\n    return true --true or false, default true if onInteract is implemented\nend\n")),(0,l.kt)("p",null,"Called to check whether the ",(0,l.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Harvestable"},"Harvestable")," can be interacted with at this moment."),(0,l.kt)("admonition",{title:"note",type:"info"},(0,l.kt)("p",{parentName:"admonition"},"This callback is also responsible for updating interaction text shown to the player using ",(0,l.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Static-Functions/sm.gui#setinteractiontext"},"sm.gui.setInteractionText"),".")),(0,l.kt)("strong",null,"Arguments:")," ",(0,l.kt)("br",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"self")," [",(0,l.kt)("strong",null," table "),"]: The class instance."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"character")," [",(0,l.kt)("strong",null," character "),"]: The Character of the Player that is looking at the Harvestable.")),(0,l.kt)("strong",null,"Returns:")," ",(0,l.kt)("br",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"[",(0,l.kt)("strong",null," bool "),"]",": A boolean indicating whether the Harvestable can be interacted with or not (Defaults to true if ",(0,l.kt)("code",null,"client_onInteract")," is implemented, otherwise false).")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"onaction"},"onAction"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"function HarvestableClass.client_onAction( self, action, state )\nend\n")),(0,l.kt)("p",null,"Called when the Harvestable receives input from a ",(0,l.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Player"},"Player")," with the ",(0,l.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Character"},"Character")," locked to the ",(0,l.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Harvestable"},"Harvestable"),"."),(0,l.kt)("p",null,"Details about the ",(0,l.kt)("code",null,"action")," value are in ",(0,l.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Constants#sminteractableactions"},"sm.interactable.actions"),"."),(0,l.kt)("strong",null,"Arguments:")," ",(0,l.kt)("br",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"self")," [",(0,l.kt)("strong",null," table "),"]: The class instance."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"action")," [",(0,l.kt)("strong",null," int "),"]: The action as an integer value."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"state")," [",(0,l.kt)("strong",null," bool "),"]: True on begin action, false on end action.")),(0,l.kt)("hr",null))}d.isMDXComponent=!0}}]);