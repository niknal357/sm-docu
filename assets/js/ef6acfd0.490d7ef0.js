"use strict";(self.webpackChunksm_docs=self.webpackChunksm_docs||[]).push([[983],{3160:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>a,toc:()=>d});var s=r(5893),i=r(1151);const l={sidebar_position:6,title:"PlayerClass",hide_title:!0,"sidebar-label":"PlayerClass"},t=void 0,a={id:"Game-Script-Environment/Classes/PlayerClass",title:"PlayerClass",description:"PlayerClass",source:"@site/docs/Game-Script-Environment/Classes/PlayerClass.md",sourceDirName:"Game-Script-Environment/Classes",slug:"/Game-Script-Environment/Classes/PlayerClass",permalink:"/docs/Game-Script-Environment/Classes/PlayerClass",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,title:"PlayerClass",hide_title:!0,"sidebar-label":"PlayerClass"},sidebar:"tutorialSidebar",previous:{title:"UnitClass",permalink:"/docs/Game-Script-Environment/Classes/UnitClass"},next:{title:"HarvestableClass",permalink:"/docs/Game-Script-Environment/Classes/HarvestableClass"}},c={},d=[{value:"PlayerClass",id:"playerclass",level:3},{value:"Server-only",id:"server-only",level:2},{value:"onProjectile",id:"onprojectile",level:3},{value:"onExplosion",id:"onexplosion",level:3},{value:"onMelee",id:"onmelee",level:3},{value:"onCollision",id:"oncollision",level:3},{value:"onCollisionCrush",id:"oncollisioncrush",level:3},{value:"onShapeRemoved",id:"onshaperemoved",level:3},{value:"onInventoryChanges",id:"oninventorychanges",level:3},{value:"Client-only",id:"client-only",level:2},{value:"onInteract",id:"oninteract",level:3},{value:"onCancel",id:"oncancel",level:3},{value:"onReload",id:"onreload",level:3}];function o(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("br",{}),"\n",(0,s.jsx)(n.h3,{id:"playerclass",children:"PlayerClass"}),"\n",(0,s.jsxs)(n.p,{children:["A script class that is instanced for every active ",(0,s.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Player",children:"Player"})," in the game."]}),"\n",(0,s.jsxs)(n.p,{children:["A player represents a user controlling a ",(0,s.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Character",children:"Character"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"The player script handles actions made by the user."}),"\n",(0,s.jsxs)(n.p,{children:["The class can receive events sent with ",(0,s.jsx)(n.a,{href:"/docs/Game-Script-Environment/Static-Functions/sm.event#sendtoplayer",children:"sm.event.sendToPlayer"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["The fields below are accessed using ",(0,s.jsx)("code",{children:"self.fieldName"})," in the PlayerClass script:"]}),"\n",(0,s.jsx)("strong",{children:"Fields:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Player",children:"Player"})}),(0,s.jsx)(n.td,{children:"player"}),(0,s.jsxs)(n.td,{children:["The ",(0,s.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Player",children:"Player"})," game object belonging to this class instance."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Network",children:"Network"})}),(0,s.jsx)(n.td,{children:"network"}),(0,s.jsxs)(n.td,{children:["A ",(0,s.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Network",children:"Network"})," object that can be used to send data between client and server."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Storage",children:"Storage"})}),(0,s.jsx)(n.td,{children:"storage"}),(0,s.jsxs)(n.td,{children:["A server-side ",(0,s.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Storage",children:"Storage"})," object that can be used to save and load data to/from the world database."]})]})]})]}),"\n",(0,s.jsx)("strong",{children:"Callbacks:"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(n.h2,{id:"server-only",children:"Server-only"}),"\n",(0,s.jsx)(n.h3,{id:"onprojectile",children:"onProjectile"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"function PlayerClass.server_onProjectile( self, position, airTime, velocity, projectileName, shooter, damage, customData, normal, uuid )\r\nend\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Called when the ",(0,s.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Player",children:"Player"}),"'s ",(0,s.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Character",children:"Character"})," is hit by a projectile."]}),"\n",(0,s.jsx)(n.admonition,{title:"note",type:"info",children:(0,s.jsx)(n.p,{children:"If the shooter is destroyed before the projectile hits, the shooter value will be nil."})}),"\n",(0,s.jsx)("strong",{children:"Arguments:"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"self"})," [",(0,s.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"position"})," [",(0,s.jsxs)("strong",{children:[" ",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The position in world space where the projectile hit the Character."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"airTime"})," [",(0,s.jsx)("strong",{children:" number "}),"]: The time, in seconds, that the projectile spent flying before the hit."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"velocity"})," [",(0,s.jsxs)("strong",{children:[" ",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The velocity of the projectile at impact."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"projectileName"})," [",(0,s.jsx)("strong",{children:" string "}),"]: The name of the projectile. (Legacy, use uuid instead)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"shooter"})," [",(0,s.jsxs)("strong",{children:[" ",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Player",children:" Player "}),"/",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Unit",children:" Unit "}),"/",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape",children:" Shape "}),"/",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Harvestable",children:" Harvestable "}),"/ nil "]}),"]: The shooter. Can be a Player, Unit, Shape, Harvestable or nil if unknown."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"damage"})," [",(0,s.jsx)("strong",{children:" int "}),"]: The damage value of the projectile."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"customData"})," [",(0,s.jsx)("strong",{children:" any "}),"]: A Lua object that can be defined at shoot time using ",(0,s.jsx)("code",{children:"sm.projectile.customProjectileAttack"})," or any other custom version."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"normal"})," [",(0,s.jsxs)("strong",{children:[" ",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The normal at the point of impact."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"uuid"})," [",(0,s.jsxs)("strong",{children:[" ",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Uuid",children:" Uuid "})," "]}),"]: The uuid of the projectile."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"onexplosion",children:"onExplosion"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"function PlayerClass.server_onExplosion( self, center, destructionLevel )\r\nend\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Called when the ",(0,s.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Player",children:"Player"}),"'s ",(0,s.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Character",children:"Character"})," is hit by an explosion. ",(0,s.jsx)("br",{})]}),"\n",(0,s.jsx)("strong",{children:"Arguments:"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"self"})," [",(0,s.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"center"})," [",(0,s.jsxs)("strong",{children:[" ",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The center of the explosion."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"destructionLevel"})," [",(0,s.jsx)("strong",{children:" int "}),"]: The level of destruction done by this explosion. Corresponds to the ",(0,s.jsx)("code",{children:"durability"})," rating of a Shape."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"onmelee",children:"onMelee"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"function PlayerClass.server_onMelee( self, position, attacker, damage, power, direction, normal )\r\nend\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Called when the ",(0,s.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Player",children:"Player"}),"'s ",(0,s.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Character",children:"Character"})," is hit by a melee attack."]}),"\n",(0,s.jsx)(n.admonition,{title:"note",type:"info",children:(0,s.jsx)(n.p,{children:"If the attacker is destroyed before the hit lands, the attacker value will be nil."})}),"\n",(0,s.jsx)("strong",{children:"Arguments:"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"self"})," [",(0,s.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"position"})," [",(0,s.jsxs)("strong",{children:[" ",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The position in world space where the Character was hit."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"attacker"})," [",(0,s.jsxs)("strong",{children:[" ",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Player",children:" Player "}),"/ nil "]}),"]: The attacker. Can be a Player or nil if unknown. Attacks made by a Unit will be nil on the client."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"damage"})," [",(0,s.jsx)("strong",{children:" int "}),"]: The damage value of the melee hit."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"power"})," [",(0,s.jsx)("strong",{children:" number "}),"]: The physical impact of the hit."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"direction"})," [",(0,s.jsxs)("strong",{children:[" ",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The direction of the melee attack."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"normal"})," [",(0,s.jsxs)("strong",{children:[" ",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The normal at the point of impact."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"oncollision",children:"onCollision"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"function PlayerClass.server_onCollision( self, other, position, selfPointVelocity, otherPointVelocity, normal )\r\nend\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Called when the ",(0,s.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Player",children:"Player"}),"'s ",(0,s.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Character",children:"Character"})," collides with another object."]}),"\n",(0,s.jsx)("strong",{children:"Arguments:"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"self"})," [",(0,s.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"other"})," [",(0,s.jsxs)("strong",{children:[" ",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape",children:" Shape "}),"/",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Character",children:" Character "}),"/",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Harvestable",children:" Harvestable "}),"/",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Lift",children:" Lift "}),"/ nil "]}),"]: The other object. Nil if terrain."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"position"})," [",(0,s.jsxs)("strong",{children:[" ",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Player",children:" Player "}),"/ nil "]}),"]: The position in world space where the collision occurred."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"selfPointVelocity"})," [",(0,s.jsx)("strong",{children:" int "}),"]: The velocity that that the Character had at the point of collision."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"otherPointVelocity"})," [",(0,s.jsx)("strong",{children:" number "}),"]: The velocity that that the other object had at the point of collision."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"normal"})," [",(0,s.jsxs)("strong",{children:[" ",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The collision normal between the Character and the other object."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"oncollisioncrush",children:"onCollisionCrush"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"function PlayerClass.server_onCollisionCrush( self )\r\nend\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Called when the ",(0,s.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Player",children:"Player"}),"'s ",(0,s.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Character",children:"Character"})," is being crushed."]}),"\n",(0,s.jsx)("strong",{children:"Arguments:"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"self"})," [",(0,s.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"onshaperemoved",children:"onShapeRemoved"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"function PlayerClass.server_onShapeRemoved( self, items )\r\n\t--items = { { uuid = uuid, amount = integer, type = string }, .. }\r\nend\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Called when the ",(0,s.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Player",children:"Player"})," removed a ",(0,s.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Shape",children:"Shape"})," from the ",(0,s.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/World",children:"World"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Will receive a table of tables listing the items removed by this action."}),"\n",(0,s.jsx)("strong",{children:"Arguments:"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"self"})," [",(0,s.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"items"})," [",(0,s.jsx)("strong",{children:" table "}),"]: A table listing the removed items. See the table format below."]}),"\n"]}),"\n",(0,s.jsx)("strong",{children:"Table Format:"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"uuid"})," [",(0,s.jsxs)("strong",{children:[" ",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Uuid",children:" Uuid "})," "]}),"]: The item uuid."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"amount"})," [",(0,s.jsx)("strong",{children:" int "}),"]: The amount of items with this uuid."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"type"})," [",(0,s.jsx)("strong",{children:" string "}),"]: Type of shape removed. Can be ",(0,s.jsx)("code",{children:"part"}),", ",(0,s.jsx)("code",{children:"block"})," or ",(0,s.jsx)("code",{children:"joint"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"oninventorychanges",children:"onInventoryChanges"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"function PlayerClass.server_onInventoryChanges( self, inventory, changes )\r\n\t--changes = { { uuid = Uuid, difference = integer, tool = Tool }, .. }\r\nend\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Called when the ",(0,s.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Player",children:"Player"})," has changes in the inventory ",(0,s.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Container",children:"Container"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Will receive a table listing the changes."}),"\n",(0,s.jsx)("strong",{children:"Arguments:"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"self"})," [",(0,s.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"inventory"})," [",(0,s.jsxs)("strong",{children:[" ",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Container",children:" Container "})," "]}),"]: The player's inventory Container."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"changes"})," [",(0,s.jsx)("strong",{children:" table "}),"]: A table listing the changes. See the table format below."]}),"\n"]}),"\n",(0,s.jsx)("strong",{children:"Table Format:"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"uuid"})," [",(0,s.jsxs)("strong",{children:[" ",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Uuid",children:" Uuid "})," "]}),"]: The item uuid."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"difference"})," [",(0,s.jsx)("strong",{children:" int "}),"]: The change in amount. Positive numbers mean item gain, negative item loss."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"tool"})," [",(0,s.jsxs)("strong",{children:[" ",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Tool",children:" Tool "}),"/ nil "]}),"]: (Optional) If the item is a Tool, this is the tool. Otherwise nil."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"client-only",children:"Client-only"}),"\n",(0,s.jsx)(n.h3,{id:"oninteract",children:"onInteract"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"function PlayerClass.client_onInteract( self, character, state )\r\nend\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Called when the player presses or releases the ",(0,s.jsx)("code",{children:"Use"})," key (default ",(0,s.jsx)("code",{children:"E"}),")."]}),"\n",(0,s.jsx)("strong",{children:"Arguments:"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"self"})," [",(0,s.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"character"})," [",(0,s.jsxs)("strong",{children:[" ",(0,s.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Character",children:" Character "})," "]}),"]: The player's character. Same as ",(0,s.jsx)("code",{children:"self.player.character"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"state"})," [",(0,s.jsx)("strong",{children:" bool "}),"]: The interaction state (",(0,s.jsx)("code",{children:"true"})," if pressed, ",(0,s.jsx)("code",{children:"false"})," if released)."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"oncancel",children:"onCancel"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"function PlayerClass.client_onCancel( self )\r\nend\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Called when the player presses the ",(0,s.jsx)("code",{children:"Cancel"})," key (default ",(0,s.jsx)("code",{children:"ESC"}),")."]}),"\n",(0,s.jsx)("strong",{children:"Arguments:"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"self"})," [",(0,s.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"onreload",children:"onReload"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"function PlayerClass.client_onReload( self )\r\nend\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Called when the player presses the ",(0,s.jsx)("code",{children:"Reload"})," key (default ",(0,s.jsx)("code",{children:"R"}),")."]}),"\n",(0,s.jsx)("strong",{children:"Arguments:"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)("code",{children:"self"})," [",(0,s.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>a,a:()=>t});var s=r(7294);const i={},l=s.createContext(i);function t(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);