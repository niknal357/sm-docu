"use strict";(self.webpackChunksm_docs=self.webpackChunksm_docs||[]).push([[3046],{3905:(t,e,r)=>{r.d(e,{Zo:()=>p,kt:()=>m});var n=r(7294);function l(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function a(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){l(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function u(t,e){if(null==t)return{};var r,n,l=function(t,e){if(null==t)return{};var r,n,l={},o=Object.keys(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||(l[r]=t[r]);return l}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(l[r]=t[r])}return l}var i=n.createContext({}),c=function(t){var e=n.useContext(i),r=e;return t&&(r="function"==typeof t?t(e):a(a({},e),t)),r},p=function(t){var e=c(t.components);return n.createElement(i.Provider,{value:e},t.children)},s="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},k=n.forwardRef((function(t,e){var r=t.components,l=t.mdxType,o=t.originalType,i=t.parentName,p=u(t,["components","mdxType","originalType","parentName"]),s=c(r),k=l,m=s["".concat(i,".").concat(k)]||s[k]||d[k]||o;return r?n.createElement(m,a(a({ref:e},p),{},{components:r})):n.createElement(m,a({ref:e},p))}));function m(t,e){var r=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var o=r.length,a=new Array(o);a[0]=k;var u={};for(var i in e)hasOwnProperty.call(e,i)&&(u[i]=e[i]);u.originalType=t,u[s]="string"==typeof t?t:l,a[1]=u;for(var c=2;c<o;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}k.displayName="MDXCreateElement"},9767:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>i,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>u,toc:()=>c});var n=r(7462),l=(r(7294),r(3905));const o={sidebar_position:1,title:"Color",hide_title:!0,"sidebar-label":"Color"},a=void 0,u={unversionedId:"Terrain-Script-Environment/Userdata/Color",id:"Terrain-Script-Environment/Userdata/Color",title:"Color",description:"Color",source:"@site/docs/Terrain-Script-Environment/Userdata/Color.md",sourceDirName:"Terrain-Script-Environment/Userdata",slug:"/Terrain-Script-Environment/Userdata/Color",permalink:"/docs/Terrain-Script-Environment/Userdata/Color",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Color",hide_title:!0,"sidebar-label":"Color"},sidebar:"tutorialSidebar",previous:{title:"Environment Table",permalink:"/docs/Terrain-Script-Environment/Environment_Table"},next:{title:"Harvestable",permalink:"/docs/Terrain-Script-Environment/Userdata/Harvestable"}},i={},c=[{value:"Color",id:"color",level:2},{value:"Functions",id:"functions",level:2},{value:"getHexStr",id:"gethexstr",level:3}],p={toc:c},s="wrapper";function d(t){let{components:e,...r}=t;return(0,l.kt)(s,(0,n.Z)({},p,r,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"color"},"Color"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Associated namespace:")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Static-Functions/sm.color"},"sm.color")),(0,l.kt)("p",null,"A userdata object representing a ",(0,l.kt)("strong",null,"color"),"."),(0,l.kt)("strong",null,"Values:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"r")," [",(0,l.kt)("strong",null," number "),"] ",(0,l.kt)("br",null),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"Get"),": The red value of the color (0.0 - 1.0)."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"Set"),": Sets the red value of the color (0.0 - 1.0).")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"g")," [",(0,l.kt)("strong",null," number "),"] ",(0,l.kt)("br",null),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"Get"),": The green value of the color (0.0 - 1.0)."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"Set"),": Sets the green value of the color (0.0 - 1.0).")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"b")," [",(0,l.kt)("strong",null," number "),"] ",(0,l.kt)("br",null),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"Get"),": The blue value of the color (0.0 - 1.0)."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"Set"),": Sets the blue value of the color (0.0 - 1.0).")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"a")," [",(0,l.kt)("strong",null," number "),"] ",(0,l.kt)("br",null),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"Get"),": The alpha value of the color (0.0 - 1.0)."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"Set"),": Sets the alpha value of the color (0.0 - 1.0).")))),(0,l.kt)("strong",null,"Operations:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Operation"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"Color")," == ",(0,l.kt)("code",null,"Color")),(0,l.kt)("td",{parentName:"tr",align:null},"Checks if two colors are equal.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"Color")," + ",(0,l.kt)("code",null,"Color")),(0,l.kt)("td",{parentName:"tr",align:null},"Returns the sum of two colors, adding each component.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"Color")," / ",(0,l.kt)("code",null,"Color")),(0,l.kt)("td",{parentName:"tr",align:null},"Returns the quotient of two colors, dividing each component.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"Color")," / ",(0,l.kt)("code",null,"number")),(0,l.kt)("td",{parentName:"tr",align:null},"Returns the quotient of a color and a scalar.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"Color")," * ",(0,l.kt)("code",null,"Color")),(0,l.kt)("td",{parentName:"tr",align:null},"Returns the product of two colors, multiplying each component.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"Color")," * ",(0,l.kt)("code",null,"number")),(0,l.kt)("td",{parentName:"tr",align:null},"Returns the product of a color and a scalar.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"Color")," - ",(0,l.kt)("code",null,"Color")),(0,l.kt)("td",{parentName:"tr",align:null},"Returns the difference of two colors, subtracting each component.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tostring( ",(0,l.kt)("code",null,"Color")," )"),(0,l.kt)("td",{parentName:"tr",align:null},"Returns the color as a string.")))),(0,l.kt)("h2",{id:"functions"},"Functions"),(0,l.kt)("h3",{id:"gethexstr"},"getHexStr"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"color:getHexStr()\n")),(0,l.kt)("p",null,"Returns the hex representation of the color."),(0,l.kt)("strong",null,"Arguments:")," ",(0,l.kt)("br",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"color")," [",(0,l.kt)("strong",null," ",(0,l.kt)("a",{href:"/docs/Terrain-Script-Environment/Userdata/Color"}," Color ")," "),"]: The color.")),(0,l.kt)("strong",null,"Returns:")," ",(0,l.kt)("br",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"[",(0,l.kt)("strong",null," string "),"]",": The color's hex string.")),(0,l.kt)("hr",null))}d.isMDXComponent=!0}}]);