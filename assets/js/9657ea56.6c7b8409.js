"use strict";(self.webpackChunksm_docs=self.webpackChunksm_docs||[]).push([[8494],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var l=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=l.createContext({}),c=function(e){var t=l.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return l.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},m=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,k=u["".concat(s,".").concat(m)]||u[m]||p[m]||r;return n?l.createElement(k,o(o({ref:t},d),{},{components:n})):l.createElement(k,o({ref:t},d))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:a,o[1]=i;for(var c=2;c<r;c++)o[c]=n[c];return l.createElement.apply(null,o)}return l.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9853:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var l=n(7462),a=(n(7294),n(3905));const r={sidebar_position:9,title:"WorldClass",hide_title:!0,"sidebar-label":"WorldClass"},o=void 0,i={unversionedId:"Game-Script-Environment/Classes/WorldClass",id:"Game-Script-Environment/Classes/WorldClass",title:"WorldClass",description:"WorldClass",source:"@site/docs/Game-Script-Environment/Classes/WorldClass.md",sourceDirName:"Game-Script-Environment/Classes",slug:"/Game-Script-Environment/Classes/WorldClass",permalink:"/docs/Game-Script-Environment/Classes/WorldClass",draft:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9,title:"WorldClass",hide_title:!0,"sidebar-label":"WorldClass"},sidebar:"tutorialSidebar",previous:{title:"GameClass",permalink:"/docs/Game-Script-Environment/Classes/GameClass"},next:{title:"ScriptableObjectClass",permalink:"/docs/Game-Script-Environment/Classes/ScriptableObjectClass"}},s={},c=[{value:"WorldClass",id:"worldclass",level:3},{value:"Server + Client",id:"server--client",level:2},{value:"onCollision",id:"oncollision",level:3},{value:"Server-only",id:"server-only",level:2},{value:"onCellCreated",id:"oncellcreated",level:3},{value:"onCellLoaded",id:"oncellloaded",level:3},{value:"onCellUnloaded",id:"oncellunloaded",level:3},{value:"onInteractableCreated",id:"oninteractablecreated",level:3},{value:"onInteractableDestroyed",id:"oninteractabledestroyed",level:3},{value:"onProjectile",id:"onprojectile",level:3},{value:"onExplosion",id:"onexplosion",level:3},{value:"onMelee",id:"onmelee",level:3},{value:"onProjectileFire",id:"onprojectilefire",level:3},{value:"Client-only",id:"client-only",level:2},{value:"onCellLoaded",id:"oncellloaded-1",level:3},{value:"onCellUnloaded",id:"oncellunloaded-1",level:3}],d={toc:c},u="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,l.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("br",null),(0,a.kt)("h3",{id:"worldclass"},"WorldClass"),(0,a.kt)("p",null,"A script class that is instanced for every ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/World"},"World")," in the game."),(0,a.kt)("p",null,"When entering a warehouse floor, the player is entering a new world."),(0,a.kt)("p",null,"The class can receive events sent with ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Static-Functions/sm.event"},"sm.event.sendToWorld"),"."),(0,a.kt)("p",null,"The fields below are accessed using ",(0,a.kt)("code",null,"self.fieldName")," in the WorldClass script:"),(0,a.kt)("strong",null,"Fields:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/docs/Game-Script-Environment/Userdata/World"},"World")),(0,a.kt)("td",{parentName:"tr",align:null},"world"),(0,a.kt)("td",{parentName:"tr",align:null},"The ",(0,a.kt)("a",{parentName:"td",href:"/docs/Game-Script-Environment/Userdata/World"},"World")," game object belonging to this class instance.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/docs/Game-Script-Environment/Userdata/Network"},"Network")),(0,a.kt)("td",{parentName:"tr",align:null},"network"),(0,a.kt)("td",{parentName:"tr",align:null},"A ",(0,a.kt)("a",{parentName:"td",href:"/docs/Game-Script-Environment/Userdata/Network"},"Network")," object that can be used to send data between client and server.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/docs/Game-Script-Environment/Userdata/Storage"},"Storage")),(0,a.kt)("td",{parentName:"tr",align:null},"storage"),(0,a.kt)("td",{parentName:"tr",align:null},"A server-side ",(0,a.kt)("a",{parentName:"td",href:"/docs/Game-Script-Environment/Userdata/Storage"},"Storage")," object that can be used to save and load data to/from the world database.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"any"),(0,a.kt)("td",{parentName:"tr",align:null},"data"),(0,a.kt)("td",{parentName:"tr",align:null},"Parameters passed to ",(0,a.kt)("a",{parentName:"td",href:"/docs/Game-Script-Environment/Static-Functions/sm.world#createworld"},"sm.world.createWorld"))))),(0,a.kt)("strong",null,"Constants:")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Constants#worldclass"},"cellMaxX")," ",(0,a.kt)("br",null),"\n",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Constants#worldclass"},"cellMaxY")," ",(0,a.kt)("br",null),"\n",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Constants#worldclass"},"cellMinX")," ",(0,a.kt)("br",null),"\n",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Constants#worldclass"},"cellMinY")," ",(0,a.kt)("br",null),"\n",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Constants#worldclass"},"enableAssets")," ",(0,a.kt)("br",null),"\n",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Constants#worldclass"},"enableClutter")," ",(0,a.kt)("br",null),"\n",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Constants#worldclass"},"enableCreations")," ",(0,a.kt)("br",null),"\n",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Constants#worldclass"},"enableHarvestables")," ",(0,a.kt)("br",null),"\n",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Constants#worldclass"},"enableKinematics")," ",(0,a.kt)("br",null),"\n",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Constants#worldclass"},"enableNodes")," ",(0,a.kt)("br",null),"\n",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Constants#worldclass"},"enableSurface")," ",(0,a.kt)("br",null),"\n",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Constants#worldclass"},"groundMaterialSet")," ",(0,a.kt)("br",null),"\n",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Constants#worldclass"},"isIndoor")," ",(0,a.kt)("br",null),"\n",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Constants#worldclass"},"renderMode")," ",(0,a.kt)("br",null),"\n",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Constants#worldclass"},"terrainScript")," ",(0,a.kt)("br",null),"\n",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Constants#worldclass"},"worldBorder")," ",(0,a.kt)("br",null)),(0,a.kt)("strong",null,"Callbacks:")," ",(0,a.kt)("br",null),(0,a.kt)("h2",{id:"server--client"},"Server + Client"),(0,a.kt)("h3",{id:"oncollision"},"onCollision"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function WorldClass.server_onCollision( self, objectA, objectB, position, pointVelocityA, pointVelocityB, normal )\nend\nfunction WorldClass.client_onCollision( self, objectA, objectB, position, pointVelocityA, pointVelocityB, normal )\nend\n")),(0,a.kt)("p",null,"Called when a collision occurs in this world."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"self")," [",(0,a.kt)("strong",null," table "),"]: The class instance."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"objectA")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape "),"/",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Character"}," Character "),"/",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Harvestable"}," Harvestable "),"/",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Lift"}," Lift "),"/ nil "),"]: The first colliding object. Nil if terrain."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"objectB")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape "),"/",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Character"}," Character "),"/",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Harvestable"}," Harvestable "),"/",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Lift"}," Lift "),"/ nil "),"]: The second colliding object. Nil if terrain."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"position")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The position in world space where the collision occurred."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"pointVelocityA")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The velocity that that the first object had at the point of collision."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"pointVelocityB")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The velocity that that the second object had at the point of collision."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"normal")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The collision normal from objectA to objectB.")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"server-only"},"Server-only"),(0,a.kt)("h3",{id:"oncellcreated"},"onCellCreated"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function WorldClass.server_onCellCreated( self, x, y )\nend\n")),(0,a.kt)("p",null,"Called when a world cell is loaded and feature complete for the first time."),(0,a.kt)("admonition",{title:"note",type:"info"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Interactable"},"Interactables")," created by terrain scripts should be processed here using ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Static-Functions/sm.cell#getinteractablesbytag"},"sm.cell.getInteractablesByTag")," and ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Static-Functions/sm.cell#getinteractablesbyuuid"},"sm.cell.getInteractablesByUuid"),",\nas they are only accessible for 1 tick after being created.")),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"self")," [",(0,a.kt)("strong",null," table "),"]: The class instance."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"x")," [",(0,a.kt)("strong",null," int "),"]: The cell's X position."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"y")," [",(0,a.kt)("strong",null," int "),"]: The cell's Y position.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"oncellloaded"},"onCellLoaded"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function WorldClass.server_onCellLoaded( self, x, y )\nend\n")),(0,a.kt)("p",null,"Called when a world cell is loaded and feature complete, but has been before."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"self")," [",(0,a.kt)("strong",null," table "),"]: The class instance."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"x")," [",(0,a.kt)("strong",null," int "),"]: The cell's X position."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"y")," [",(0,a.kt)("strong",null," int "),"]: The cell's Y position.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"oncellunloaded"},"onCellUnloaded"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function WorldClass.server_onCellUnloaded( self, x, y )\nend\n")),(0,a.kt)("p",null,"Called when a world cell is no longer feature complete."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"self")," [",(0,a.kt)("strong",null," table "),"]: The class instance."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"x")," [",(0,a.kt)("strong",null," int "),"]: The cell's X position."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"y")," [",(0,a.kt)("strong",null," int "),"]: The cell's Y position.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"oninteractablecreated"},"onInteractableCreated"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function WorldClass.server_onInteractableCreated( self, interactable )\nend\n")),(0,a.kt)("p",null,"Called when an ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Interactable"},"Interactable")," ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Shape"},"Shape")," is built in the world."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"self")," [",(0,a.kt)("strong",null," table "),"]: The class instance."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Interactable"}," Interactable ")," "),"]: The interactable of the built shape.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"oninteractabledestroyed"},"onInteractableDestroyed"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function WorldClass.server_onInteractableDestroyed( self, interactable )\nend\n")),(0,a.kt)("p",null,"Called when an ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Interactable"},"Interactable")," ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Shape"},"Shape")," is removed from the world."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"self")," [",(0,a.kt)("strong",null," table "),"]: The class instance."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Interactable"}," Interactable ")," "),"]: The interactable of the removed shape.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"onprojectile"},"onProjectile"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function WorldClass.server_onProjectile( self, position, airTime, velocity, projectileName, shooter, damage, customData, normal, target, uuid )\nend\n")),(0,a.kt)("p",null,"Called when a projectile hits something in this world."),(0,a.kt)("admonition",{title:"note",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"If the shooter is destroyed before the projectile hits, the shooter value will be nil.")),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"self")," [",(0,a.kt)("strong",null," table "),"]: The class instance."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"position")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The position in world space where the projectile hit."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"airTime")," [",(0,a.kt)("strong",null," number "),"]: The time, in seconds, that the projectile spent flying before the hit."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"velocity")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The velocity of the projectile at impact."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"projectileName")," [",(0,a.kt)("strong",null," string "),"]: The name of the projectile. (Legacy, use uuid instead)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shooter")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Player"}," Player "),"/",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Unit"}," Unit "),"/",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape "),"/",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Harvestable"}," Harvestable "),"/ nil "),"]: The shooter. Can be a Player, Unit, Shape, Harvestable or nil if unknown."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"damage")," [",(0,a.kt)("strong",null," int "),"]: The damage value of the projectile."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"customData")," [",(0,a.kt)("strong",null," any "),"]: A Lua object that can be defined at shoot time using ",(0,a.kt)("code",null,"sm.projectile.customProjectileAttack")," or any other custom version."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"target")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Character"}," Character "),"/",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape "),"/",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Harvestable"}," Harvestable "),"/",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Lift"}," Lift "),"/ nil "),"]: The hit target. Can be a Character, Shape, Harvestable, Lift or nil if terrain or unknown."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"normal")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The normal at the point of impact."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"uuid")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Uuid"}," Uuid ")," "),"]: The uuid of the projectile.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"onexplosion"},"onExplosion"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function WorldClass.server_onExplosion( self, center, destructionLevel )\nend\n")),(0,a.kt)("p",null,"Called when an explosion occurs in this world."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"self")," [",(0,a.kt)("strong",null," table "),"]: The class instance."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"center")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The center of the explosion."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"destructionLevel")," [",(0,a.kt)("strong",null," int "),"]: The level of destruction done by this explosion. Corresponds to the ",(0,a.kt)("code",null,"durability")," rating of a Shape.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"onmelee"},"onMelee"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function WorldClass.server_onMelee( self, position, attacker, target, damage, power, direction, normal )\nend\n")),(0,a.kt)("p",null,"Called when a melee attack hits something in this world."),(0,a.kt)("admonition",{title:"note",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"If the attacker is destroyed before the hit lands, the attacker value will be nil.")),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"self")," [",(0,a.kt)("strong",null," table "),"]: The class instance."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"position")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The position in world space where the attack hit."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"attacker")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Player"}," Player "),"/ nil "),"]: The attacker. Can be a Player, Unit or nil if unknown."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"target")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Character"}," Character "),"/",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape "),"/",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Harvestable"}," Harvestable "),"/",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Lift"}," Lift "),"/ nil "),"]: The hit target. Can be a Character, Shape, Harvestable, Lift or nil if terrain or unknown."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"damage")," [",(0,a.kt)("strong",null," int "),"]: The damage value of the melee hit."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"power")," [",(0,a.kt)("strong",null," number "),"]: The physical impact of the hit."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"direction")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The direction of the melee attack."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"normal")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The normal at the point of impact.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"onprojectilefire"},"onProjectileFire"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function WorldClass.server_onProjectileFire( self, position, velocity, projectileName, shooter, uuid )\nend\n")),(0,a.kt)("p",null,"Called when a projectile is fired in this world."),(0,a.kt)("admonition",{title:"note",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"If the shooter is destroyed before the projectile hits, the shooter value will be nil.")),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"self")," [",(0,a.kt)("strong",null," table "),"]: The class instance."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"position")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The position in world space where projectile was fired from."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"velocity")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The fire velocity of the projectile."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"projectileName")," [",(0,a.kt)("strong",null," string "),"]: The name of the projectile. (Legacy, use uuid instead)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shooter")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Player"}," Player "),"/",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Unit"}," Unit "),"/",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape "),"/",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Harvestable"}," Harvestable "),"/ nil "),"]: The shooter. Can be a Player, Unit, Shape, Harvestable or nil if unknown."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"uuid")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Uuid"}," Uuid ")," "),"]: The uuid of the projectile.")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"client-only"},"Client-only"),(0,a.kt)("h3",{id:"oncellloaded-1"},"onCellLoaded"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function WorldClass.client_onCellLoaded( self, x, y )\nend\n")),(0,a.kt)("p",null,"Called when a world cell is considered feature complete for a client (has nodes)."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"self")," [",(0,a.kt)("strong",null," table "),"]: The class instance."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"x")," [",(0,a.kt)("strong",null," int "),"]: The cell's X position."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"y")," [",(0,a.kt)("strong",null," int "),"]: The cell's Y position.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"oncellunloaded-1"},"onCellUnloaded"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function WorldClass.client_onCellUnloaded( self, x, y )\nend\n")),(0,a.kt)("p",null,"Called when a world cell is no longer considered feature complete for a client (no longer has nodes)."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"self")," [",(0,a.kt)("strong",null," table "),"]: The class instance."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"x")," [",(0,a.kt)("strong",null," int "),"]: The cell's X position."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"y")," [",(0,a.kt)("strong",null," int "),"]: The cell's Y position.")),(0,a.kt)("hr",null))}p.isMDXComponent=!0}}]);