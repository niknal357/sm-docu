"use strict";(self.webpackChunksm_docs=self.webpackChunksm_docs||[]).push([[1297],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var l=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=l.createContext({}),c=function(e){var t=l.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return l.createElement(i.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},m=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,k=d["".concat(i,".").concat(m)]||d[m]||p[m]||r;return n?l.createElement(k,o(o({ref:t},u),{},{components:n})):l.createElement(k,o({ref:t},u))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[d]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<r;c++)o[c]=n[c];return l.createElement.apply(null,o)}return l.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2260:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var l=n(7462),a=(n(7294),n(3905));const r={sidebar_position:1,title:"Common Callbacks",hide_title:!0,"sidebar-label":"Common Callbacks"},o=void 0,s={unversionedId:"Game-Script-Environment/Classes/CommonCallbacks",id:"Game-Script-Environment/Classes/CommonCallbacks",title:"Common Callbacks",description:"Common Fields and Callbacks",source:"@site/docs/Game-Script-Environment/Classes/CommonCallbacks.md",sourceDirName:"Game-Script-Environment/Classes",slug:"/Game-Script-Environment/Classes/CommonCallbacks",permalink:"/docs/Game-Script-Environment/Classes/CommonCallbacks",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Game-Script-Environment/Classes/CommonCallbacks.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Common Callbacks",hide_title:!0,"sidebar-label":"Common Callbacks"},sidebar:"tutorialSidebar",previous:{title:"Constants",permalink:"/docs/Game-Script-Environment/Constants"},next:{title:"ShapeClass",permalink:"/docs/Game-Script-Environment/Classes/ShapeClass"}},i={},c=[{value:"Common Fields and Callbacks",id:"common-fields-and-callbacks",level:3},{value:"Server + Client",id:"server--client",level:2},{value:"onCreate",id:"oncreate",level:3},{value:"onDestroy",id:"ondestroy",level:3},{value:"onRefresh",id:"onrefresh",level:3},{value:"onFixedUpdate",id:"onfixedupdate",level:3},{value:"Client-only",id:"client-only",level:2},{value:"onUpdate",id:"onupdate",level:3},{value:"onClientDataUpdate",id:"onclientdataupdate",level:3}],u={toc:c},d="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,l.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("br",null),(0,a.kt)("h3",{id:"common-fields-and-callbacks"},"Common Fields and Callbacks"),(0,a.kt)("p",null,"The callback functions listed below are available in ",(0,a.kt)("strong",null,"every")," ",(0,a.kt)("code",null,"ScriptClass"),", ",(0,a.kt)("strong",null,"in addition")," ",(0,a.kt)("br",null),"\nto that ScriptClass's own fields and callbacks."),(0,a.kt)("h2",{id:"server--client"},"Server + Client"),(0,a.kt)("h3",{id:"oncreate"},"onCreate"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function Class.server_onCreate( self )\nend\nfunction Class.client_onCreate( self )\nend\n")),(0,a.kt)("p",null,"Called when the scripted object is created. ",(0,a.kt)("br",null),"\nThis occurs when a new object is built, spawned, or loaded from the save file."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"self")," [",(0,a.kt)("strong",null," table "),"]: The class instance.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"ondestroy"},"onDestroy"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function Class.server_onDestroy( self )\nend\nfunction Class.client_onDestroy( self )\nend\n")),(0,a.kt)("p",null,"Called when the scripted object is destroyed. ",(0,a.kt)("br",null),"\nThis occurs when an object is erased, destroyed by an explosion, robot attack, etc."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"self")," [",(0,a.kt)("strong",null," table "),"]: The class instance.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"onrefresh"},"onRefresh"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function Class.server_onRefresh( self )\nend\nfunction Class.client_onRefresh( self )\nend\n")),(0,a.kt)("p",null,"Called if the Lua script attached to the object is modified while the game is running. ",(0,a.kt)("br",null)),(0,a.kt)("admonition",{title:"note",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"This event requires Scrap Mechanic to be running with the ",(0,a.kt)("code",null,"-dev")," launch option. ",(0,a.kt)("br",null),"\nThis will allow scripts to automatically refresh upon changes.")),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"self")," [",(0,a.kt)("strong",null," table "),"]: The class instance.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"onfixedupdate"},"onFixedUpdate"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function Class.server_onFixedUpdate( self, timeStep )\nend\nfunction Class.client_onFixedUpdate( self, timeStep )\nend\n")),(0,a.kt)("p",null,"Called every game tick - 40 times per second. ",(0,a.kt)("br",null),"\nIf the frame rate is lower than 40 fps, this event may be called twice. ",(0,a.kt)("br",null)),(0,a.kt)("p",null,"During a fixed update, physics and logic between interactables are updated."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"self")," [",(0,a.kt)("strong",null," table "),"]: The class instance."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"timeStep")," [",(0,a.kt)("strong",null," number "),"]: The time period of a tick. (Always 0.025, a 1/40th of a second.)")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"client-only"},"Client-only"),(0,a.kt)("h3",{id:"onupdate"},"onUpdate"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function Class.client_onUpdate( self, deltaTime )\nend\n")),(0,a.kt)("p",null,"Called every frame."),(0,a.kt)("p",null,"During a frame update, graphics, animations and effects are updated."),(0,a.kt)("admonition",{title:"warning",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Because of how frequent this event is called, the game's frame rate is greatly affected by the amount of code executed here."),(0,a.kt)("p",{parentName:"admonition"},"For any non-graphics related code, consider using ",(0,a.kt)("a",{parentName:"p",href:"#onFixedUpdate"},"client_onFixedUpdate")," instead."),(0,a.kt)("p",{parentName:"admonition"},"If the event is not in use, consider removing it from the script (Event callbacks that are not implemented will not be called).")),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"self")," [",(0,a.kt)("strong",null," table "),"]: The class instance."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"deltaTime")," [",(0,a.kt)("strong",null," number "),"]: Delta time since the last frame.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"onclientdataupdate"},"onClientDataUpdate"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function Class.client_onClientDataUpdate( self, data, channel )\nend\n")),(0,a.kt)("p",null,"Called when the client receives new client data updates from the server set with ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Network#setclientdata"},"Network:setClientData"),"."),(0,a.kt)("p",null,"Data set in this way is persistent and the latest data will automatically be sent to new clients."),(0,a.kt)("p",null,"The data will arrive after client_onCreate during the same tick."),(0,a.kt)("p",null,"Channel 1 will be received before channel 2 if both are updated."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"self")," [",(0,a.kt)("strong",null," table "),"]: The class instance."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"data")," [",(0,a.kt)("strong",null," any "),"]: Any lua object set with ",(0,a.kt)("code",null,"Network:setClientData"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"channel")," [",(0,a.kt)("strong",null," int "),"]: Client data channel, 1 or 2. (default: 1)")),(0,a.kt)("hr",null))}p.isMDXComponent=!0}}]);