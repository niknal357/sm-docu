"use strict";(self.webpackChunksm_docs=self.webpackChunksm_docs||[]).push([[8844],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var l=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},o=Object.keys(e);for(l=0;l<o.length;l++)n=o[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(l=0;l<o.length;l++)n=o[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=l.createContext({}),u=function(e){var t=l.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=u(e.components);return l.createElement(s.Provider,{value:t},e.children)},d="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},p=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(n),p=a,m=d["".concat(s,".").concat(p)]||d[p]||k[p]||o;return n?l.createElement(m,r(r({ref:t},c),{},{components:n})):l.createElement(m,r({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:a,r[1]=i;for(var u=2;u<o;u++)r[u]=n[u];return l.createElement.apply(null,r)}return l.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9440:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>k,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var l=n(7462),a=(n(7294),n(3905));const o={sidebar_position:3,title:"Constants",hide_title:!0,"sidebar-label":"Constants"},r=void 0,i={unversionedId:"Game-Script-Environment/Constants",id:"Game-Script-Environment/Constants",title:"Constants",description:"Class Constants",source:"@site/docs/Game-Script-Environment/Constants.md",sourceDirName:"Game-Script-Environment",slug:"/Game-Script-Environment/Constants",permalink:"/docs/Game-Script-Environment/Constants",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Constants",hide_title:!0,"sidebar-label":"Constants"},sidebar:"tutorialSidebar",previous:{title:"Environment Table",permalink:"/docs/Game-Script-Environment/Environment_Table"},next:{title:"Common Callbacks",permalink:"/docs/Game-Script-Environment/Classes/CommonCallbacks"}},s={},u=[{value:"Class Constants",id:"class-constants",level:2},{value:"ShapeClass",id:"shapeclass",level:3},{value:"UnitClass",id:"unitclass",level:3},{value:"GameClass",id:"gameclass",level:3},{value:"HarvestableClass",id:"harvestableclass",level:3},{value:"WorldClass",id:"worldclass",level:3},{value:"ScriptableObjectClass",id:"scriptableobjectclass",level:3},{value:"Namespace Constants",id:"namespace-constants",level:2},{value:"sm",id:"sm",level:3},{value:"sm.areaTrigger.filter",id:"smareatriggerfilter",level:3},{value:"sm.audio.soundList",id:"smaudiosoundlist",level:3},{value:"sm.camera.state",id:"smcamerastate",level:3},{value:"sm.construction.constants",id:"smconstructionconstants",level:3},{value:"sm.interactable.types",id:"sminteractabletypes",level:3},{value:"sm.interactable.actions",id:"sminteractableactions",level:3},{value:"sm.interactable.connectionType",id:"sminteractableconnectiontype",level:3},{value:"sm.interactable.steering",id:"sminteractablesteering",level:3},{value:"sm.interactable.steering",id:"sminteractablesteering-1",level:3},{value:"sm.joint.types",id:"smjointtypes",level:3},{value:"sm.pathfinder.conditionProperty",id:"smpathfinderconditionproperty",level:3},{value:"sm.physics.filter",id:"smphysicsfilter",level:3},{value:"sm.physics.types",id:"smphysicstypes",level:3},{value:"sm.tool.interactState",id:"smtoolinteractstate",level:3},{value:"sm.world.ids",id:"smworldids",level:3}],c={toc:u},d="wrapper";function k(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,l.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("br",null),(0,a.kt)("h2",{id:"class-constants"},"Class Constants"),(0,a.kt)("h3",{id:"shapeclass"},"ShapeClass"),(0,a.kt)("p",null,"Listed below are ",(0,a.kt)("code",null,"ShapeClass")," constants that can be set like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'MyShape = class()\n\nMyShape.colorHighlight = sm.color.new( "#ff0000" )\nMyShape.colorNormal = sm.color.new( "#00ff00" )\n--etc. etc.\n')),(0,a.kt)("strong",null,"colorHighlight")," ",(0,a.kt)("br",null),"Sets the connection-point highlight color. ",(0,a.kt)("br",null),"The connection-point is shown when using the Connect Tool and selecting the interactable. ",(0,a.kt)("br",null),"Defaults to white.",(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"highlightColor")," [",(0,a.kt)("strong",null," color "),"]: The connection-point's highlight color.")),(0,a.kt)("hr",null),(0,a.kt)("strong",null,"colorNormal")," ",(0,a.kt)("br",null),"Sets the connection-point normal color. ",(0,a.kt)("br",null),"The connection-point is shown when using the Connect Tool. ",(0,a.kt)("br",null),"Defaults to gray.",(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"normalColor")," [",(0,a.kt)("strong",null," color "),"]: The connection-point's normal color.")),(0,a.kt)("hr",null),(0,a.kt)("strong",null,"connectionInput")," ",(0,a.kt)("br",null),"Sets the input connection type. ",(0,a.kt)("br",null),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Constants#sminteractableconnectiontype"},"sm.interactable.connectionType")," for details. ",(0,a.kt)("br",null),"\nDefaults to 0, no input."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"connectionType")," [",(0,a.kt)("strong",null," int "),"]: The input connection type.")),(0,a.kt)("hr",null),(0,a.kt)("strong",null,"connectionOutput")," ",(0,a.kt)("br",null),"Sets the output connection type. ",(0,a.kt)("br",null),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Constants#sminteractableconnectiontype"},"sm.interactable.connectionType")," for details. ",(0,a.kt)("br",null),"\nDefaults to 0, no output."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"connectionType")," [",(0,a.kt)("strong",null," int "),"]: The output connection type.")),(0,a.kt)("hr",null),(0,a.kt)("strong",null,"maxParentCount")," ",(0,a.kt)("br",null),"Sets the maximum number of allowed parent connections - the number of input connections. ",(0,a.kt)("br",null),"Defaults to 0, no allowed parent connections.",(0,a.kt)("admonition",{title:"note",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Implement ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Classes/ShapeClass#getavailableparentconnectioncount"},"client_getAvailableParentConnectionCount")," to control specific types.")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"maxParents")," [",(0,a.kt)("strong",null," int "),"]: The maximum amount of input connections.")),(0,a.kt)("hr",null),(0,a.kt)("strong",null,"maxChildCount")," ",(0,a.kt)("br",null),"Sets the maximum number of allowed child connections - the number of output connections. ",(0,a.kt)("br",null),"Defaults to 0, no allowed child connections.",(0,a.kt)("admonition",{title:"note",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Implement ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Classes/ShapeClass#getavailablechildconnectioncount"},"client_getAvailableChildConnectionCount")," to control specific types.")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"maxChildren")," [",(0,a.kt)("strong",null," int "),"]: The maximum amount of output connections.")),(0,a.kt)("hr",null),(0,a.kt)("strong",null,"poseWeightCount")," ",(0,a.kt)("br",null),"Sets the number of animation poses the shape's model is able to use. ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Value are integers 0-3 (Defaults to 0, no poses)."),(0,a.kt)("p",null,"A value greater that 0 indicates that the renderable's mesh is set up to blend into ",(0,a.kt)("code",null,"pose0"),", ",(0,a.kt)("code",null,"pose1"),", ",(0,a.kt)("code",null,"pose2"),". ",(0,a.kt)("br",null)),(0,a.kt)("p",null,"This is, for example, used to move the lever on the engine."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"poseWeightCount")," [",(0,a.kt)("strong",null," int "),"]: The number of animation poses.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"unitclass"},"UnitClass"),(0,a.kt)("strong",null,"isSaveObject")," ",(0,a.kt)("br",null),"Enables or disables saving of this unit. (Defaults to true) ",(0,a.kt)("br",null),(0,a.kt)("p",null,"If enabled, the ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Unit"},"Unit")," will be recreated when loading a game. Otherwise, the ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Unit"},"Unit")," is considered a temporary object."),(0,a.kt)("admonition",{title:"note",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"If disabled, ",(0,a.kt)("code",null,"self.storage")," can not be used.")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"enable")," [",(0,a.kt)("strong",null," bool "),"]: A boolean indicating whether saving the unit is enabled or not.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"gameclass"},"GameClass"),(0,a.kt)("strong",null,"defaultInventorySize")," ",(0,a.kt)("br",null),"Sets default player inventory size. ",(0,a.kt)("br",null),"Defaults to 40.",(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"size")," [",(0,a.kt)("strong",null," int "),"]: The inventory size.")),(0,a.kt)("hr",null),(0,a.kt)("strong",null,"enableAggro")," ",(0,a.kt)("br",null),"Enables or disables enemy aggression. ",(0,a.kt)("br",null),"Defaults to true.",(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"enable")," [",(0,a.kt)("strong",null," bool "),"]: A boolean indicating whether enemy aggression is enabled or not.")),(0,a.kt)("hr",null),(0,a.kt)("strong",null,"enableAmmoConsumption")," ",(0,a.kt)("br",null),"Enables or disables ammo consumption. ",(0,a.kt)("br",null),"Defaults to false.",(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"enable")," [",(0,a.kt)("strong",null," bool "),"]: A boolean indicating whether ammo consumption is enabled or not.")),(0,a.kt)("hr",null),(0,a.kt)("strong",null,"enableFuelConsumption")," ",(0,a.kt)("br",null),"Enables or disables fuel consumption. ",(0,a.kt)("br",null),"Defaults to false.",(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"enable")," [",(0,a.kt)("strong",null," bool "),"]: A boolean indicating whether fuel consumption is enabled or not.")),(0,a.kt)("hr",null),(0,a.kt)("strong",null,"enableLimitedInventory")," ",(0,a.kt)("br",null),"Enables or disables limited inventory. ",(0,a.kt)("br",null),"Defaults to false.",(0,a.kt)("p",null,"When limited in inventory is on, items have a limited amount. ",(0,a.kt)("br",null),'\nWhen off, the player has access to all items. (Except for items with json value "hidden": true)'),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"enable")," [",(0,a.kt)("strong",null," bool "),"]: A boolean indicating whether the inventory is limited or not.")),(0,a.kt)("hr",null),(0,a.kt)("strong",null,"enableRestrictions")," ",(0,a.kt)("br",null),"Enables or disables build restrictions. ",(0,a.kt)("br",null),"Defaults to false.",(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"enable")," [",(0,a.kt)("strong",null," bool "),"]: A boolean indicating whether building is restricted or not.")),(0,a.kt)("hr",null),(0,a.kt)("strong",null,"enableUpgrade")," ",(0,a.kt)("br",null),"Enables or disables interactable part upgrade. ",(0,a.kt)("br",null),"Defaults to false.",(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"enable")," [",(0,a.kt)("strong",null," bool "),"]: A boolean indicating whether part upgrades are enabled or not.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"harvestableclass"},"HarvestableClass"),(0,a.kt)("strong",null,"poseWeightCount")," ",(0,a.kt)("br",null),"Sets the number of animation poses the harvestable's model is able to use. ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Value are integers 0-3 (Defaults to 0, no poses)."),(0,a.kt)("p",null,"A value greater that 0 indicates that the renderable's mesh is set up to blend into ",(0,a.kt)("code",null,"pose0"),", ",(0,a.kt)("code",null,"pose1"),", ",(0,a.kt)("code",null,"pose2"),". ",(0,a.kt)("br",null)),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"highlightColor")," [",(0,a.kt)("strong",null," color "),"]: The connection-point's normal color.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"worldclass"},"WorldClass"),(0,a.kt)("strong",null,"cellMaxX")," ",(0,a.kt)("br",null),"Terrain generation maximum cell position in X axis. ",(0,a.kt)("br",null),"Default = 0",(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"maxX")," [",(0,a.kt)("strong",null," int "),"]: The maximum X cell position.")),(0,a.kt)("hr",null),(0,a.kt)("strong",null,"cellMaxY")," ",(0,a.kt)("br",null),"Terrain generation maximum cell position in Y axis. ",(0,a.kt)("br",null),"Default = 0",(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"maxY")," [",(0,a.kt)("strong",null," int "),"]: The maximum Y cell position.")),(0,a.kt)("hr",null),(0,a.kt)("strong",null,"cellMinX")," ",(0,a.kt)("br",null),"Terrain generation minimum cell position in X axis. ",(0,a.kt)("br",null),"Default = 0",(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"minX")," [",(0,a.kt)("strong",null," int "),"]: The minimum X cell position.")),(0,a.kt)("hr",null),(0,a.kt)("strong",null,"cellMinY")," ",(0,a.kt)("br",null),"Terrain generation minimum cell position in Y axis. ",(0,a.kt)("br",null),"Default = 0",(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"minY")," [",(0,a.kt)("strong",null," int "),"]: The minimum Y cell position.")),(0,a.kt)("hr",null),(0,a.kt)("strong",null,"enableAssets")," ",(0,a.kt)("br",null),"Enables or disables terrain assets for this world. ",(0,a.kt)("br",null),"Default = true",(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"enable")," [",(0,a.kt)("strong",null," bool "),"]: A boolean indicating whether terrain assets are enabled or not.")),(0,a.kt)("hr",null),(0,a.kt)("strong",null,"enableClutter")," ",(0,a.kt)("br",null),"Enables or disables terrain clutter for this world. ",(0,a.kt)("br",null),"Default = true",(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"enable")," [",(0,a.kt)("strong",null," bool "),"]: A boolean indicating whether terrain clutter is enabled or not.")),(0,a.kt)("hr",null),(0,a.kt)("strong",null,"enableCreations")," ",(0,a.kt)("br",null),"Enables or disables creations for this world. ",(0,a.kt)("br",null),"Default = true",(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"enable")," [",(0,a.kt)("strong",null," bool "),"]: A boolean indicating whether creations are enabled or not.")),(0,a.kt)("hr",null),(0,a.kt)("strong",null,"enableHarvestables")," ",(0,a.kt)("br",null),"Enables or disables terrain harvestables for this world. ",(0,a.kt)("br",null),"Default = true",(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"enable")," [",(0,a.kt)("strong",null," bool "),"]: A boolean indicating whether terrain harvestables are enabled or not.")),(0,a.kt)("hr",null),(0,a.kt)("strong",null,"enableKinematics")," ",(0,a.kt)("br",null),"Enables or disables terrain kinematics for this world. ",(0,a.kt)("br",null),"Default = true",(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"enable")," [",(0,a.kt)("strong",null," bool "),"]: A boolean indicating whether terrain kinematics are enabled or not.")),(0,a.kt)("hr",null),(0,a.kt)("strong",null,"enableNodes")," ",(0,a.kt)("br",null),"Enables or disables nodes for this world. ",(0,a.kt)("br",null),"Default = true",(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"enable")," [",(0,a.kt)("strong",null," bool "),"]: A boolean indicating whether nodes are enabled or not.")),(0,a.kt)("hr",null),(0,a.kt)("strong",null,"enableSurface")," ",(0,a.kt)("br",null),"Enables or disables terrain surface for this world. ",(0,a.kt)("br",null),"Default = true",(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"enable")," [",(0,a.kt)("strong",null," bool "),"]: A boolean indicating whether the terrain surface is enabled or not.")),(0,a.kt)("hr",null),(0,a.kt)("strong",null,"groundMaterialSet")," ",(0,a.kt)("br",null),"Sets the ground material set used by the terrain. ",(0,a.kt)("br",null),'Default = "$GAME_DATA/Terrain/Materials/gnd_standard_materialset.json"',(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"materialSet")," [",(0,a.kt)("strong",null," string "),"]: The full ",(0,a.kt)("code",null,"$-")," file path to the material set.")),(0,a.kt)("hr",null),(0,a.kt)("strong",null,"isIndoor")," ",(0,a.kt)("br",null),"Enables or disables indoor mode. ",(0,a.kt)("br",null),"Default = false",(0,a.kt)("p",null,"Indoor worlds have only one terrain cell, at ",(0,a.kt)("code",null,"0, 0")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"enable")," [",(0,a.kt)("strong",null," bool "),"]: A boolean indicating whether indoor mode is enabled or not.")),(0,a.kt)("hr",null),(0,a.kt)("strong",null,"renderMode")," ",(0,a.kt)("br",null),"Sets the render mode for this world. ",(0,a.kt)("br",null),'Default = "outdoor"',(0,a.kt)("p",null,'Valid = "outdoor", "challenge", "warehouse"'),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"renderMode")," [",(0,a.kt)("strong",null," string "),"]: The render mode.")),(0,a.kt)("hr",null),(0,a.kt)("strong",null,"terrainScript")," ",(0,a.kt)("br",null),"Sets the script used to generate terrain. ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"script")," [",(0,a.kt)("strong",null," string "),"]: The full ",(0,a.kt)("code",null,"$-")," file path to the terrain generation script.")),(0,a.kt)("hr",null),(0,a.kt)("strong",null,"worldBorder")," ",(0,a.kt)("br",null),"Adds borders to the world to prevent objects from falling through the ground. ",(0,a.kt)("br",null),"Defaults to true.",(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"enable")," [",(0,a.kt)("strong",null," bool "),"]: Whether world borders are enabled or not.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"scriptableobjectclass"},"ScriptableObjectClass"),(0,a.kt)("strong",null,"isSaveObject")," ",(0,a.kt)("br",null),"Enables or disables saving of this scriptable object. ",(0,a.kt)("br",null),"Default = false",(0,a.kt)("p",null,"If enabled, the ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/ScriptableObject"},"ScriptableObject")," will be recreated when loading a game. ",(0,a.kt)("br",null),"\nOtherwise, the ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/ScriptableObject"},"ScriptableObject")," is considered a temporary object. ",(0,a.kt)("br",null)),(0,a.kt)("admonition",{title:"note",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"If disabled, self.storage can not be used.")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"enable")," [",(0,a.kt)("strong",null," bool "),"]: A boolean indicating whether saving this object is enabled or not.")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"namespace-constants"},"Namespace Constants"),(0,a.kt)("h3",{id:"sm"},"sm"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"sm.isHost")," [",(0,a.kt)("strong",null," bool "),"]: Whether the game is currently running on the hosting player's computer."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"sm.version")," [",(0,a.kt)("strong",null," string "),"]: The current version of the game as a string.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"smareatriggerfilter"},"sm.areaTrigger.filter"),(0,a.kt)("p",null,"Filters are used to specify what object types an area trigger is able to detect. ",(0,a.kt)("br",null),"\nIf an area trigger is created with a filter, it will only react to objects of that type. ",(0,a.kt)("br",null),"\nFilters can be combined by adding them. ",(0,a.kt)("br",null)),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Table Contents"',title:'"Table','Contents"':!0},"{\n    dynamicBody = 1,\n    staticBody = 2,\n    character = 4,\n    areatrigger = 8,\n    harvestable = 512,\n    lift = 1024,\n    voxelTerrain = 32768,\n    all = 34319\n}\n")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"smaudiosoundlist"},"sm.audio.soundList"),(0,a.kt)("p",null,"A table containing all sounds that can be played using ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Static-Functions/sm.audio#play"},"sm.audio.play")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Table Contents"',title:'"Table','Contents"':!0},'{   \n    "Ambient - Birds",\n    "Ambient - Challenge",\n    "Ambient - Field",\n    "Blueprint - Build",\n    "Blueprint - Camera",\n    "Blueprint - Close",\n    "Blueprint - Delete",\n    "Blueprint - Open",\n    "Blueprint - Save",\n    "Blueprint - Select",\n    "Blueprint - Share",\n    "Brake",\n    "Button off",\n    "Button on",\n    "Challenge - Fall",\n    "Challenge - Start",\n    "Challenge - Supervisor generic",\n    "Character crouch",\n    "Character get up",\n    "Character hit",\n    "Character jump",\n    "Character land",\n    "Character movement",\n    "Character movement crouched",\n    "Character wind",\n    "Collision - Debris",\n    "Collision - Multiple",\n    "Collision - Rolling",\n    "Collision - Single",\n    "Collision - Sliding",\n    "Collision - Vehicle",\n    "ConnectTool",\n    "ConnectTool - Equip",\n    "ConnectTool - Idle",\n    "ConnectTool - Released",\n    "ConnectTool - Rotate",\n    "ConnectTool - Selected",\n    "ConnectTool - Unequip",\n    "Construction - Block attached to joint",\n    "Construction - Block placed",\n    "Construction - Resize",\n    "Dancebass",\n    "Dancedrum",\n    "Dancepad",\n    "Dancevoice",\n    "Destruction - Block destroyed",\n    "Destruction - Resize",\n    "ElectricEngine",\n    "GUI Backpack closed",\n    "GUI Backpack opened",\n    "GUI Inventory highlight",\n    "GUI Item drag",\n    "GUI Item released",\n    "GUI Quickbar highlight",\n    "GUI Shape rotate",\n    "Gas Explosion",\n    "Gas Leak",\n    "GasEngine",\n    "Handbook - Close",\n    "Handbook - Equip",\n    "Handbook - Highlight",\n    "Handbook - Open",\n    "Handbook - Turn page",\n    "Handbook - Unequip",\n    "Horn",\n    "Lever off",\n    "Lever on",\n    "Lift - Pickup object",\n    "Lift placed",\n    "Lift usage",\n    "Music",\n    "PaintTool - Close",\n    "PaintTool - ColorPick",\n    "PaintTool - Equip",\n    "PaintTool - Erase",\n    "PaintTool - Open",\n    "PaintTool - Paint",\n    "PaintTool - Reload",\n    "PaintTool - Unequip",\n    "Phaser",\n    "Piston",\n    "PotatoRifle - Equip",\n    "PotatoRifle - NoAmmo",\n    "PotatoRifle - Reload",\n    "PotatoRifle - Shoot",\n    "PotatoRifle - Unequip",\n    "Radio",\n    "RaftShark",\n    "Retrobass",\n    "Retrodrum",\n    "Retrofmblip",\n    "Retrovoice",\n    "Retrowildblip",\n    "Reverb - Challenge",\n    "Reverb - Field",\n    "Seat seated",\n    "Seat unseated",\n    "Sensor off",\n    "Sensor on",\n    "SequenceController",\n    "SequenceController change rotation",\n    "Sledgehammer - Equip",\n    "Sledgehammer - Swing",\n    "Sledgehammer - Unequip",\n    "Suspension",\n    "Thruster",\n    "Thruster dust",\n    "Toilet seated",\n    "Toilet unseated",\n    "Weapon - Hit",\n    "WeldTool - Case 1",\n    "WeldTool - Case 2",\n    "WeldTool - Equip",\n    "WeldTool - Error",\n    "WeldTool - Sparks",\n    "WeldTool - Unequip",\n    "WeldTool - Weld"\n}\n')),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"smcamerastate"},"sm.camera.state"),(0,a.kt)("p",null,"Camera states are used to specify how the camera will view the world. ",(0,a.kt)("br",null),"\nThe default state is meant for normal gameplay and the first-person and third-person states are meant to be used in cutcenes."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Table Contents"',title:'"Table','Contents"':!0},"{   \n    default = 1,\n    cutsceneFP = 2,\n    cutsceneTP = 3,\n    forcedTP = 4,\n    gyroSeatFP = 5,\n    gyroSeatTP = 6\n}\n")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"smconstructionconstants"},"sm.construction.constants"),(0,a.kt)("p",null,"Constants used by the construction system."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"subdivideRatio - The physical size of one block."),(0,a.kt)("li",{parentName:"ul"},"subdivideRatio_2 - The physical size of one block divided by two."),(0,a.kt)("li",{parentName:"ul"},"subdivisions - 1 dividided by subdivideRatio."),(0,a.kt)("li",{parentName:"ul"},"shapeSpacing - Bias value.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Table Contents"',title:'"Table','Contents"':!0},"{   \n    subdivideRatio = 0.25,\n    subdivideRatio_2 = 0.125,\n    subdivisions = 4,\n    shapeSpacing = 0.004 \n}\n")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"sminteractabletypes"},"sm.interactable.types"),(0,a.kt)("p",null,"The table of types that an interactable can be."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Table Contents"',title:'"Table','Contents"':!0},'{\n    "electricEngine",\n    "gasEngine",\n    "steering",\n    "seat",\n    "controller",\n    "button",\n    "lever",\n    "sensor",\n    "thruster",\n    "radio",\n    "horn",\n    "tone",\n    "logic",\n    "timer",\n    "particlePreview",\n    "spring",\n    "pointLight",\n    "spotLight",\n    "chest",\n    "itemStack",\n    "scripted",\n    "piston", \n    "simpleInteractive",\n    "camera",\n    "waypoint",\n    "survivalThruster",\n    "survivalPiston",\n    "survivalSpring",\n    "survivalSequence",\n    "survivalSensor"\n}\n')),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"sminteractableactions"},"sm.interactable.actions"),(0,a.kt)("p",null,"A table containing all key actions that can be received by an interactable's ",(0,a.kt)("code",null,"client_onAction")," callback."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Table Contents"',title:'"Table','Contents"':!0},"{\n    none = 0,\n    left = 1,\n    right = 2,\n    forward = 3,\n    backward = 4,\n    item0 = 5,\n    item1 = 6,\n    item2 = 7,\n    item3 = 8,\n    item4 = 9,\n    item5 = 10,\n    item6 = 11,\n    item8 = 13,\n    item7 = 12,\n    item9 = 14,\n    use = 15,\n    jump = 16,\n    exit = 17,\n    attack = 18,\n    create = 19,\n    zoomIn = 20,\n    zoomOut = 21\n}\n")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"sminteractableconnectiontype"},"sm.interactable.connectionType"),(0,a.kt)("p",null,"A table containing all available connection types for interactables."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Table Contents"',title:'"Table','Contents"':!0},"{\n    none = 0,\n    logic = 1,\n    power = 2,\n    bearing = 4,\n    seated = 8,\n    piston = 16,\n    gasoline = 256,\n    electricity = 512,\n    water = 1024,\n    ammo = 2048\n}\n")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"sminteractablesteering"},"sm.interactable.steering"),(0,a.kt)("p",null,"Flags used with the steering component."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Table Contents"',title:'"Table','Contents"':!0},"{\n    left = 1,\n    right = 2,\n    forward = 4,\n    backward = 8\n}\n")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"sminteractablesteering-1"},"sm.interactable.steering"),(0,a.kt)("p",null,"A table of available interactable types."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Table Contents"',title:'"Table','Contents"':!0},'{\n"electricEngine",\n"gasEngine",\n"steering",\n"seat",\n"controller",\n"button",\n"lever",\n"sensor",\n"thruster",\n"radio",\n"horn",\n"tone",\n"logic",\n"timer",\n"particlePreview",\n"spring",\n"pointLight",\n"spotLight",\n"chest",\n"scripted",\n"piston",\n"simpleInteractive",\n}\n')),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"smjointtypes"},"sm.joint.types"),(0,a.kt)("p",null,"A table of joint types."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Table Contents"',title:'"Table','Contents"':!0},'{\n    "bearing",\n    "piston"\n}\n')),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"smpathfinderconditionproperty"},"sm.pathfinder.conditionProperty"),(0,a.kt)("p",null,"A table of condition link types."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Table Contents"',title:'"Table','Contents"':!0},"{\n    height = 0,\n    target = 1,\n    none = 2\n}\n")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"smphysicsfilter"},"sm.physics.filter"),(0,a.kt)("p",null,"A table of physics filter types used for things like ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Static-Functions/sm.physics#raycast"},"raycasts"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Table Contents"',title:'"Table','Contents"':!0},"{\n    dynamicBody = 1,\n    staticBody = 2,\n    character = 4,\n    areaTrigger = 8,\n    joints = 4096,\n    terrainSurface = ?,\n    terrainAsset = ?,\n    harvestable = ?,\n    static = ?,\n    default = 6023,\n    all = -1\n}\n")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"smphysicstypes"},"sm.physics.types"),(0,a.kt)("p",null,"Physics types are used to define an object's characteristics is in the physics world. ",(0,a.kt)("br",null),"\nUpon a raycast or collision detection, these types are used to find out what object was intersected."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Table Contents"',title:'"Table','Contents"':!0},'{\n    "invalid",          --No object.\n    "terrainSurface",   --The ground.\n    "terrainAsset",     --Trees and boulders.\n    "lift",             --A Lift.\n    "body",             --A Body.\n    "character",        --A Character.\n    "joint",            --A Joint.\n    "harvestable",      --A Harvestable.\n    "vision"            --A collision area used by sensors.\n}\n')),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"smtoolinteractstate"},"sm.tool.interactState"),(0,a.kt)("p",null,"The interact state describe what kind of interaction is made. ",(0,a.kt)("br",null),"\nThis is used to check whether a mouse button or key was just pressed, held, etc."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Table Contents"',title:'"Table','Contents"':!0},"{\n    null = 0,   --No interaction.\n    start = 1,  --The key was just pressed.\n    hold = 2,   --The key is held down.\n    stop = 3    --The key was just released.\n}\n")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"smworldids"},"sm.world.ids"),(0,a.kt)("p",null,"Predefined special world ids."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Table Contents"',title:'"Table','Contents"':!0},"{\n    anyWorld = 65535,\n    noWorld = 65534\n}\n")),(0,a.kt)("hr",null))}k.isMDXComponent=!0}}]);