"use strict";(self.webpackChunksm_docs=self.webpackChunksm_docs||[]).push([[1642],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>k});var n=r(7294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var s=n.createContext({}),i=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},m=function(e){var t=i(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,a=e.originalType,s=e.parentName,m=u(e,["components","mdxType","originalType","parentName"]),d=i(r),p=l,k=d["".concat(s,".").concat(p)]||d[p]||c[p]||a;return r?n.createElement(k,o(o({ref:t},m),{},{components:r})):n.createElement(k,o({ref:t},m))}));function k(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=r.length,o=new Array(a);o[0]=p;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u[d]="string"==typeof e?e:l,o[1]=u;for(var i=2;i<a;i++)o[i]=r[i];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},6152:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>u,toc:()=>i});var n=r(7462),l=(r(7294),r(3905));const a={sidebar_position:18,title:"sm.debugDraw",hide_title:!0,"sidebar-label":"sm.debugDraw"},o=void 0,u={unversionedId:"Game-Script-Environment/Static-Functions/sm.debugDraw",id:"Game-Script-Environment/Static-Functions/sm.debugDraw",title:"sm.debugDraw",description:"sm.debugDraw",source:"@site/docs/Game-Script-Environment/Static-Functions/sm.debugDraw.md",sourceDirName:"Game-Script-Environment/Static-Functions",slug:"/Game-Script-Environment/Static-Functions/sm.debugDraw",permalink:"/docs/Game-Script-Environment/Static-Functions/sm.debugDraw",draft:!1,tags:[],version:"current",sidebarPosition:18,frontMatter:{sidebar_position:18,title:"sm.debugDraw",hide_title:!0,"sidebar-label":"sm.debugDraw"},sidebar:"tutorialSidebar",previous:{title:"sm.debris",permalink:"/docs/Game-Script-Environment/Static-Functions/sm.debris"},next:{title:"sm.effect",permalink:"/docs/Game-Script-Environment/Static-Functions/sm.effect"}},s={},i=[{value:"sm.debugDraw",id:"smdebugdraw",level:2},{value:"Functions",id:"functions",level:2},{value:"addArrow",id:"addarrow",level:3},{value:"addSphere",id:"addsphere",level:3},{value:"addTransform",id:"addtransform",level:3},{value:"clear",id:"clear",level:3},{value:"removeArrow",id:"removearrow",level:3},{value:"removeSphere",id:"removesphere",level:3},{value:"removeTransform",id:"removetransform",level:3}],m={toc:i},d="wrapper";function c(e){let{components:t,...r}=e;return(0,l.kt)(d,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"smdebugdraw"},"sm.debugDraw"),(0,l.kt)("p",null,"The ",(0,l.kt)("strong",null,"Debug Draw")," api can be used for drawing geometric primitives for debug purposes."),(0,l.kt)("h2",{id:"functions"},"Functions"),(0,l.kt)("h3",{id:"addarrow"},"addArrow"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"sm.debugDraw.addArrow( name, startPos, endPos, color )\n")),(0,l.kt)("p",null,"Adds a named arrow debug draw."),(0,l.kt)("strong",null,"Arguments:")," ",(0,l.kt)("br",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"name")," [",(0,l.kt)("strong",null," string "),"]: The debug arrow name."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"startPos")," [",(0,l.kt)("strong",null," vec3 "),"]: The start position."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"endPos")," [",(0,l.kt)("strong",null," vec3 "),"]: The end position. Defaults to ",(0,l.kt)("code",null,"startPos")," plus 1 on the Z axis."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"color")," [",(0,l.kt)("strong",null," color "),"]: The color. Defaults to white.")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"addsphere"},"addSphere"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"sm.debugDraw.addSphere( name, center, radius, color )\n")),(0,l.kt)("p",null,"Adds a named sphere debug draw."),(0,l.kt)("strong",null,"Arguments:")," ",(0,l.kt)("br",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"name")," [",(0,l.kt)("strong",null," string "),"]: The debug sphere name."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"center")," [",(0,l.kt)("strong",null," vec3 "),"]: The center position."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"radius")," [",(0,l.kt)("strong",null," vec3 "),"]: The radius. Defaults to 0.125."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"color")," [",(0,l.kt)("strong",null," color "),"]: The color. Defaults to white.")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"addtransform"},"addTransform"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"sm.debugDraw.addTransform( name, origin, rotation, scale )\n")),(0,l.kt)("p",null,"Adds a named transform debug draw."),(0,l.kt)("strong",null,"Arguments:")," ",(0,l.kt)("br",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"name")," [",(0,l.kt)("strong",null," string "),"]: The debug transform name."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"origin")," [",(0,l.kt)("strong",null," vec3 "),"]: The transform origin."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"rotation")," [",(0,l.kt)("strong",null," quat "),"]: The transform rotation."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"scale")," [",(0,l.kt)("strong",null," number "),"]: The transform scale. Defaults to 1.0.")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"clear"},"clear"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"sm.debugDraw.clear( name )\n")),(0,l.kt)("p",null,"Removes all debug draws beginning with a given name."),(0,l.kt)("strong",null,"Arguments:")," ",(0,l.kt)("br",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"name")," [",(0,l.kt)("strong",null," string "),"]: The name. Defaults to ",(0,l.kt)("code",null,'""'),", matching all debug draws.")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"removearrow"},"removeArrow"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"sm.debugDraw.removeArrow( name )\n")),(0,l.kt)("p",null,"Removes a named arrow debug draw. "),(0,l.kt)("strong",null,"Arguments:")," ",(0,l.kt)("br",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"name")," [",(0,l.kt)("strong",null," string "),"]: The name.")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"removesphere"},"removeSphere"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"sm.debugDraw.removeSphere( name )\n")),(0,l.kt)("p",null,"Removes a named sphere debug draw. "),(0,l.kt)("strong",null,"Arguments:")," ",(0,l.kt)("br",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"name")," [",(0,l.kt)("strong",null," string "),"]: The name.")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"removetransform"},"removeTransform"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"sm.debugDraw.removeTransform( name )\n")),(0,l.kt)("p",null,"Removes a named transform debug draw. "),(0,l.kt)("strong",null,"Arguments:")," ",(0,l.kt)("br",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"name")," [",(0,l.kt)("strong",null," string "),"]: The name.")),(0,l.kt)("hr",null))}c.isMDXComponent=!0}}]);