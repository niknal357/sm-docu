"use strict";(self.webpackChunksm_docs=self.webpackChunksm_docs||[]).push([[8953],{3905:(t,e,l)=>{l.d(e,{Zo:()=>c,kt:()=>m});var a=l(7294);function r(t,e,l){return e in t?Object.defineProperty(t,e,{value:l,enumerable:!0,configurable:!0,writable:!0}):t[e]=l,t}function n(t,e){var l=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),l.push.apply(l,a)}return l}function u(t){for(var e=1;e<arguments.length;e++){var l=null!=arguments[e]?arguments[e]:{};e%2?n(Object(l),!0).forEach((function(e){r(t,e,l[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(l)):n(Object(l)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(l,e))}))}return t}function s(t,e){if(null==t)return{};var l,a,r=function(t,e){if(null==t)return{};var l,a,r={},n=Object.keys(t);for(a=0;a<n.length;a++)l=n[a],e.indexOf(l)>=0||(r[l]=t[l]);return r}(t,e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);for(a=0;a<n.length;a++)l=n[a],e.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(t,l)&&(r[l]=t[l])}return r}var o=a.createContext({}),i=function(t){var e=a.useContext(o),l=e;return t&&(l="function"==typeof t?t(e):u(u({},e),t)),l},c=function(t){var e=i(t.components);return a.createElement(o.Provider,{value:e},t.children)},k="mdxType",p={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(t,e){var l=t.components,r=t.mdxType,n=t.originalType,o=t.parentName,c=s(t,["components","mdxType","originalType","parentName"]),k=i(l),d=r,m=k["".concat(o,".").concat(d)]||k[d]||p[d]||n;return l?a.createElement(m,u(u({ref:e},c),{},{components:l})):a.createElement(m,u({ref:e},c))}));function m(t,e){var l=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var n=l.length,u=new Array(n);u[0]=d;var s={};for(var o in e)hasOwnProperty.call(e,o)&&(s[o]=e[o]);s.originalType=t,s[k]="string"==typeof t?t:r,u[1]=s;for(var i=2;i<n;i++)u[i]=l[i];return a.createElement.apply(null,u)}return a.createElement.apply(null,l)}d.displayName="MDXCreateElement"},625:(t,e,l)=>{l.r(e),l.d(e,{assets:()=>o,contentTitle:()=>u,default:()=>p,frontMatter:()=>n,metadata:()=>s,toc:()=>i});var a=l(7462),r=(l(7294),l(3905));const n={sidebar_position:22,title:"RaycastResult",hide_title:!0,"sidebar-label":"RaycastResult"},u=void 0,s={unversionedId:"Game-Script-Environment/Userdata/RaycastResult",id:"Game-Script-Environment/Userdata/RaycastResult",title:"RaycastResult",description:"RaycastResult",source:"@site/docs/Game-Script-Environment/Userdata/RaycastResult.md",sourceDirName:"Game-Script-Environment/Userdata",slug:"/Game-Script-Environment/Userdata/RaycastResult",permalink:"/docs/Game-Script-Environment/Userdata/RaycastResult",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Game-Script-Environment/Userdata/RaycastResult.md",tags:[],version:"current",sidebarPosition:22,frontMatter:{sidebar_position:22,title:"RaycastResult",hide_title:!0,"sidebar-label":"RaycastResult"},sidebar:"tutorialSidebar",previous:{title:"Quat",permalink:"/docs/Game-Script-Environment/Userdata/Quat"},next:{title:"ScriptableObject",permalink:"/docs/Game-Script-Environment/Userdata/ScriptableObject"}},o={},i=[{value:"RaycastResult",id:"raycastresult",level:2},{value:"Functions",id:"functions",level:2},{value:"getAreaTrigger",id:"getareatrigger",level:3},{value:"getBody",id:"getbody",level:3},{value:"getCharacter",id:"getcharacter",level:3},{value:"getHarvestable",id:"getharvestable",level:3},{value:"getJoint",id:"getjoint",level:3},{value:"getLiftData",id:"getliftdata",level:3},{value:"getShape",id:"getshape",level:3}],c={toc:i},k="wrapper";function p(t){let{components:e,...l}=t;return(0,r.kt)(k,(0,a.Z)({},c,l,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("br",null),(0,r.kt)("h2",{id:"raycastresult"},"RaycastResult"),(0,r.kt)("p",null,"A userdata object representing a ",(0,r.kt)("strong",null,"raycast result"),"."),(0,r.kt)("p",null,"A raycast result is a collection of data received from a raycast. ",(0,r.kt)("br",null),"\nThe result contains information about where the raycast travelled and what objects it eventually hit."),(0,r.kt)("p",null,"Raycast results are the result of functions such as ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Static-Functions/sm.physics#raycast"},"sm.physics.raycast"),", ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Static-Functions/sm.physics#distanceRaycast"},"sm.physics.distanceRaycast")," and ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Static-Functions/sm.localPlayer#getRaycast"},"sm.localPlayer.getRaycast"),"."),(0,r.kt)("strong",null,"Values:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"directionWorld")," [",(0,r.kt)("strong",null," vec3 "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": The raycast's direction vector.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"fraction")," [",(0,r.kt)("strong",null," number "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": The fraction (0 - 1) of the distance reached until collision, divided by the ray's length.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"normalLocal")," [",(0,r.kt)("strong",null," vec3 "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": The normal vector of the hit surface, relative to the target's rotation.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"normalWorld")," [",(0,r.kt)("strong",null," vec3 "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": The normal vector of the hit surface.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"originWorld")," [",(0,r.kt)("strong",null," vec3 "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": The raycast's start position.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"pointLocal")," [",(0,r.kt)("strong",null," vec3 "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": The world position of the hit point, relative to the target's position.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"pointWorld")," [",(0,r.kt)("strong",null," vec3 "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": The world position of the hit point.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"type")," [",(0,r.kt)("strong",null," string "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": The physics type of the shape that was hit.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"valid")," [",(0,r.kt)("strong",null," bool "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": Whether the raycast hit a target or not.")))),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("h3",{id:"getareatrigger"},"getAreaTrigger"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"raycastResult:getAreaTrigger()\n")),(0,r.kt)("p",null,"Returns the ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/AreaTrigger"},"AreaTrigger")," hit by the raycast, if the result type is ",(0,r.kt)("code",null,"areaTrigger"),"."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"raycastResult")," [",(0,r.kt)("strong",null," raycastResult "),"]: The raycastResult.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," areaTrigger "),"]",": The areaTrigger.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getbody"},"getBody"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"raycastResult:getBody()\n")),(0,r.kt)("p",null,"Returns the ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Body"},"Body")," hit by the raycast, if the result type is ",(0,r.kt)("code",null,"body"),"."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"raycastResult")," [",(0,r.kt)("strong",null," raycastResult "),"]: The raycastResult.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," body "),"]",": The body.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getcharacter"},"getCharacter"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"raycastResult:getCharacter()\n")),(0,r.kt)("p",null,"Returns the ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Character"},"Character")," hit by the raycast, if the result type is ",(0,r.kt)("code",null,"character"),"."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"raycastResult")," [",(0,r.kt)("strong",null," raycastResult "),"]: The raycastResult.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," character "),"]",": The character.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getharvestable"},"getHarvestable"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"raycastResult:getHarvestable()\n")),(0,r.kt)("p",null,"Returns the ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Harvestable"},"Harvestable")," hit by the raycast, if the result type is ",(0,r.kt)("code",null,"harvestable"),"."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"raycastResult")," [",(0,r.kt)("strong",null," raycastResult "),"]: The raycastResult.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," harvestable "),"]",": The harvestable.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getjoint"},"getJoint"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"raycastResult:getJoint()\n")),(0,r.kt)("p",null,"Returns the ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Joint"},"Joint")," hit by the raycast, if the result type is ",(0,r.kt)("code",null,"joint"),"."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"raycastResult")," [",(0,r.kt)("strong",null," raycastResult "),"]: The raycastResult.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," joint "),"]",": The joint.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getliftdata"},"getLiftData"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"raycastResult:getLiftData()\n")),(0,r.kt)("p",null,"Returns the ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Lift"},"Lift")," hit by the raycast, if the result type is ",(0,r.kt)("code",null,"lift"),"."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"raycastResult")," [",(0,r.kt)("strong",null," raycastResult "),"]: The raycastResult.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," lift "),"]",": The lift."),(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," bool "),"]",": Whether the lift is top(?) or not.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getshape"},"getShape"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"raycastResult:getShape()\n")),(0,r.kt)("p",null,"Returns the ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Shape"},"Shape")," hit by the raycast, if the result type is ",(0,r.kt)("code",null,"shape"),"."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"raycastResult")," [",(0,r.kt)("strong",null," raycastResult "),"]: The raycastResult.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," shape "),"]",": The shape.")),(0,r.kt)("hr",null))}p.isMDXComponent=!0}}]);