"use strict";(self.webpackChunksm_docs=self.webpackChunksm_docs||[]).push([[983],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var l=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=l.createContext({}),c=function(e){var t=l.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return l.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},m=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,k=d["".concat(s,".").concat(m)]||d[m]||p[m]||r;return n?l.createElement(k,o(o({ref:t},u),{},{components:n})):l.createElement(k,o({ref:t},u))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:a,o[1]=i;for(var c=2;c<r;c++)o[c]=n[c];return l.createElement.apply(null,o)}return l.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9739:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var l=n(7462),a=(n(7294),n(3905));const r={sidebar_position:6,title:"PlayerClass",hide_title:!0,"sidebar-label":"PlayerClass"},o=void 0,i={unversionedId:"Game-Script-Environment/Classes/PlayerClass",id:"Game-Script-Environment/Classes/PlayerClass",title:"PlayerClass",description:"PlayerClass",source:"@site/docs/Game-Script-Environment/Classes/PlayerClass.md",sourceDirName:"Game-Script-Environment/Classes",slug:"/Game-Script-Environment/Classes/PlayerClass",permalink:"/docs/Game-Script-Environment/Classes/PlayerClass",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,title:"PlayerClass",hide_title:!0,"sidebar-label":"PlayerClass"},sidebar:"tutorialSidebar",previous:{title:"UnitClass",permalink:"/docs/Game-Script-Environment/Classes/UnitClass"},next:{title:"HarvestableClass",permalink:"/docs/Game-Script-Environment/Classes/HarvestableClass"}},s={},c=[{value:"PlayerClass",id:"playerclass",level:3},{value:"Server-only",id:"server-only",level:2},{value:"onProjectile",id:"onprojectile",level:3},{value:"onExplosion",id:"onexplosion",level:3},{value:"onMelee",id:"onmelee",level:3},{value:"onCollision",id:"oncollision",level:3},{value:"onCollisionCrush",id:"oncollisioncrush",level:3},{value:"onShapeRemoved",id:"onshaperemoved",level:3},{value:"onInventoryChanges",id:"oninventorychanges",level:3},{value:"Client-only",id:"client-only",level:2},{value:"onInteract",id:"oninteract",level:3},{value:"onCancel",id:"oncancel",level:3},{value:"onReload",id:"onreload",level:3}],u={toc:c},d="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,l.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("br",null),(0,a.kt)("h3",{id:"playerclass"},"PlayerClass"),(0,a.kt)("p",null,"A script class that is instanced for every active ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Player"},"Player")," in the game."),(0,a.kt)("p",null,"A player represents a user controlling a ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Character"},"Character"),"."),(0,a.kt)("p",null,"The player script handles actions made by the user."),(0,a.kt)("p",null,"The class can receive events sent with ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Static-Functions/sm.event#sendtoplayer"},"sm.event.sendToPlayer"),"."),(0,a.kt)("p",null,"The fields below are accessed using ",(0,a.kt)("code",null,"self.fieldName")," in the PlayerClass script:"),(0,a.kt)("strong",null,"Fields:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/docs/Game-Script-Environment/Userdata/Player"},"Player")),(0,a.kt)("td",{parentName:"tr",align:null},"player"),(0,a.kt)("td",{parentName:"tr",align:null},"The ",(0,a.kt)("a",{parentName:"td",href:"/docs/Game-Script-Environment/Userdata/Player"},"Player")," game object belonging to this class instance.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/docs/Game-Script-Environment/Userdata/Network"},"Network")),(0,a.kt)("td",{parentName:"tr",align:null},"network"),(0,a.kt)("td",{parentName:"tr",align:null},"A ",(0,a.kt)("a",{parentName:"td",href:"/docs/Game-Script-Environment/Userdata/Network"},"Network")," object that can be used to send data between client and server.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/docs/Game-Script-Environment/Userdata/Storage"},"Storage")),(0,a.kt)("td",{parentName:"tr",align:null},"storage"),(0,a.kt)("td",{parentName:"tr",align:null},"A server-side ",(0,a.kt)("a",{parentName:"td",href:"/docs/Game-Script-Environment/Userdata/Storage"},"Storage")," object that can be used to save and load data to/from the world database.")))),(0,a.kt)("strong",null,"Callbacks:")," ",(0,a.kt)("br",null),(0,a.kt)("h2",{id:"server-only"},"Server-only"),(0,a.kt)("h3",{id:"onprojectile"},"onProjectile"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function PlayerClass.server_onProjectile( self, position, airTime, velocity, projectileName, shooter, damage, customData, normal, uuid )\nend\n")),(0,a.kt)("p",null,"Called when the ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Player"},"Player"),"'s ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Character"},"Character")," is hit by a projectile."),(0,a.kt)("admonition",{title:"note",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"If the shooter is destroyed before the projectile hits, the shooter value will be nil.")),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"self")," [",(0,a.kt)("strong",null," table "),"]: The class instance."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"position")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The position in world space where the projectile hit the Character."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"airTime")," [",(0,a.kt)("strong",null," number "),"]: The time, in seconds, that the projectile spent flying before the hit."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"velocity")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The velocity of the projectile at impact."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"projectileName")," [",(0,a.kt)("strong",null," string "),"]: The name of the projectile. (Legacy, use uuid instead)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shooter")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Player"}," Player "),"/",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Unit"}," Unit "),"/",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape "),"/",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Harvestable"}," Harvestable "),"/ nil "),"]: The shooter. Can be a Player, Unit, Shape, Harvestable or nil if unknown."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"damage")," [",(0,a.kt)("strong",null," int "),"]: The damage value of the projectile."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"customData")," [",(0,a.kt)("strong",null," any "),"]: A Lua object that can be defined at shoot time using ",(0,a.kt)("code",null,"sm.projectile.customProjectileAttack")," or any other custom version."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"normal")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The normal at the point of impact."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"uuid")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Uuid"}," Uuid ")," "),"]: The uuid of the projectile.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"onexplosion"},"onExplosion"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function PlayerClass.server_onExplosion( self, center, destructionLevel )\nend\n")),(0,a.kt)("p",null,"Called when the ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Player"},"Player"),"'s ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Character"},"Character")," is hit by an explosion. ",(0,a.kt)("br",null)),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"self")," [",(0,a.kt)("strong",null," table "),"]: The class instance."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"center")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The center of the explosion."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"destructionLevel")," [",(0,a.kt)("strong",null," int "),"]: The level of destruction done by this explosion. Corresponds to the ",(0,a.kt)("code",null,"durability")," rating of a Shape.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"onmelee"},"onMelee"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function PlayerClass.server_onMelee( self, position, attacker, damage, power, direction, normal )\nend\n")),(0,a.kt)("p",null,"Called when the ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Player"},"Player"),"'s ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Character"},"Character")," is hit by a melee attack."),(0,a.kt)("admonition",{title:"note",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"If the attacker is destroyed before the hit lands, the attacker value will be nil.")),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"self")," [",(0,a.kt)("strong",null," table "),"]: The class instance."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"position")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The position in world space where the Character was hit."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"attacker")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Player"}," Player "),"/ nil "),"]: The attacker. Can be a Player or nil if unknown. Attacks made by a Unit will be nil on the client."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"damage")," [",(0,a.kt)("strong",null," int "),"]: The damage value of the melee hit."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"power")," [",(0,a.kt)("strong",null," number "),"]: The physical impact of the hit."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"direction")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The direction of the melee attack."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"normal")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The normal at the point of impact.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"oncollision"},"onCollision"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function PlayerClass.server_onCollision( self, other, position, selfPointVelocity, otherPointVelocity, normal )\nend\n")),(0,a.kt)("p",null,"Called when the ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Player"},"Player"),"'s ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Character"},"Character")," collides with another object."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"self")," [",(0,a.kt)("strong",null," table "),"]: The class instance."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"other")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape "),"/",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Character"}," Character "),"/",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Harvestable"}," Harvestable "),"/",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Lift"}," Lift "),"/ nil "),"]: The other object. Nil if terrain."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"position")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Player"}," Player "),"/ nil "),"]: The position in world space where the collision occurred."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"selfPointVelocity")," [",(0,a.kt)("strong",null," int "),"]: The velocity that that the Character had at the point of collision."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"otherPointVelocity")," [",(0,a.kt)("strong",null," number "),"]: The velocity that that the other object had at the point of collision."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"normal")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The collision normal between the Character and the other object.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"oncollisioncrush"},"onCollisionCrush"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function PlayerClass.server_onCollisionCrush( self )\nend\n")),(0,a.kt)("p",null,"Called when the ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Player"},"Player"),"'s ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Character"},"Character")," is being crushed."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"self")," [",(0,a.kt)("strong",null," table "),"]: The class instance.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"onshaperemoved"},"onShapeRemoved"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function PlayerClass.server_onShapeRemoved( self, items )\n    --items = { { uuid = uuid, amount = integer, type = string }, .. }\nend\n")),(0,a.kt)("p",null,"Called when the ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Player"},"Player")," removed a ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Shape"},"Shape")," from the ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/World"},"World"),"."),(0,a.kt)("p",null,"Will receive a table of tables listing the items removed by this action."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"self")," [",(0,a.kt)("strong",null," table "),"]: The class instance."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"items")," [",(0,a.kt)("strong",null," table "),"]: A table listing the removed items. See the table format below.")),(0,a.kt)("strong",null,"Table Format:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"uuid")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Uuid"}," Uuid ")," "),"]: The item uuid."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"amount")," [",(0,a.kt)("strong",null," int "),"]: The amount of items with this uuid."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"type")," [",(0,a.kt)("strong",null," string "),"]: Type of shape removed. Can be ",(0,a.kt)("code",null,"part"),", ",(0,a.kt)("code",null,"block")," or ",(0,a.kt)("code",null,"joint"),".")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"oninventorychanges"},"onInventoryChanges"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function PlayerClass.server_onInventoryChanges( self, inventory, changes )\n    --changes = { { uuid = Uuid, difference = integer, tool = Tool }, .. }\nend\n")),(0,a.kt)("p",null,"Called when the ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Player"},"Player")," has changes in the inventory ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Container"},"Container"),"."),(0,a.kt)("p",null,"Will receive a table listing the changes."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"self")," [",(0,a.kt)("strong",null," table "),"]: The class instance."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"inventory")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Container"}," Container ")," "),"]: The player's inventory Container."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"changes")," [",(0,a.kt)("strong",null," table "),"]: A table listing the changes. See the table format below.")),(0,a.kt)("strong",null,"Table Format:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"uuid")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Uuid"}," Uuid ")," "),"]: The item uuid."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"difference")," [",(0,a.kt)("strong",null," int "),"]: The change in amount. Positive numbers mean item gain, negative item loss."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"tool")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Tool"}," Tool "),"/ nil "),"]: (Optional) If the item is a Tool, this is the tool. Otherwise nil.")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"client-only"},"Client-only"),(0,a.kt)("h3",{id:"oninteract"},"onInteract"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function PlayerClass.client_onInteract( self, character, state )\nend\n")),(0,a.kt)("p",null,"Called when the player presses or releases the ",(0,a.kt)("code",null,"Use")," key (default ",(0,a.kt)("code",null,"E"),")."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"self")," [",(0,a.kt)("strong",null," table "),"]: The class instance."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"character")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Character"}," Character ")," "),"]: The player's character. Same as ",(0,a.kt)("code",null,"self.player.character"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"state")," [",(0,a.kt)("strong",null," bool "),"]: The interaction state (",(0,a.kt)("code",null,"true")," if pressed, ",(0,a.kt)("code",null,"false")," if released).")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"oncancel"},"onCancel"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function PlayerClass.client_onCancel( self )\nend\n")),(0,a.kt)("p",null,"Called when the player presses the ",(0,a.kt)("code",null,"Cancel")," key (default ",(0,a.kt)("code",null,"ESC"),")."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"self")," [",(0,a.kt)("strong",null," table "),"]: The class instance.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"onreload"},"onReload"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function PlayerClass.client_onReload( self )\nend\n")),(0,a.kt)("p",null,"Called when the player presses the ",(0,a.kt)("code",null,"Reload")," key (default ",(0,a.kt)("code",null,"R"),")."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"self")," [",(0,a.kt)("strong",null," table "),"]: The class instance.")),(0,a.kt)("hr",null))}p.isMDXComponent=!0}}]);