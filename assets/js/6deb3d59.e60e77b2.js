"use strict";(self.webpackChunksm_docs=self.webpackChunksm_docs||[]).push([[2127],{3905:(t,e,l)=>{l.d(e,{Zo:()=>s,kt:()=>d});var n=l(7294);function r(t,e,l){return e in t?Object.defineProperty(t,e,{value:l,enumerable:!0,configurable:!0,writable:!0}):t[e]=l,t}function a(t,e){var l=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),l.push.apply(l,n)}return l}function u(t){for(var e=1;e<arguments.length;e++){var l=null!=arguments[e]?arguments[e]:{};e%2?a(Object(l),!0).forEach((function(e){r(t,e,l[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(l)):a(Object(l)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(l,e))}))}return t}function o(t,e){if(null==t)return{};var l,n,r=function(t,e){if(null==t)return{};var l,n,r={},a=Object.keys(t);for(n=0;n<a.length;n++)l=a[n],e.indexOf(l)>=0||(r[l]=t[l]);return r}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(n=0;n<a.length;n++)l=a[n],e.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(t,l)&&(r[l]=t[l])}return r}var k=n.createContext({}),c=function(t){var e=n.useContext(k),l=e;return t&&(l="function"==typeof t?t(e):u(u({},e),t)),l},s=function(t){var e=c(t.components);return n.createElement(k.Provider,{value:e},t.children)},i="mdxType",p={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var l=t.components,r=t.mdxType,a=t.originalType,k=t.parentName,s=o(t,["components","mdxType","originalType","parentName"]),i=c(l),m=r,d=i["".concat(k,".").concat(m)]||i[m]||p[m]||a;return l?n.createElement(d,u(u({ref:e},s),{},{components:l})):n.createElement(d,u({ref:e},s))}));function d(t,e){var l=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var a=l.length,u=new Array(a);u[0]=m;var o={};for(var k in e)hasOwnProperty.call(e,k)&&(o[k]=e[k]);o.originalType=t,o[i]="string"==typeof t?t:r,u[1]=o;for(var c=2;c<a;c++)u[c]=l[c];return n.createElement.apply(null,u)}return n.createElement.apply(null,l)}m.displayName="MDXCreateElement"},5686:(t,e,l)=>{l.r(e),l.d(e,{assets:()=>k,contentTitle:()=>u,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var n=l(7462),r=(l(7294),l(3905));const a={sidebar_position:29,title:"Vec3",hide_title:!0,"sidebar-label":"Vec3"},u=void 0,o={unversionedId:"Game-Script-Environment/Userdata/Vec3",id:"Game-Script-Environment/Userdata/Vec3",title:"Vec3",description:"Vec3",source:"@site/docs/Game-Script-Environment/Userdata/Vec3.md",sourceDirName:"Game-Script-Environment/Userdata",slug:"/Game-Script-Environment/Userdata/Vec3",permalink:"/docs/Game-Script-Environment/Userdata/Vec3",draft:!1,tags:[],version:"current",sidebarPosition:29,frontMatter:{sidebar_position:29,title:"Vec3",hide_title:!0,"sidebar-label":"Vec3"},sidebar:"tutorialSidebar",previous:{title:"Uuid",permalink:"/docs/Game-Script-Environment/Userdata/Uuid"},next:{title:"Widget",permalink:"/docs/Game-Script-Environment/Userdata/Widget"}},k={},c=[{value:"Vec3",id:"vec3",level:2},{value:"Functions",id:"functions",level:2},{value:"cross",id:"cross",level:3},{value:"dot",id:"dot",level:3},{value:"length",id:"length",level:3},{value:"length2",id:"length2",level:3},{value:"max",id:"max",level:3},{value:"min",id:"min",level:3},{value:"normalize",id:"normalize",level:3},{value:"rotate",id:"rotate",level:3},{value:"rotateX",id:"rotatex",level:3},{value:"rotateY",id:"rotatey",level:3},{value:"rotateZ",id:"rotatez",level:3},{value:"safeNormalize",id:"safenormalize",level:3}],s={toc:c},i="wrapper";function p(t){let{components:e,...l}=t;return(0,r.kt)(i,(0,n.Z)({},s,l,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("br",null),(0,r.kt)("h2",{id:"vec3"},"Vec3"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Associated namespace:")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Static-Functions/sm.vec3"},"sm.vec3")),(0,r.kt)("p",null,"A userdata object representing a ",(0,r.kt)("strong",null,"3D vector"),"."),(0,r.kt)("strong",null,"Operations:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Operation"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Vec3")," + ",(0,r.kt)("code",null,"Vec3")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns the sum of two vectors.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Vec3")," / ",(0,r.kt)("code",null,"Vec3")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns the quotient of two vectors, dividing element by element.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Vec3")," / ",(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns the quotient of a vector and a scalar.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Vec3")," == ",(0,r.kt)("code",null,"Vec3")),(0,r.kt)("td",{parentName:"tr",align:null},"Checks if two vectors are equal.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Vec3")," < ",(0,r.kt)("code",null,"Vec3")),(0,r.kt)("td",{parentName:"tr",align:null},'Returns whether the first vector is "less than" the second.')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Vec3")," * ",(0,r.kt)("code",null,"Vec3")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns the product of two vectors, multiplying element by element.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Vec3")," * ",(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns the product of a vector and a scalar.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Vec3")," - ",(0,r.kt)("code",null,"Vec3")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns the difference of two vectors.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"tostring( ",(0,r.kt)("code",null,"Vec3")," )"),(0,r.kt)("td",{parentName:"tr",align:null},"Returns the string representation of a vector.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-",(0,r.kt)("code",null,"Vec3")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns the negated vector.")))),(0,r.kt)("strong",null,"Values:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"x")," [",(0,r.kt)("strong",null," number "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": The vector's X value."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Set"),": Sets the vector's X value.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"y")," [",(0,r.kt)("strong",null," number "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": The vector's Y value."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Set"),": Sets the vector's Y value.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"z")," [",(0,r.kt)("strong",null," number "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": The vector's Z value."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Set"),": Sets the vector's Z value.")))),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("h3",{id:"cross"},"cross"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"vec3:cross( vector )\n")),(0,r.kt)("p",null,"Returns the ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Cross_product"},"cross product")," of two vectors."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"vec3")," [",(0,r.kt)("strong",null," vec3 "),"]: The vector."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"vector")," [",(0,r.kt)("strong",null," vec3 "),"]: The second vector.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," vec3 "),"]",": The cross product.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"dot"},"dot"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"vec3:dot( vector )\n")),(0,r.kt)("p",null,"Returns the ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Dot_product"},"dot product")," of two vectors."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"vec3")," [",(0,r.kt)("strong",null," vec3 "),"]: The vector."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"vector")," [",(0,r.kt)("strong",null," vec3 "),"]: The second vector.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," vec3 "),"]",": The dot product.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"length"},"length"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"vec3:length( vector )\n")),(0,r.kt)("p",null,"Returns the length of the vector."),(0,r.kt)("p",null,"If you want the squared length, using ",(0,r.kt)("a",{parentName:"p",href:"#length2"},"length2")," is faster than squaring the result of this function."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"vec3")," [",(0,r.kt)("strong",null," vec3 "),"]: The vector.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," number "),"]",": The length.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"length2"},"length2"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"vec3:length2( vector )\n")),(0,r.kt)("p",null,"Returns the squared length of the vector."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"vec3")," [",(0,r.kt)("strong",null," vec3 "),"]: The vector.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," number "),"]",": The squared length.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"max"},"max"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"vec3:max( vector )\n")),(0,r.kt)("p",null,"Returns the maximum value between two vectors components."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"vec3")," [",(0,r.kt)("strong",null," vec3 "),"]: The vector."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"vector")," [",(0,r.kt)("strong",null," vec3 "),"]: The second vector.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," vec3 "),"]",": Component wise maximum value vector.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"min"},"min"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"vec3:min( vector )\n")),(0,r.kt)("p",null,"Returns the minimum value between two vectors components."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"vec3")," [",(0,r.kt)("strong",null," vec3 "),"]: The vector."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"vector")," [",(0,r.kt)("strong",null," vec3 "),"]: The second vector.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," vec3 "),"]",": Component wise minimum value vector.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"normalize"},"normalize"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"vec3:normalize()\n")),(0,r.kt)("p",null,"Normalizes the vector, ie. converts it to a unit vector of length 1."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"vec3")," [",(0,r.kt)("strong",null," vec3 "),"]: The vector.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," vec3 "),"]",": The normalized vector.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"rotate"},"rotate"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"vec3:rotate( angle, normal )\n")),(0,r.kt)("p",null,"Rotates the vector around an axis."),(0,r.kt)("p",null,"The angle value uses ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Radian"},"radians"),"."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"vec3")," [",(0,r.kt)("strong",null," vec3 "),"]: The vector."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"angle")," [",(0,r.kt)("strong",null," number "),"]: The angle."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"normal")," [",(0,r.kt)("strong",null," vec3 "),"]: The axis to be rotated around.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," vec3 "),"]",": The rotated vector.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"rotatex"},"rotateX"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"vec3:rotateX( angle )\n")),(0,r.kt)("p",null,"Rotates the vector around the X axis."),(0,r.kt)("p",null,"The angle value uses ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Radian"},"radians"),"."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"vec3")," [",(0,r.kt)("strong",null," vec3 "),"]: The vector."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"angle")," [",(0,r.kt)("strong",null," number "),"]: The angle.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," vec3 "),"]",": The rotated vector.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"rotatey"},"rotateY"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"vec3:rotateY( angle )\n")),(0,r.kt)("p",null,"Rotates the vector around the Y axis."),(0,r.kt)("p",null,"The angle value uses ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Radian"},"radians"),"."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"vec3")," [",(0,r.kt)("strong",null," vec3 "),"]: The vector."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"angle")," [",(0,r.kt)("strong",null," number "),"]: The angle.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," vec3 "),"]",": The rotated vector.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"rotatez"},"rotateZ"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"vec3:rotateZ( angle )\n")),(0,r.kt)("p",null,"Rotates the vector around the Z axis."),(0,r.kt)("p",null,"The angle value uses ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Radian"},"radians"),"."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"vec3")," [",(0,r.kt)("strong",null," vec3 "),"]: The vector."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"angle")," [",(0,r.kt)("strong",null," number "),"]: The angle.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," vec3 "),"]",": The rotated vector.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"safenormalize"},"safeNormalize"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"vec3:safeNormalize( fallback )\n")),(0,r.kt)("p",null,"Normalizes a vector with safety, ie. converts to a unit vector of length 1."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"vec3")," [",(0,r.kt)("strong",null," vec3 "),"]: The vector."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"fallback")," [",(0,r.kt)("strong",null," vec3 "),"]: The fallback vector.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," vec3 "),"]",": The normalized vector.")),(0,r.kt)("hr",null))}p.isMDXComponent=!0}}]);