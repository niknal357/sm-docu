"use strict";(self.webpackChunksm_docs=self.webpackChunksm_docs||[]).push([[3778],{3187:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>o});var r=s(5893),t=s(1151);const a={sidebar_position:7,title:"HarvestableClass",hide_title:!0,"sidebar-label":"HarvestableClass"},i=void 0,l={id:"Game-Script-Environment/Classes/HarvestableClass",title:"HarvestableClass",description:"HarvestableClass",source:"@site/docs/Game-Script-Environment/Classes/HarvestableClass.md",sourceDirName:"Game-Script-Environment/Classes",slug:"/Game-Script-Environment/Classes/HarvestableClass",permalink:"/docs/Game-Script-Environment/Classes/HarvestableClass",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,title:"HarvestableClass",hide_title:!0,"sidebar-label":"HarvestableClass"},sidebar:"tutorialSidebar",previous:{title:"PlayerClass",permalink:"/docs/Game-Script-Environment/Classes/PlayerClass"},next:{title:"GameClass",permalink:"/docs/Game-Script-Environment/Classes/GameClass"}},c={},o=[{value:"HarvestableClass",id:"harvestableclass",level:3},{value:"Server + Client",id:"server--client",level:2},{value:"onProjectile",id:"onprojectile",level:3},{value:"onCollision",id:"oncollision",level:3},{value:"onMelee",id:"onmelee",level:3},{value:"canErase",id:"canerase",level:3},{value:"Server-only",id:"server-only",level:2},{value:"onUnload",id:"onunload",level:3},{value:"onReceiveUpdate",id:"onreceiveupdate",level:3},{value:"onExplosion",id:"onexplosion",level:3},{value:"onRemoved",id:"onremoved",level:3},{value:"Client-only",id:"client-only",level:2},{value:"onInteract",id:"oninteract",level:3},{value:"canInteract",id:"caninteract",level:3},{value:"onAction",id:"onaction",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h3,{id:"harvestableclass",children:"HarvestableClass"}),"\n",(0,r.jsxs)(n.p,{children:["A script class that is instanced for every ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Harvestable",children:"Harvestable"})," in the game."]}),"\n",(0,r.jsx)(n.p,{children:"A tree or a plant that can be harvested is a typical case of a harvestable."}),"\n",(0,r.jsxs)(n.p,{children:["The class can receive events sent with ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Static-Functions/sm.event#sendtoharvestable",children:"sm.event.sendToHarvestable"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The fields below are accessed using ",(0,r.jsx)("code",{children:"self.fieldName"})," in the HarvestableClass script:"]}),"\n",(0,r.jsx)("strong",{children:"Fields:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Harvestable",children:"Harvestable"})}),(0,r.jsx)(n.td,{children:"harvestable"}),(0,r.jsxs)(n.td,{children:["The ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Harvestable",children:"Harvestable"})," game object belonging to this class instance."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Network",children:"Network"})}),(0,r.jsx)(n.td,{children:"network"}),(0,r.jsxs)(n.td,{children:["A ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Network",children:"Network"})," object that can be used to send data between client and server."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Storage",children:"Storage"})}),(0,r.jsx)(n.td,{children:"storage"}),(0,r.jsxs)(n.td,{children:["A server-side ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Storage",children:"Storage"})," object that can be used to save and load data to/from the world database."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"any"}),(0,r.jsx)(n.td,{children:"data"}),(0,r.jsxs)(n.td,{children:["Data from the ",(0,r.jsx)("code",{children:"data"})," entry in the harvestable's JSON file entry."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"any"}),(0,r.jsx)(n.td,{children:"params"}),(0,r.jsxs)(n.td,{children:["Parameters given to ",(0,r.jsx)("code",{children:"sm.harvestable.create"})," or set in the terrain generation script."]})]})]})]}),"\n",(0,r.jsx)("strong",{children:"Constants:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Constants#harvestableclass",children:"poseWeightCount"})}),"\n",(0,r.jsx)("strong",{children:"Callbacks:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h2,{id:"server--client",children:"Server + Client"}),"\n",(0,r.jsx)(n.h3,{id:"onprojectile",children:"onProjectile"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function HarvestableClass.server_onProjectile( self, position, airTime, velocity, projectileName, shooter, damage, customData, normal, uuid )\r\nend\r\nfunction HarvestableClass.client_onProjectile( self, position, airTime, velocity, projectileName, shooter, damage, customData, normal, uuid )\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called when the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Harvestable",children:"Harvestable"})," is hit by a projectile."]}),"\n",(0,r.jsx)(n.admonition,{title:"note",type:"info",children:(0,r.jsx)(n.p,{children:"If the shooter is destroyed before the projectile hits, the shooter value will be nil."})}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"position"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The position in world space where the projectile hit the Harvestable."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"airTime"})," [",(0,r.jsx)("strong",{children:" number "}),"]: The time, in seconds, that the projectile spent flying before the hit."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"velocity"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The velocity of the projectile at impact."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"projectileName"})," [",(0,r.jsx)("strong",{children:" string "}),"]: The name of the projectile. (Legacy, use uuid instead)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"shooter"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Player",children:" Player "}),"/",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Unit",children:" Unit "}),"/",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape",children:" Shape "}),"/",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Harvestable",children:" Harvestable "}),"/ nil "]}),"]: The shooter. Can be a Player, Unit, Shape, Harvestable or nil if unknown."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"damage"})," [",(0,r.jsx)("strong",{children:" int "}),"]: The damage value of the projectile."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"customData"})," [",(0,r.jsx)("strong",{children:" any "}),"]: A Lua object that can be defined at shoot time using ",(0,r.jsx)("code",{children:"sm.projectile.customProjectileAttack"})," or any other custom version."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"normal"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The normal at the point of impact."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"uuid"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Uuid",children:" Uuid "})," "]}),"]: The uuid of the projectile."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"oncollision",children:"onCollision"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function HarvestableClass.server_onCollision( self, other, position, selfPointVelocity, otherPointVelocity, normal )\r\nend\r\nfunction HarvestableClass.client_onCollision( self, other, position, selfPointVelocity, otherPointVelocity, normal )\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called when the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Harvestable",children:"Harvestable"})," collides with another object."]}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"other"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape",children:" Shape "}),"/",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Character",children:" Character "}),"/",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Harvestable",children:" Harvestable "}),"/",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Lift",children:" Lift "}),"/ nil "]}),"]: The other object. Nil if terrain."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"position"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Player",children:" Player "}),"/ nil "]}),"]: The position in world space where the collision occurred."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"selfPointVelocity"})," [",(0,r.jsx)("strong",{children:" int "}),"]: The velocity that that the Harvestable had at the point of collision."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"otherPointVelocity"})," [",(0,r.jsx)("strong",{children:" number "}),"]: The velocity that that the other object had at the point of collision."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"normal"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The collision normal between the Harvestable and the other object."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"onmelee",children:"onMelee"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function HarvestableClass.server_onMelee( self, position, attacker, damage, power, direction, normal )\r\nend\r\nfunction HarvestableClass.client_onMelee( self, position, attacker, damage, power, direction, normal )\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called when the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Harvestable",children:"Harvestable"})," is hit by a melee attack."]}),"\n",(0,r.jsx)(n.admonition,{title:"note",type:"info",children:(0,r.jsx)(n.p,{children:"If the attacker is destroyed before the hit lands, the attacker value will be nil."})}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"position"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The position in world space where the Harvestable was hit."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"attacker"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Player",children:" Player "}),"/ nil "]}),"]: The attacker. Can be a Player or nil if unknown. Attacks made by a Unit will be nil on the client."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"damage"})," [",(0,r.jsx)("strong",{children:" int "}),"]: The damage value of the melee hit."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"power"})," [",(0,r.jsx)("strong",{children:" number "}),"]: The physical impact of the hit."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"direction"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The direction of the melee attack."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"normal"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The normal at the point of impact."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"canerase",children:"canErase"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function HarvestableClass.server_canErase( self )\r\n\treturn true --true or false, default false\r\nend\r\nfunction HarvestableClass.client_canErase( self )\r\n\treturn true --true or false, default false\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called to check whether the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Harvestable",children:"Harvestable"})," can be erased at this moment."]}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n"]}),"\n",(0,r.jsx)("strong",{children:"Returns:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["[",(0,r.jsx)("strong",{children:" bool "}),']: A boolean indicating whether the Harvestable can be erased or not. Defaults to "removable" json value which defaults to false.']}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"server-only",children:"Server-only"}),"\n",(0,r.jsx)(n.h3,{id:"onunload",children:"onUnload"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function HarvestableClass.server_onUnload( self )\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called when the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Harvestable",children:"Harvestable"})," is unloaded from the game because no ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Player",children:"Player"}),"'s ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Character",children:"Character"})," is close enough to it. ",(0,r.jsx)("br",{}),"\r\nAlso called when exiting the game."]}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"onreceiveupdate",children:"onReceiveUpdate"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function HarvestableClass.server_onReceiveUpdate( self )\r\nend\n"})}),"\n",(0,r.jsx)(n.p,{children:"Called occasionally on the HarvestableClass to indicate that some time has passed."}),"\n",(0,r.jsxs)(n.p,{children:["For performance reasons it is recommended to use this instead of ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Classes/CommonCallbacks#onfixedupdate",children:"server_onFixedUpdate"})," for updates that do not need to happen frequently."]}),"\n",(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Static-Functions/sm.game#getcurrenttick",children:"sm.game.getCurrentTick"})," to calculate the time."]}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"onexplosion",children:"onExplosion"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function HarvestableClass.server_onExplosion( self, center, destructionLevel )\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called when the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Harvestable",children:"Harvestable"})," is hit by an explosion. ",(0,r.jsx)("br",{})]}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"center"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The center of the explosion."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"destructionLevel"})," [",(0,r.jsx)("strong",{children:" int "}),"]: The level of destruction done by this explosion. Corresponds to the ",(0,r.jsx)("code",{children:"durability"})," rating of a Shape."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"onremoved",children:"onRemoved"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function HarvestableClass.server_onRemoved( self, player )\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called when a ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Player",children:"Player"})," wants to remove the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Harvestable",children:"Harvestable"}),"."]}),"\n",(0,r.jsx)(n.admonition,{title:"note",type:"info",children:(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)("code",{children:"HarvestableClass"})," is responsible for doing the remove using ",(0,r.jsxs)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Harvestable#destroy",children:["Harvestable",":destroy"]}),"."]})}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"player"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Player",children:" Player "})," "]}),"]: The Player that wants to remove the Harvestable."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"client-only",children:"Client-only"}),"\n",(0,r.jsx)(n.h3,{id:"oninteract",children:"onInteract"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function HarvestableClass.client_onInteract( self, character, state )\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called when a ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Player",children:"Player"})," is interacting with the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Harvestable",children:"Harvestable"})," by pressing the ",(0,r.jsx)("code",{children:"Use"})," key (default ",(0,r.jsx)("code",{children:"E"}),")."]}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"character"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Character",children:" Character "})," "]}),"]: The Character of the Player that is interacting with the Harvestable."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"state"})," [",(0,r.jsx)("strong",{children:" bool "}),"]: The interaction state (",(0,r.jsx)("code",{children:"true"})," if pressed, ",(0,r.jsx)("code",{children:"false"})," if released)."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"caninteract",children:"canInteract"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function HarvestableClass.client_canInteract( self, character )\r\n\treturn true --true or false, default true if onInteract is implemented\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called to check whether the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Harvestable",children:"Harvestable"})," can be interacted with at this moment."]}),"\n",(0,r.jsx)(n.admonition,{title:"note",type:"info",children:(0,r.jsxs)(n.p,{children:["This callback is also responsible for updating interaction text shown to the player using ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Static-Functions/sm.gui#setinteractiontext",children:"sm.gui.setInteractionText"}),"."]})}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"character"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Character",children:" Character "})," "]}),"]: The Character of the Player that is looking at the Harvestable."]}),"\n"]}),"\n",(0,r.jsx)("strong",{children:"Returns:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["[",(0,r.jsx)("strong",{children:" bool "}),"]: A boolean indicating whether the Harvestable can be interacted with or not (Defaults to true if ",(0,r.jsx)("code",{children:"client_onInteract"})," is implemented, otherwise false)."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"onaction",children:"onAction"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function HarvestableClass.client_onAction( self, action, state )\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called when the Harvestable receives input from a ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Player",children:"Player"})," with the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Character",children:"Character"})," locked to the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Harvestable",children:"Harvestable"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Details about the ",(0,r.jsx)("code",{children:"action"})," value are in ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Constants#sminteractableactions",children:"sm.interactable.actions"}),"."]}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"action"})," [",(0,r.jsx)("strong",{children:" int "}),"]: The action as an integer value."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"state"})," [",(0,r.jsx)("strong",{children:" bool "}),"]: True on begin action, false on end action."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>l,a:()=>i});var r=s(7294);const t={},a=r.createContext(t);function i(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);