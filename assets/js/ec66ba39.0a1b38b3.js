"use strict";(self.webpackChunksm_docs=self.webpackChunksm_docs||[]).push([[7247],{3905:(t,e,n)=>{n.d(e,{Zo:()=>k,kt:()=>c});var l=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);e&&(l=l.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,l)}return n}function u(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,l,r=function(t,e){if(null==t)return{};var n,l,r={},a=Object.keys(t);for(l=0;l<a.length;l++)n=a[l],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(l=0;l<a.length;l++)n=a[l],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var o=l.createContext({}),s=function(t){var e=l.useContext(o),n=e;return t&&(n="function"==typeof t?t(e):u(u({},e),t)),n},k=function(t){var e=s(t.components);return l.createElement(o.Provider,{value:e},t.children)},m="mdxType",p={inlineCode:"code",wrapper:function(t){var e=t.children;return l.createElement(l.Fragment,{},e)}},d=l.forwardRef((function(t,e){var n=t.components,r=t.mdxType,a=t.originalType,o=t.parentName,k=i(t,["components","mdxType","originalType","parentName"]),m=s(n),d=r,c=m["".concat(o,".").concat(d)]||m[d]||p[d]||a;return n?l.createElement(c,u(u({ref:e},k),{},{components:n})):l.createElement(c,u({ref:e},k))}));function c(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var a=n.length,u=new Array(a);u[0]=d;var i={};for(var o in e)hasOwnProperty.call(e,o)&&(i[o]=e[o]);i.originalType=t,i[m]="string"==typeof t?t:r,u[1]=i;for(var s=2;s<a;s++)u[s]=n[s];return l.createElement.apply(null,u)}return l.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7691:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>o,contentTitle:()=>u,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var l=n(7462),r=(n(7294),n(3905));const a={sidebar_position:48,title:"sm.util",hide_title:!0,"sidebar-label":"sm.util"},u=void 0,i={unversionedId:"Game-Script-Environment/Static-Functions/sm.util",id:"Game-Script-Environment/Static-Functions/sm.util",title:"sm.util",description:"sm.util",source:"@site/docs/Game-Script-Environment/Static-Functions/sm.util.md",sourceDirName:"Game-Script-Environment/Static-Functions",slug:"/Game-Script-Environment/Static-Functions/sm.util",permalink:"/docs/Game-Script-Environment/Static-Functions/sm.util",draft:!1,tags:[],version:"current",sidebarPosition:48,frontMatter:{sidebar_position:48,title:"sm.util",hide_title:!0,"sidebar-label":"sm.util"},sidebar:"tutorialSidebar",previous:{title:"sm.unit",permalink:"/docs/Game-Script-Environment/Static-Functions/sm.unit"},next:{title:"sm.uuid",permalink:"/docs/Game-Script-Environment/Static-Functions/sm.uuid"}},o={},s=[{value:"sm.util",id:"smutil",level:2},{value:"Functions",id:"functions",level:2},{value:"axesToQuat",id:"axestoquat",level:3},{value:"bezier2",id:"bezier2",level:3},{value:"bezier2",id:"bezier2-1",level:3},{value:"clamp",id:"clamp",level:3},{value:"easing",id:"easing",level:3},{value:"lerp",id:"lerp",level:3},{value:"positiveModulo",id:"positivemodulo",level:3},{value:"smootherstep",id:"smootherstep",level:3},{value:"smoothstep",id:"smoothstep",level:3}],k={toc:s},m="wrapper";function p(t){let{components:e,...n}=t;return(0,r.kt)(m,(0,l.Z)({},k,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("br",null),(0,r.kt)("h2",{id:"smutil"},"sm.util"),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",null,"util")," library offers various math-related functions."),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("h3",{id:"axestoquat"},"axesToQuat"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"sm.util.axesToQuat( xAxis, zAxis )\n")),(0,r.kt)("p",null,"Constructs a quaternion from an X and Z axis."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"xAxis")," [",(0,r.kt)("strong",null," vec3 "),"]: The X axis."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"zAxis")," [",(0,r.kt)("strong",null," vec3 "),"]: The Z axis.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," quat "),"]",": The created quaternion.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"bezier2"},"bezier2"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"sm.util.bezier2( c0, c1, c2, t )\n")),(0,r.kt)("p",null,"Quadratic Bezier interpolation. One dimensional bezier curve."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"c0")," [",(0,r.kt)("strong",null," number "),"]: The start value."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"c1")," [",(0,r.kt)("strong",null," number "),"]: The control point."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"c2")," [",(0,r.kt)("strong",null," number "),"]: The the end value."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"t")," [",(0,r.kt)("strong",null," number "),"]: The interpolation step.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," number "),"]",": The interpolated value.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"bezier2-1"},"bezier2"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"sm.util.bezier2( c0, c1, c2, c3, t )\n")),(0,r.kt)("p",null,"Cubic Bezier interpolation. One dimensional bezier curve."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"c0")," [",(0,r.kt)("strong",null," number "),"]: The start value."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"c1")," [",(0,r.kt)("strong",null," number "),"]: The first control point."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"c2")," [",(0,r.kt)("strong",null," number "),"]: The second control point."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"c3")," [",(0,r.kt)("strong",null," number "),"]: The the end value."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"t")," [",(0,r.kt)("strong",null," number "),"]: The interpolation step.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," number "),"]",": The interpolated value.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"clamp"},"clamp"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"sm.util.clamp( value, min, max )\n")),(0,r.kt)("p",null,"Restricts a value to a given range."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"value")," [",(0,r.kt)("strong",null," number "),"]: The value."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"min")," [",(0,r.kt)("strong",null," number "),"]: The lower limit."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"max")," [",(0,r.kt)("strong",null," number "),"]: The upper limit.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," number "),"]",": The clamped value.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"easing"},"easing"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"sm.util.easing( easing, p )\n")),(0,r.kt)("p",null,"Applies an easing function to a given input."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Easing function names"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"linear")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeInQuad")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeOutQuad")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeInOutQuad")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeInCubic")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeOutCubic")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeInOutCubic")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeInQuart")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeOutQuart")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeInOutQuart")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeInQuint")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeOutQuint")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeInOutQuint")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeInSine")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeOutSine")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeInOutSine")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeInCirc")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeOutCirc")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeInOutCirc")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeInExpo")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeOutExpo")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeInOutExpo")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeInElastic")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeOutElastic")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeInOutElastic")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeInBack")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeOutBack")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeInOutBack")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeInBounce")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeOutBounce")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"easeInOutBounce")))),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"easing")," [",(0,r.kt)("strong",null," string "),"]: The easing function name."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"p")," [",(0,r.kt)("strong",null," number "),"]: The easing function input.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," number "),"]",": The output.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"lerp"},"lerp"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"sm.util.lerp( a, b, t )\n")),(0,r.kt)("p",null,"Linear interpolation between two values. This is known as a lerp."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"a")," [",(0,r.kt)("strong",null," number "),"]: The first value."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"b")," [",(0,r.kt)("strong",null," number "),"]: The second value."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"t")," [",(0,r.kt)("strong",null," number "),"]: The interpolation step.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," number "),"]",": The interpolated value.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"positivemodulo"},"positiveModulo"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"sm.util.positiveModulo( x, n )\n")),(0,r.kt)("p",null,"Returns the positive remainder after division of ",(0,r.kt)("code",null,"x")," by ",(0,r.kt)("code",null,"n"),"."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"x")," [",(0,r.kt)("strong",null," integer "),"]: The number."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"n")," [",(0,r.kt)("strong",null," integer "),"]: The modulo value.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," number "),"]",": The value.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"smootherstep"},"smootherstep"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"sm.util.smootherstep( edge0, edge1, x )\n")),(0,r.kt)("p",null,"An improved version of the smoothstep function which has zero 1st and 2nd order derivatives at ",(0,r.kt)("code",null,"x = edge0")," and ",(0,r.kt)("code",null,"x = edge1"),"."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"edge0")," [",(0,r.kt)("strong",null," number "),"]: The value of the lower edge of the Hermite function."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"edge1")," [",(0,r.kt)("strong",null," number "),"]: The value of the upper edge of the Hermite function."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"x")," [",(0,r.kt)("strong",null," number "),"]: The source value for interpolation.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," number "),"]",": The value.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"smoothstep"},"smoothstep"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"sm.util.smoothstep( edge0, edge1, x )\n")),(0,r.kt)("p",null,"Performs smooth Hermite interpolation between 0 and 1 when ",(0,r.kt)("code",null,"edge0 < x < edge1"),". ",(0,r.kt)("br",null),"\nThis is useful in cases where a threshold function with a smooth transition is desired."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"edge0")," [",(0,r.kt)("strong",null," number "),"]: The value of the lower edge of the Hermite function."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"edge1")," [",(0,r.kt)("strong",null," number "),"]: The value of the upper edge of the Hermite function."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"x")," [",(0,r.kt)("strong",null," number "),"]: The source value for interpolation.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," number "),"]",": The value.")),(0,r.kt)("hr",null))}p.isMDXComponent=!0}}]);