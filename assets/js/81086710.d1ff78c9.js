"use strict";(self.webpackChunksm_docs=self.webpackChunksm_docs||[]).push([[6178],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),h=r,m=u["".concat(s,".").concat(h)]||u[h]||d[h]||o;return n?a.createElement(m,l(l({ref:t},p),{},{components:n})):a.createElement(m,l({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=h;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},9789:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:1,title:"Introduction",hide_title:!0,"sidebar-label":"Introduction",slug:"/"},l=void 0,i={unversionedId:"Start",id:"Start",title:"Introduction",description:"Introduction",source:"@site/docs/Start.md",sourceDirName:".",slug:"/",permalink:"/docs/",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Introduction",hide_title:!0,"sidebar-label":"Introduction",slug:"/"},sidebar:"tutorialSidebar",next:{title:"Info",permalink:"/docs/Game-Script-Environment/Info"}},s={},c=[{value:"Introduction",id:"introduction",level:3},{value:"Console",id:"console",level:3},{value:"Classes",id:"classes",level:3},{value:"Static Functions",id:"static-functions",level:3},{value:"Userdata",id:"userdata",level:3},{value:"Sandboxes",id:"sandboxes",level:3},{value:"Server",id:"server",level:3},{value:"Client",id:"client",level:3}],p={toc:c},u="wrapper";function d(e){let{components:t,...o}=e;return(0,r.kt)(u,(0,a.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h3",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"Welcome! ",(0,r.kt)("br",null),"\nThis is an improved version of the Scrap Mechanic Lua API Reference at ",(0,r.kt)("a",{parentName:"p",href:"https://scrapmechanic.com/api/index.html"},"https://scrapmechanic.com/api/index.html"),". ",(0,r.kt)("br",null)),(0,r.kt)("p",null,"A compiled version of this website will always be available ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/niknal357/sm-docu"},"here"),". ",(0,r.kt)("br",null)),(0,r.kt)("p",null,"In this documentation, you will find details specific to Scrap Mechanic's Lua scripting. ",(0,r.kt)("br",null),"\nFor more general information on how the Lua scripting language works, you can review the official Lua documentation. ",(0,r.kt)("br",null)),(0,r.kt)("p",null,"Scrap Mechanic uses Lua version 5.1. Check the official ",(0,r.kt)("a",{parentName:"p",href:"https://www.lua.org/manual/5.1/"},"Manual")," for more information. ",(0,r.kt)("br",null)),(0,r.kt)("p",null,"The documentation is also available as a ",(0,r.kt)("a",{target:"_blank",href:n(2488).Z},"JSON")," and as a ",(0,r.kt)("a",{target:"_blank",href:n(4281).Z},"Lua documentation file"),". ",(0,r.kt)("br",null)),(0,r.kt)("admonition",{title:"note",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"This documentation is for Scrap Mechanic Version ",(0,r.kt)("strong",null,"0.6.0 or later"),"."),(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("strong",null,"previous documentation")," for Scrap Mechanic Version ",(0,r.kt)("strong",null,"0.5.1")," is no longer available, as the content was not preserved."),(0,r.kt)("p",{parentName:"admonition"},"If you encounter any errors, malfunctions, broken links or missing information, please ",(0,r.kt)("br",null),"\nreport them to niknal in the ",(0,r.kt)("a",{parentName:"p",href:"https://discord.gg/wEWrDn4qWF"},"MTech Discord Server"),".")),(0,r.kt)("h3",{id:"console"},"Console"),(0,r.kt)("p",null,"It is recommended to start the game with the ",(0,r.kt)("code",null,"-dev")," launch option in steam to get access to the ",(0,r.kt)("br",null),"\nDebug Console and enable the script hot-reload feature. ",(0,r.kt)("br",null),"\nUse ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Static-Functions/Global#print"},"print")," to print data to the console. ",(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"classes"},"Classes"),(0,r.kt)("p",null,"Classes act as the entry point from the game to the world of Lua. ",(0,r.kt)("br",null),'\nA script class is for example a buildable part with a "scripted" json object:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"scripted": {\n    "filename": "$CONTENT_DATA/Scripts/MyShape.lua",\n    "classname": "MyShape",\n    "data": {\n        "hello": "Hello world!"\n    }\n},\n')),(0,r.kt)("strong",null,"Lua Script:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'-- MyShape.lua - Interactable part example script\n\n-- Creates a new class\nMyShape = class()\n\n-- Sets ShapeClass constants\nMyShape.maxParentCount = 1\nMyShape.maxChildCount = 0\nMyShape.connectionInput = sm.interactable.connectionType.none\nMyShape.connectionOutput = sm.interactable.connectionType.logic\nMyShape.colorNormal = sm.color.new( 0x777777ff )\nMyShape.colorHighlight = sm.color.new( 0x888888ff )\n\n-- Called on creation\nfunction MyShape:server_onCreate()\n    print( self.data.hello )\nend\n\n-- Called on creation\nfunction MyShape:client_onCreate()\n    self.cl = { time = 0 }\nend\n\n-- Called every tick\nfunction MyShape:client_onFixedUpdate( timeStep )\n    self.cl.time = self.cl.time + timeStep\nend\n\n-- Called on interact\nfunction MyShape:client_onInteract( character, state )\n    if state then\n        print( "Pressed E" )\n        self.network:sendToServer( "sv_n_toggle" )\n    else\n        print( "Released E" )\n    end\n    print( "Shape has existed for", self.cl.time, "seconds" )\nend\n\nfunction MyShape:sv_n_toggle() \n    -- Toggle on and off\n    self.interactable.active = not self.interactable.active\nend\n')),(0,r.kt)("h3",{id:"static-functions"},"Static Functions"),(0,r.kt)("p",null,"Static Functions can be called from Lua to do certain things in the game, ",(0,r.kt)("br",null),"\nsuch as creating a part using ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Static-Functions/sm.shape#createpart"},"sm.shape.createPart"),". ",(0,r.kt)("br",null)),(0,r.kt)("p",null,"The createPart function will return a userdata object of type Shape which can be used to reference the part. ",(0,r.kt)("br",null),"\nThis reference is valid as long as the part still exists in the game. ",(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"userdata"},"Userdata"),(0,r.kt)("p",null,"Userdata is a Lua concept to define custom objects. ",(0,r.kt)("br",null),"\nScrap Mechanic uses userdata to add game objects such as a ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Shape"},"Shape")," and utility objects such as ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Vec3"},"Vec3"),". ",(0,r.kt)("br",null),"\nThey are similar to ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Instance_(computer_science)"},"instances")," in ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Object-oriented_programming"},"object-oriented programming"),". ",(0,r.kt)("br",null),"\nThe userdata objects have a set of member values and functions. ",(0,r.kt)("br",null)),(0,r.kt)("p",null,"Here is an example where the member function ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Shape#getcolor"},"getColor")," is called on the ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Shape"},"Shape")," userdata:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"local color = myShape.getColor( myShape ) -- All userdata functions require the object itself as first parameter.\n")),(0,r.kt)("p",null,"Or with ",(0,r.kt)("code",null,":")," syntactic sugar which adds the userdata itself as the first parameter:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"local color = myShape:getColor()\n")),(0,r.kt)("p",null,"Userdata can also be used as parameters to other functions. ",(0,r.kt)("br",null),"\nThe color returned by ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Shape#getcolor"},"getColor")," is another userdata type; ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Color"},"Color"),". That color can be used as a parameter to ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Shape#setcolor"},"setColor"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"local color = myShape:getColor()\nmyOtherShape:setColor( color ) -- Copy the color from myShape to myOtherShape\n")),(0,r.kt)("p",null,"Userdata can also have member values; which are actually convenience for calling a get or set member function. ",(0,r.kt)("br",null),"\nThis does exactly the same thing as the above:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"local color = myShape.color\nmyOtherShape.color = color -- Copy the color from myShape to myOtherShape\n")),(0,r.kt)("p",null,"Another way to get a ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Color"},"Color")," userdata object is to call ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Static-Functions/sm.color#new"},"sm.color.new"),". ",(0,r.kt)("br",null),"\nHere is an example where the shape color is set to red:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"local color = sm.color.new( 1.0, 0.0, 0.0 )\nmyShape.color = color -- Set shape to red\n")),(0,r.kt)("h3",{id:"sandboxes"},"Sandboxes"),(0,r.kt)("p",null,'When Lua code is run by the game, they are run in a "sandbox". ',(0,r.kt)("br",null),"\nThe sandbox makes sure no functions can be called that the sandbox does not allow in the current context. ",(0,r.kt)("br",null),"\nOne reason for the sandbox to exist is to enforce a server/client structure, this is to help make sure the scripts work when playing multiplayer. ",(0,r.kt)("br",null),"\nThe sandbox also makes sure no harmful code can be written in Lua by restricting file access and the ability to run executables. ",(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"server"},"Server"),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",null,"server")," side simulates the game world and communicates with all clients that are currently playing, including the host itself. ",(0,r.kt)("br",null),"\nThe server side is only running on the hosting player's computer. ",(0,r.kt)("br",null)),(0,r.kt)("p",null,"In a script class, ",(0,r.kt)("strong",null,"serverCallback")," implies that the the code will run in server mode and can only access functions marked as ",(0,r.kt)("strong",null,"server")," or ",(0,r.kt)("strong",null,"server and client"),". ",(0,r.kt)("br",null),"\nTo check if a script is running in server mode at runtime you can also use ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Static-Functions/sm#isservermode"},"sm.isServerMode"),". ",(0,r.kt)("br",null)),(0,r.kt)("h3",{id:"client"},"Client"),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",null,"client")," is the part of Scrap Mechanic that a player sees and interacts with (e.g. graphics, audio, player input, etc.). ",(0,r.kt)("br",null),"\nA client is running on every player's computer, including the host. ",(0,r.kt)("br",null)),(0,r.kt)("p",null,"In a script class, ",(0,r.kt)("strong",null,"clientCallback")," implies that the the code will run in server mode and can only access functions marked as ",(0,r.kt)("strong",null,"client")," or ",(0,r.kt)("strong",null,"server and client"),". ",(0,r.kt)("br",null)))}d.isMDXComponent=!0},2488:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/files/api_json-8d50266aa48dfc9b84c823dd54da5e41.zip"},4281:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/files/api_lua-26816e539b4b9ec0631cad7b7e6e13db.zip"}}]);