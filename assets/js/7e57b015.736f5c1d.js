"use strict";(self.webpackChunksm_docs=self.webpackChunksm_docs||[]).push([[1904],{3905:(t,e,a)=>{a.d(e,{Zo:()=>c,kt:()=>k});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function u(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var i=n.createContext({}),p=function(t){var e=n.useContext(i),a=e;return t&&(a="function"==typeof t?t(e):u(u({},e),t)),a},c=function(t){var e=p(t.components);return n.createElement(i.Provider,{value:e},t.children)},s="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},d=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,i=t.parentName,c=o(t,["components","mdxType","originalType","parentName"]),s=p(a),d=r,k=s["".concat(i,".").concat(d)]||s[d]||m[d]||l;return a?n.createElement(k,u(u({ref:e},c),{},{components:a})):n.createElement(k,u({ref:e},c))}));function k(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,u=new Array(l);u[0]=d;var o={};for(var i in e)hasOwnProperty.call(e,i)&&(o[i]=e[i]);o.originalType=t,o[s]="string"==typeof t?t:r,u[1]=o;for(var p=2;p<l;p++)u[p]=a[p];return n.createElement.apply(null,u)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},148:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>u,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const l={sidebar_position:21,title:"Quat",hide_title:!0,"sidebar-label":"Quat"},u=void 0,o={unversionedId:"Game-Script-Environment/Userdata/Quat",id:"Game-Script-Environment/Userdata/Quat",title:"Quat",description:"Quat",source:"@site/docs/Game-Script-Environment/Userdata/Quat.md",sourceDirName:"Game-Script-Environment/Userdata",slug:"/Game-Script-Environment/Userdata/Quat",permalink:"/docs/Game-Script-Environment/Userdata/Quat",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Game-Script-Environment/Userdata/Quat.md",tags:[],version:"current",sidebarPosition:21,frontMatter:{sidebar_position:21,title:"Quat",hide_title:!0,"sidebar-label":"Quat"},sidebar:"tutorialSidebar",previous:{title:"Portal",permalink:"/docs/Game-Script-Environment/Userdata/Portal"},next:{title:"RaycastResult",permalink:"/docs/Game-Script-Environment/Userdata/RaycastResult"}},i={},p=[{value:"Quat",id:"quat",level:2}],c={toc:p},s="wrapper";function m(t){let{components:e,...a}=t;return(0,r.kt)(s,(0,n.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("br",null),(0,r.kt)("h2",{id:"quat"},"Quat"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Associated namespace:")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Static-Functions/sm.quat"},"sm.quat")),(0,r.kt)("p",null,"A userdata object representing a ",(0,r.kt)("strong",null,"quaternion"),"."),(0,r.kt)("strong",null,"Values:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"x")," [",(0,r.kt)("strong",null," number "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": The quat's X value."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Set"),": Sets the quat's X value.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"y")," [",(0,r.kt)("strong",null," number "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": The quat's Y value."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Set"),": Sets the quat's Y value.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"z")," [",(0,r.kt)("strong",null," number "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": The quat's Z value."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Set"),": Sets the quat's Z value.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"w")," [",(0,r.kt)("strong",null," number "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": The quat's W value."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Set"),": Sets the quat's W value.")))),(0,r.kt)("strong",null,"Operations:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Operation"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Quat")," == ",(0,r.kt)("code",null,"Quat")),(0,r.kt)("td",{parentName:"tr",align:null},"Checks if two quaternions are equal.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Quat")," * ",(0,r.kt)("code",null,"Quat")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns the ",(0,r.kt)("a",{parentName:"td",href:"https://en.wikipedia.org/wiki/Quaternion#Hamilton_product"},"Hamilton product")," of two quaternions.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Quat")," * ",(0,r.kt)("code",null,"Vec3")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns the rotation by a quaternion on a vector.")))),(0,r.kt)("admonition",{title:"note",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"This information might be useful when multiplying a quaternion with another."),(0,r.kt)("p",{parentName:"admonition"},"The wikipedia page linked above uses the ",(0,r.kt)("code",null,"w, xi, yj, zk")," representation, while the game uses ",(0,r.kt)("code",null,"xi, yj, zk, w"),"."),(0,r.kt)("code",null,"Quat1 * Quat2")," is equal to:",(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"sm.quat.new(\n    Quat1.w * Quat2.x + Quat1.x * Quat2.w + Quat1.y * Quat2.z - Quat1.z * Quat2.y,\n    Quat1.w * Quat2.y - Quat1.x * Quat2.z + Quat1.y * Quat2.w + Quat1.z * Quat2.x,\n    Quat1.w * Quat2.z + Quat1.x * Quat2.y - Quat1.y * Quat2.x + Quat1.z * Quat2.w,\n    Quat1.w * Quat2.w - Quat1.x * Quat2.x - Quat1.y * Quat2.y - Quat1.z * Quat2.z\n)\n")),(0,r.kt)("p",{parentName:"admonition"},"Also, ",(0,r.kt)("code",null,"(Quat1 ","*"," Quat2) ","*"," Vec3")," is equal to ",(0,r.kt)("code",null,"Quat1 ","*"," (Quat2 ","*"," Vec3)"))))}m.isMDXComponent=!0}}]);