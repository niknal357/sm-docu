"use strict";(self.webpackChunksm_docs=self.webpackChunksm_docs||[]).push([[5850],{3905:(e,t,l)=>{l.d(t,{Zo:()=>s,kt:()=>m});var n=l(7294);function a(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function r(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,n)}return l}function u(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?r(Object(l),!0).forEach((function(t){a(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):r(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function i(e,t){if(null==e)return{};var l,n,a=function(e,t){if(null==e)return{};var l,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)l=r[n],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)l=r[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var k=n.createContext({}),o=function(e){var t=n.useContext(k),l=t;return e&&(l="function"==typeof e?e(t):u(u({},t),e)),l},s=function(e){var t=o(e.components);return n.createElement(k.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var l=e.components,a=e.mdxType,r=e.originalType,k=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),c=o(l),d=a,m=c["".concat(k,".").concat(d)]||c[d]||g[d]||r;return l?n.createElement(m,u(u({ref:t},s),{},{components:l})):n.createElement(m,u({ref:t},s))}));function m(e,t){var l=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=l.length,u=new Array(r);u[0]=d;var i={};for(var k in t)hasOwnProperty.call(t,k)&&(i[k]=t[k]);i.originalType=e,i[c]="string"==typeof e?e:a,u[1]=i;for(var o=2;o<r;o++)u[o]=l[o];return n.createElement.apply(null,u)}return n.createElement.apply(null,l)}d.displayName="MDXCreateElement"},6653:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>k,contentTitle:()=>u,default:()=>g,frontMatter:()=>r,metadata:()=>i,toc:()=>o});var n=l(7462),a=(l(7294),l(3905));const r={sidebar_position:11,title:"GuiInterface",hide_title:!0,"sidebar-label":"GuiInterface"},u=void 0,i={unversionedId:"Game-Script-Environment/Userdata/GuiInterface",id:"Game-Script-Environment/Userdata/GuiInterface",title:"GuiInterface",description:"GuiInterface",source:"@site/docs/Game-Script-Environment/Userdata/GuiInterface.md",sourceDirName:"Game-Script-Environment/Userdata",slug:"/Game-Script-Environment/Userdata/GuiInterface",permalink:"/docs/Game-Script-Environment/Userdata/GuiInterface",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Game-Script-Environment/Userdata/GuiInterface.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11,title:"GuiInterface",hide_title:!0,"sidebar-label":"GuiInterface"},sidebar:"tutorialSidebar",previous:{title:"Effect",permalink:"/docs/Game-Script-Environment/Userdata/Effect"},next:{title:"Harvestable",permalink:"/docs/Game-Script-Environment/Userdata/Harvestable"}},k={},o=[{value:"GuiInterface",id:"guiinterface",level:2},{value:"Functions",id:"functions",level:2},{value:"addGridItem",id:"addgriditem",level:3},{value:"addGridItemsFromFile",id:"addgriditemsfromfile",level:3},{value:"addListItem",id:"addlistitem",level:3},{value:"clearGrid",id:"cleargrid",level:3},{value:"clearList",id:"clearlist",level:3},{value:"close",id:"close",level:3},{value:"createDropDown",id:"createdropdown",level:3},{value:"createGridFromJson",id:"creategridfromjson",level:3},{value:"createHorizontalSlider",id:"createhorizontalslider",level:3},{value:"createVerticalSlider",id:"createverticalslider",level:3},{value:"destroy",id:"destroy",level:3},{value:"isActive",id:"isactive",level:3},{value:"open",id:"open",level:3},{value:"playEffect",id:"playeffect",level:3},{value:"playGridEffect",id:"playgrideffect",level:3},{value:"setButtonCallback",id:"setbuttoncallback",level:3},{value:"setButtonState",id:"setbuttonstate",level:3},{value:"setColor",id:"setcolor",level:3},{value:"setContainer",id:"setcontainer",level:3},{value:"setContainers",id:"setcontainers",level:3},{value:"setData",id:"setdata",level:3},{value:"setFadeRange",id:"setfaderange",level:3},{value:"setFocus",id:"setfocus",level:3},{value:"setGridButtonCallback",id:"setgridbuttoncallback",level:3},{value:"setGridItem",id:"setgriditem",level:3},{value:"setGridItemChangedCallback",id:"setgriditemchangedcallback",level:3},{value:"setGridMouseFocusCallback",id:"setgridmousefocuscallback",level:3},{value:"setGridSize",id:"setgridsize",level:3},{value:"setHost",id:"sethost",level:3},{value:"setIconImage",id:"seticonimage",level:3},{value:"setImage",id:"setimage",level:3},{value:"setItemIcon",id:"setitemicon",level:3},{value:"setListSelectionCallback",id:"setlistselectioncallback",level:3},{value:"setMaxRenderDistance",id:"setmaxrenderdistance",level:3},{value:"setMeshPreview",id:"setmeshpreview",level:3},{value:"setOnCloseCallback",id:"setonclosecallback",level:3},{value:"setRequireLineOfSight",id:"setrequirelineofsight",level:3},{value:"setSelectedDropDownItem",id:"setselecteddropdownitem",level:3},{value:"setSelectedListItem",id:"setselectedlistitem",level:3},{value:"setSliderCallback",id:"setslidercallback",level:3},{value:"setSliderData",id:"setsliderdata",level:3},{value:"setSliderPosition",id:"setsliderposition",level:3},{value:"setSliderRange",id:"setsliderrange",level:3},{value:"setSliderRangeLimit",id:"setsliderrangelimit",level:3},{value:"setText",id:"settext",level:3},{value:"setTextAcceptedCallback",id:"settextacceptedcallback",level:3},{value:"setTextChangedCallback",id:"settextchangedcallback",level:3},{value:"setVisible",id:"setvisible",level:3},{value:"setWorldPosition",id:"setworldposition",level:3},{value:"stopEffect",id:"stopeffect",level:3},{value:"stopGridEffect",id:"stopgrideffect",level:3},{value:"trackQuest",id:"trackquest",level:3},{value:"untrackQuest",id:"untrackquest",level:3}],s={toc:o},c="wrapper";function g(e){let{components:t,...l}=e;return(0,a.kt)(c,(0,n.Z)({},s,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("br",null),(0,a.kt)("h2",{id:"guiinterface"},"GuiInterface"),(0,a.kt)("p",null,"A userdata object representing a ",(0,a.kt)("strong",null,"GUI interface"),"."),(0,a.kt)("p",null,"A ",(0,a.kt)("strong",null,"GUI interface")," is an adapter between a script and a GUI."),(0,a.kt)("p",null,"Can only be used on the ",(0,a.kt)("a",{parentName:"p",href:"/docs/#client"},"client")),(0,a.kt)("strong",null,"Values:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"id")," [",(0,a.kt)("strong",null," int "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": The id of the effect.")))),(0,a.kt)("strong",null,"Operations:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Operation"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"GuiInterface")," == ",(0,a.kt)("code",null,"GuiInterface")),(0,a.kt)("td",{parentName:"tr",align:null},"Checks if two instances of ",(0,a.kt)("code",null,"GuiInterface")," refer to the same ",(0,a.kt)("code",null,"GuiInterface"),".")))),(0,a.kt)("h2",{id:"functions"},"Functions"),(0,a.kt)("h3",{id:"addgriditem"},"addGridItem"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:addGridItem( gridName, item )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Adds an item to a grid."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"gridName")," [",(0,a.kt)("strong",null," string "),"]: The name of the grid."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"item")," [",(0,a.kt)("strong",null," table "),"]: The item.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"addgriditemsfromfile"},"addGridItemsFromFile"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:addGridItemsFromFile( gridName, jsonPath, additionalData )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Adds an item to a grid from a JSON file."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"gridName")," [",(0,a.kt)("strong",null," string "),"]: The name of the grid."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"jsonPath")," [",(0,a.kt)("strong",null," string "),"]: The path to the JSON file."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"additionalData")," [",(0,a.kt)("strong",null," table "),"]: Additional data (optional).")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"addlistitem"},"addListItem"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:addListItem( listName, itemName, data )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Appends an item to a list."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"listName")," [",(0,a.kt)("strong",null," string "),"]: The name of the list."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"itemName")," [",(0,a.kt)("strong",null," string "),"]: The name of the item."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"data")," [",(0,a.kt)("strong",null," table "),"]: Table of data to store.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"cleargrid"},"clearGrid"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:clearGrid( gridName )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Clears a grid."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"gridName")," [",(0,a.kt)("strong",null," string "),"]: The name of the grid.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"clearlist"},"clearList"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:clearList( listName )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Clears a list."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"listName")," [",(0,a.kt)("strong",null," string "),"]: The name of the list.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"close"},"close"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:close()\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Closes the GUI."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"createdropdown"},"createDropDown"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:createDropDown( widgetName, functionName, options )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Creates a dropdown menu at the specified widget."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"widgetName")," [",(0,a.kt)("strong",null," string "),"]: The name of the widget."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"functionName")," [",(0,a.kt)("strong",null," string "),"]: The name of the callback function."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"options")," [",(0,a.kt)("strong",null," table "),"]: The options in the dropdown menu.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"creategridfromjson"},"createGridFromJson"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:createGridFromJson( gridName, data )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Creates a grid from a table."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"gridName")," [",(0,a.kt)("strong",null," string "),"]: The name of the grid."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"data")," [",(0,a.kt)("strong",null," table "),"]: The grid data (see table below).")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Grid Data Table Structure"',title:'"Grid',Data:!0,Table:!0,'Structure"':!0},"{\n    type = string,\n    layout = string,\n    itemWidth = int,\n    itemHeight = int,\n    itemCount = int\n}\n")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"createhorizontalslider"},"createHorizontalSlider"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:createHorizontalSlider( widget, range, value, callback, enableNumbers )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Creates a horizontal slider with the specified widget."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"widget")," [",(0,a.kt)("strong",null," string "),"]: The name of the widget."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"range")," [",(0,a.kt)("strong",null," number "),"]: The slider range."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"value")," [",(0,a.kt)("strong",null," number "),"]: The slider position."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"callback")," [",(0,a.kt)("strong",null," string "),"]: The name of the callback function to be called when the user interacts with the slider."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"enableNumbers")," [",(0,a.kt)("strong",null," bool "),"]: Whether the slider should have numbers on it or not. Defaults to false.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"createverticalslider"},"createVerticalSlider"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:createVerticalSlider( widget, range, value, callback )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Creates a vertical slider with the specified widget."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"widget")," [",(0,a.kt)("strong",null," string "),"]: The name of the widget."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"range")," [",(0,a.kt)("strong",null," number "),"]: The slider range."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"value")," [",(0,a.kt)("strong",null," number "),"]: The slider position."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"callback")," [",(0,a.kt)("strong",null," string "),"]: The name of the callback function to be called when the user interacts with the slider.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"destroy"},"destroy"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:destroy()\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Destroys the guiInterface object."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"isactive"},"isActive"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:isActive()\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Returns whether the GUI is currently open."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," bool "),"]",": Whether the GUI is open or not.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"open"},"open"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:open()\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Opens the GUI."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"playeffect"},"playEffect"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:playEffect( widget, effect, restart )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Plays an effect at a widget."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"widget")," [",(0,a.kt)("strong",null," string "),"]: The name of the widget."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"effect")," [",(0,a.kt)("strong",null," string "),"]: The name of the effect."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"restart")," [",(0,a.kt)("strong",null," bool "),"]: Whether the effect should restart or not.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"playgrideffect"},"playGridEffect"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:playGridEffect( gridName, index, effectName, restart )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Plays an effect at a widget inside a grid."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"gridName")," [",(0,a.kt)("strong",null," string "),"]: The name of the grid."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"index")," [",(0,a.kt)("strong",null," int "),"]: The index of the grid."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"effectName")," [",(0,a.kt)("strong",null," string "),"]: The name of the effect."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"restart")," [",(0,a.kt)("strong",null," bool "),"]: Whether the effect should restart or not.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setbuttoncallback"},"setButtonCallback"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setButtonCallback( button, callback )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Binds a Lua callback to a button widget.\nThe callback is called when the button widget is clicked."),(0,a.kt)("strong",null,"The callback receives:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"self")," [",(0,a.kt)("strong",null," table "),"]: The class instance."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"name")," [",(0,a.kt)("strong",null," string "),"]: The name of the button that was clicked.")),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"button")," [",(0,a.kt)("strong",null," string "),"]: The name of the button widget."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"callback")," [",(0,a.kt)("strong",null," string "),"]: The name of the callback function.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setbuttonstate"},"setButtonState"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setButtonState( button, state )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets the state of a button widget."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"button")," [",(0,a.kt)("strong",null," string "),"]: The name of the button widget."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"state")," [",(0,a.kt)("strong",null," bool "),"]: The state to set.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setcolor"},"setColor"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setColor( widget, color )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets the color of a widget."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"widget")," [",(0,a.kt)("strong",null," string "),"]: The name of the widget."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"color")," [",(0,a.kt)("strong",null," color "),"]: The color to set.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setcontainer"},"setContainer"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setContainer( gridName, container )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets a container to a grid."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"gridName")," [",(0,a.kt)("strong",null," string "),"]: The name of the grid."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"container")," [",(0,a.kt)("strong",null," container "),"]: The container.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setcontainers"},"setContainers"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setContainers( gridName, containers )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets multiple containers to a grid."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"gridName")," [",(0,a.kt)("strong",null," string "),"]: The name of the grid."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"container")," [",(0,a.kt)("strong",null," table "),"]: The table of containers.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setdata"},"setData"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setData( widget, data )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets data to a widget."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"widget")," [",(0,a.kt)("strong",null," string "),"]: The name of the widget."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"data")," [",(0,a.kt)("strong",null," table "),"]: The data.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setfaderange"},"setFadeRange"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setFadeRange( range )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets the fade range for a world GUI."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"range")," [",(0,a.kt)("strong",null," number "),"]: The fade range.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setfocus"},"setFocus"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setFocus( widget )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets a widget to receive key focus."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"widget")," [",(0,a.kt)("strong",null," string "),"]: The name of the widget.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setgridbuttoncallback"},"setGridButtonCallback"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setGridButtonCallback( buttonName, callback )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets a callback to be called when a button inside a grid is pressed"),(0,a.kt)("p",null,"Binds a Lua callback to a button widget inside a grid.\nThe callback is called when the button widget is clicked."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"buttonName")," [",(0,a.kt)("strong",null," string "),"]: The name of the button widget."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"callback")," [",(0,a.kt)("strong",null," string "),"]: The name of the callback function.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setgriditem"},"setGridItem"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setGridItem( gridName, index, item )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets an item in a grid."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"gridName")," [",(0,a.kt)("strong",null," string "),"]: The name of the grid."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"index")," [",(0,a.kt)("strong",null," int "),"]: The item index."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"item")," [",(0,a.kt)("strong",null," table "),"]: The item.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setgriditemchangedcallback"},"setGridItemChangedCallback"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setGridItemChangedCallback( gridName, callback )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets a callback to be called when a grid item is changed."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"gridName")," [",(0,a.kt)("strong",null," string "),"]: The name of the grid."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"callback")," [",(0,a.kt)("strong",null," string "),"]: The name of the callback function.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setgridmousefocuscallback"},"setGridMouseFocusCallback"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setGridMouseFocusCallback( buttonName, callback )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets a callback to be called when a grid widget gets mouse focus."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"buttonName")," [",(0,a.kt)("strong",null," string "),"]: The name of the button."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"callback")," [",(0,a.kt)("strong",null," string "),"]: The name of the callback function.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setgridsize"},"setGridSize"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setGridSize( gridName, size )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets the size of a grid."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"gridName")," [",(0,a.kt)("strong",null," string "),"]: The name of the grid."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"size")," [",(0,a.kt)("strong",null," int "),"]: The size.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"sethost"},"setHost"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setHost( widget, host, joint )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets the host for a world gui."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"widget")," [",(0,a.kt)("strong",null," string "),"]: The name of the widget."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"host")," [",(0,a.kt)("strong",null," shape/character "),"]: The GUI host."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"joint")," [",(0,a.kt)("strong",null," string "),"]: The joint (optional).")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"seticonimage"},"setIconImage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setIconImage( ItemBox, uuid )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets the icon image to a shape from a uuid."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"ItemBox")," [",(0,a.kt)("strong",null," string "),"]: The name of the ItemBox widget."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"uuid")," [",(0,a.kt)("strong",null," uuid "),"]: The item uuid.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setimage"},"setImage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setImage( ImageBox, image )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets the image of an imagebox."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"ImageBox")," [",(0,a.kt)("strong",null," string "),"]: The name of the ImageBox widget."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"image")," [",(0,a.kt)("strong",null," string "),"]: The path to the image file.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setitemicon"},"setItemIcon"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setItemIcon( ImageBox, itemResource, itemGroup, itemName )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets the resource, group and item name on an ImageBox widget"),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"ImageBox")," [",(0,a.kt)("strong",null," string "),"]: The name of the ImageBox widget."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"itemResource")," [",(0,a.kt)("strong",null," string "),"]: The item resource."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"itemGroup")," [",(0,a.kt)("strong",null," string "),"]: The item group."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"itemName")," [",(0,a.kt)("strong",null," string "),"]: The item name.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setlistselectioncallback"},"setListSelectionCallback"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setListSelectionCallback( listName, callback )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets a callback to be called when a list selection is changed."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"listName")," [",(0,a.kt)("strong",null," string "),"]: The name of the list."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"callback")," [",(0,a.kt)("strong",null," string "),"]: The name of the callback function.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setmaxrenderdistance"},"setMaxRenderDistance"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setMaxRenderDistance( distance )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets the maximum render distance for a world GUI."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"distance")," [",(0,a.kt)("strong",null," number "),"]: The max render distance.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setmeshpreview"},"setMeshPreview"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setMeshPreview( widgetName, uuid )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets a mesh preview to display an item from uuid."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"widgetName")," [",(0,a.kt)("strong",null," string "),"]: The name of the widget."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"uuid")," [",(0,a.kt)("strong",null," uuid "),"]: The uuid of the item to display.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setonclosecallback"},"setOnCloseCallback"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setOnCloseCallback( callback )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets a callback to be called when the GUI is closed."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"callback")," [",(0,a.kt)("strong",null," string "),"]: The name of the callback function.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setrequirelineofsight"},"setRequireLineOfSight"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setRequireLineOfSight( state )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets if a world GUI requires line of sight to be visible."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"state")," [",(0,a.kt)("strong",null," bool "),"]: Whether the GUI requires line of sight or not.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setselecteddropdownitem"},"setSelectedDropDownItem"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setSelectedDropDownItem()\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"[Missing Information]"),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setselectedlistitem"},"setSelectedListItem"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setSelectedListItem( listName, itemName )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Selects an item in a list."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"listName")," [",(0,a.kt)("strong",null," string "),"]: The name of the list."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"itemName")," [",(0,a.kt)("strong",null," string "),"]: The name of the item.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setslidercallback"},"setSliderCallback"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setSliderCallback( sliderName, callback )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets a callback to be called when the slider is moved."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"sliderName")," [",(0,a.kt)("strong",null," string "),"]: The name of the slider."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"callback")," [",(0,a.kt)("strong",null," string "),"]: The name of the callback function.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setsliderdata"},"setSliderData"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setSliderData( sliderName, range, position )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets the position and range of a slider."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"sliderName")," [",(0,a.kt)("strong",null," string "),"]: The name of the slider."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"range")," [",(0,a.kt)("strong",null," unsigned_int "),"]: The range of the slider."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"position")," [",(0,a.kt)("strong",null," unsigned_int "),"]: The position of the slider.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setsliderposition"},"setSliderPosition"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setSliderPosition( sliderName, position )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets the position of a slider."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"sliderName")," [",(0,a.kt)("strong",null," string "),"]: The name of the slider."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"position")," [",(0,a.kt)("strong",null," int "),"]: The position of the slider.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setsliderrange"},"setSliderRange"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setSliderRange( sliderName, range )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets the range of a slider."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"sliderName")," [",(0,a.kt)("strong",null," string "),"]: The name of the slider."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"range")," [",(0,a.kt)("strong",null," int "),"]: The range of the slider.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setsliderrangelimit"},"setSliderRangeLimit"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setSliderRangeLimit( sliderName, limit )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets the range limit of a slider."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"sliderName")," [",(0,a.kt)("strong",null," string "),"]: The name of the slider."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"limit")," [",(0,a.kt)("strong",null," int "),"]: The range limit of the slider.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"settext"},"setText"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setText( widget, text )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets text on a widget that supports it."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"widget")," [",(0,a.kt)("strong",null," string "),"]: The name of the widget."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"text")," [",(0,a.kt)("strong",null," string "),"]: The text to set.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"settextacceptedcallback"},"setTextAcceptedCallback"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setTextAcceptedCallback( editBoxName, callback )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets a callback to be called when a user submits ",(0,a.kt)("br",null),"\ntext into an EditBox widget."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"editBoxName")," [",(0,a.kt)("strong",null," string "),"]: The name of the EditBox."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"callback")," [",(0,a.kt)("strong",null," string "),"]: The name of the callback function.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"settextchangedcallback"},"setTextChangedCallback"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setTextChangedCallback( editBoxName, callback )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets a callback to be called when the text in an EditBox widget changes."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"editBoxName")," [",(0,a.kt)("strong",null," string "),"]: The name of the EditBox."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"callback")," [",(0,a.kt)("strong",null," string "),"]: The name of the callback function.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setvisible"},"setVisible"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setVisible( widget, state )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets whether a widget is visible or not."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"widget")," [",(0,a.kt)("strong",null," string "),"]: The name of the widget."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"state")," [",(0,a.kt)("strong",null," bool "),"]: Whether the widget is visible or not.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setworldposition"},"setWorldPosition"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:setWorldPosition( pos, world )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets the world position for a world GUI."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"pos")," [",(0,a.kt)("strong",null," vec3 "),"]: The position."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"world")," [",(0,a.kt)("strong",null," world "),"]: The world, defaults to same as the script.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"stopeffect"},"stopEffect"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:stopEffect( widget, effect, immediate )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Stops an effect playing at a widget."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"widget")," [",(0,a.kt)("strong",null," string "),"]: The name of the widget."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"effect")," [",(0,a.kt)("strong",null," string "),"]: The name of the effect."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"immediate")," [",(0,a.kt)("strong",null," bool "),"]: Whether the effect should stop immediately or not.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"stopgrideffect"},"stopGridEffect"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:stopGridEffect( gridName, index, effectName )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Stops an effect playing inside a grid."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"gridName")," [",(0,a.kt)("strong",null," string "),"]: The name of the grid."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"index")," [",(0,a.kt)("strong",null," int "),"]: The grid index."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"effect")," [",(0,a.kt)("strong",null," string "),"]: The name of the effect.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"trackquest"},"trackQuest"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:trackQuest( name, title, mainQuest, questTasks )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Adds a quest to the quest tracker."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"name")," [",(0,a.kt)("strong",null," string "),"]: The name of the quest."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"title")," [",(0,a.kt)("strong",null," string "),"]: The quest title to be displayed in the tracker."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"mainQuest")," [",(0,a.kt)("strong",null," bool "),"]: Whether the quest is a main quest (displayed on top in the tracker) or not."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"questTasks")," [",(0,a.kt)("strong",null," table "),"]: The table of quest tasks to display in the log task. See structure below.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="questTasks Table Structure"',title:'"questTasks',Table:!0,'Structure"':!0},"{\n    name = string,\n    text = string,\n    count = number,\n    target = number,\n    complete = bool\n}\n")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"untrackquest"},"untrackQuest"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"guiInterface:untrackQuest( name )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Removes a quest from the quest tracker."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"guiInterface")," [",(0,a.kt)("strong",null," guiInterface "),"]: The guiInterface."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"name")," [",(0,a.kt)("strong",null," string "),"]: The name of the quest.")),(0,a.kt)("hr",null))}g.isMDXComponent=!0}}]);