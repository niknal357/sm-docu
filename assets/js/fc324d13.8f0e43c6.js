"use strict";(self.webpackChunksm_docs=self.webpackChunksm_docs||[]).push([[3135],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),u=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=u(n),m=r,k=c["".concat(i,".").concat(m)]||c[m]||p[m]||o;return n?a.createElement(k,l(l({ref:t},d),{},{components:n})):a.createElement(k,l({ref:t},d))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[c]="string"==typeof e?e:r,l[1]=s;for(var u=2;u<o;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3824:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:45,title:"sm.storage",hide_title:!0,"sidebar-label":"sm.storage"},l=void 0,s={unversionedId:"Game-Script-Environment/Static-Functions/sm.storage",id:"Game-Script-Environment/Static-Functions/sm.storage",title:"sm.storage",description:"sm.storage",source:"@site/docs/Game-Script-Environment/Static-Functions/sm.storage.md",sourceDirName:"Game-Script-Environment/Static-Functions",slug:"/Game-Script-Environment/Static-Functions/sm.storage",permalink:"/docs/Game-Script-Environment/Static-Functions/sm.storage",draft:!1,tags:[],version:"current",sidebarPosition:45,frontMatter:{sidebar_position:45,title:"sm.storage",hide_title:!0,"sidebar-label":"sm.storage"},sidebar:"tutorialSidebar",previous:{title:"sm.shape",permalink:"/docs/Game-Script-Environment/Static-Functions/sm.shape"},next:{title:"sm.tool",permalink:"/docs/Game-Script-Environment/Static-Functions/sm.tool"}},i={},u=[{value:"sm.storage",id:"smstorage",level:2},{value:"Functions",id:"functions",level:2},{value:"load",id:"load",level:3},{value:"save",id:"save",level:3},{value:"saveAndSync",id:"saveandsync",level:3}],d={toc:u},c="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("br",null),(0,r.kt)("h2",{id:"smstorage"},"sm.storage"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Associated object type:")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Storage"},"Storage")),(0,r.kt)("strong",null,"Storage")," is used for saving and loading any Lua data into the world's database. ",(0,r.kt)("br",null),"This allows for data to be retrieved after closing and reloading the world.",(0,r.kt)("p",null,"Storage can only be used on the ",(0,r.kt)("a",{parentName:"p",href:"/docs/#server"},"server"),"."),(0,r.kt)("admonition",{title:"warning",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Storage allows for data to be saved immediately into the world's database. ",(0,r.kt)("br",null),"\nThis is a ",(0,r.kt)("strong",null,"very slow")," process and should be done as sparsely as possible."),(0,r.kt)("p",{parentName:"admonition"},"If you have data that is shared globally and updated often, consider using global variables instead. ",(0,r.kt)("br",null),"\nIdeally, storage should only be used to save data upon closing the world, or when saving a creation on the Lift.")),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("h3",{id:"load"},"load"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"sm.storage.load( key )\n")),(0,r.kt)("p",null,"Loads Lua data stored with a given key. The key can be any Lua object."),(0,r.kt)("p",null,"If no data is stored with the given key, this returns nil."),(0,r.kt)("p",null,"When used on the client, this function will return data saved with ",(0,r.kt)("a",{parentName:"p",href:"#saveandsync"},"saveAndSync")),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"key")," [",(0,r.kt)("strong",null," any "),"]: The key.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," any "),"]",": The stored data.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"save"},"save"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"sm.storage.save( key, data )\n")),(0,r.kt)("code",null,"Server-Only")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Saves any Lua object with a given key. The key can be any lua object."),(0,r.kt)("p",null,"The data will remain stored after closing the world, and is retrieved using ",(0,r.kt)("a",{parentName:"p",href:"#load"},"load"),", provided the same key."),(0,r.kt)("admonition",{title:"note",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The data is stored globally ",(0,r.kt)("strong",null,"within the current mod"),". As of such, keys will not collide with external mods and scripts.")),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"key")," [",(0,r.kt)("strong",null," any "),"]: The key to store the data with."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"data")," [",(0,r.kt)("strong",null," any "),"]: The data to be stored.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"saveandsync"},"saveAndSync"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"sm.storage.saveAndSync( key, data )\n")),(0,r.kt)("code",null,"Server-Only")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Saves any Lua object with a given key and synchronizes it to all clients. The key can be any lua object."),(0,r.kt)("p",null,"The data will remain stored after closing the world, and is retrieved using ",(0,r.kt)("a",{parentName:"p",href:"#load"},"load"),", provided the same key."),(0,r.kt)("admonition",{title:"note",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The data is stored globally ",(0,r.kt)("strong",null,"within the current mod"),". As of such, keys will not collide with external mods and scripts.")),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"key")," [",(0,r.kt)("strong",null," any "),"]: The key to store the data with."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"data")," [",(0,r.kt)("strong",null," any "),"]: The data to be stored.")),(0,r.kt)("hr",null))}p.isMDXComponent=!0}}]);