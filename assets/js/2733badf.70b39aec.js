"use strict";(self.webpackChunksm_docs=self.webpackChunksm_docs||[]).push([[3752],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var l=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,l,r=function(e,t){if(null==e)return{};var n,l,r={},a=Object.keys(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=l.createContext({}),s=function(e){var t=l.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},p=function(e){var t=s(e.components);return l.createElement(i.Provider,{value:t},e.children)},c="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},d=l.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=s(n),d=r,m=c["".concat(i,".").concat(d)]||c[d]||k[d]||a;return n?l.createElement(m,u(u({ref:t},p),{},{components:n})):l.createElement(m,u({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,u=new Array(a);u[0]=d;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[c]="string"==typeof e?e:r,u[1]=o;for(var s=2;s<a;s++)u[s]=n[s];return l.createElement.apply(null,u)}return l.createElement.apply(null,n)}d.displayName="MDXCreateElement"},180:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>u,default:()=>k,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var l=n(7462),r=(n(7294),n(3905));const a={sidebar_position:44,title:"sm.shape",hide_title:!0,"sidebar-label":"sm.shape"},u=void 0,o={unversionedId:"Game-Script-Environment/Static-Functions/sm.shape",id:"Game-Script-Environment/Static-Functions/sm.shape",title:"sm.shape",description:"sm.shape",source:"@site/docs/Game-Script-Environment/Static-Functions/sm.shape.md",sourceDirName:"Game-Script-Environment/Static-Functions",slug:"/Game-Script-Environment/Static-Functions/sm.shape",permalink:"/docs/Game-Script-Environment/Static-Functions/sm.shape",draft:!1,tags:[],version:"current",sidebarPosition:44,frontMatter:{sidebar_position:44,title:"sm.shape",hide_title:!0,"sidebar-label":"sm.shape"},sidebar:"tutorialSidebar",previous:{title:"sm.scriptableObject",permalink:"/docs/Game-Script-Environment/Static-Functions/sm.scriptableObject"},next:{title:"sm.storage",permalink:"/docs/Game-Script-Environment/Static-Functions/sm.storage"}},i={},s=[{value:"sm.shape",id:"smshape",level:2},{value:"Functions",id:"functions",level:2},{value:"createBlock",id:"createblock",level:3},{value:"createPart",id:"createpart",level:3},{value:"getShapeDescription",id:"getshapedescription",level:3},{value:"getShapeIcon",id:"getshapeicon",level:3},{value:"getShapeTitle",id:"getshapetitle",level:3},{value:"getShapeTypeColor",id:"getshapetypecolor",level:3},{value:"uuidExists",id:"uuidexists",level:3}],p={toc:s},c="wrapper";function k(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,l.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("br",null),(0,r.kt)("h2",{id:"smshape"},"sm.shape"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Associated object type:")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Shape"},"Shape")),(0,r.kt)("p",null,"A ",(0,r.kt)("strong",null,"shape")," is any block, part or basic material that can be built by a player. ",(0,r.kt)("br",null),"\nShapes are always connected to a ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Body"},"body"),", which is a collection of shapes."),(0,r.kt)("p",null,"For more information about creating your own scripted shapes, see ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Classes/ShapeClass"},"ShapeClass"),"."),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("h3",{id:"createblock"},"createBlock"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"sm.shape.createBlock( uuid, size, position, rotation, dynamic, forceSpawn )\n")),(0,r.kt)("code",null,"Server-Only")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Creates a new block."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"uuid")," [",(0,r.kt)("strong",null," uuid "),"]: The block uuid."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"size")," [",(0,r.kt)("strong",null," vec3 "),"]: The block size."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"position")," [",(0,r.kt)("strong",null," vec3 "),"]: The the world position."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"rotation")," [",(0,r.kt)("strong",null," quat "),"]: The world rotation (defaults to none)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"dynamic")," [",(0,r.kt)("strong",null," bool "),"]: Whether the shape is dynamic or static. Defaults to true (dynamic)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"forceSpawn")," [",(0,r.kt)("strong",null," bool "),"]: Whether to force spawn the shape or not. Optional.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," shape "),"]",": The created shape.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"createpart"},"createPart"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"sm.shape.createPart( uuid, position, rotation, dynamic, forceSpawn )\n")),(0,r.kt)("code",null,"Server-Only")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Creates a new part."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"uuid")," [",(0,r.kt)("strong",null," uuid "),"]: The part uuid."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"position")," [",(0,r.kt)("strong",null," vec3 "),"]: The the world position."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"rotation")," [",(0,r.kt)("strong",null," quat "),"]: The world rotation (defaults to none)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"dynamic")," [",(0,r.kt)("strong",null," bool "),"]: Whether the shape is dynamic or static. Defaults to true (dynamic)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"forceSpawn")," [",(0,r.kt)("strong",null," bool "),"]: Whether to force spawn the shape or not. Optional.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," shape "),"]",": The created shape.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getshapedescription"},"getShapeDescription"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"sm.shape.getShapeDescription( uuid )\n")),(0,r.kt)("p",null,"Returns the item description for the given uuid."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"uuid")," [",(0,r.kt)("strong",null," uuid "),"]: The item uuid.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," string "),"]",": The description.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getshapeicon"},"getShapeIcon"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"sm.shape.getShapeIcon( uuid )\n")),(0,r.kt)("p",null,"[Missing Description]"),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"uuid")," [",(0,r.kt)("strong",null," uuid "),"]: The item uuid.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," any "),"]",": The shape's icon.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getshapetitle"},"getShapeTitle"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"sm.shape.getShapeTitle( uuid )\n")),(0,r.kt)("p",null,"Returns the item's name for the given uuid."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"uuid")," [",(0,r.kt)("strong",null," uuid "),"]: The item uuid.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," string "),"]",": The shape's name.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getshapetypecolor"},"getShapeTypeColor"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"sm.shape.getShapeTypeColor( uuid )\n")),(0,r.kt)("p",null,"Returns the color of the uuid's shape type."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"uuid")," [",(0,r.kt)("strong",null," uuid "),"]: The item uuid.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," color "),"]",": The color of the shape type.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"uuidexists"},"uuidExists"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"sm.shape.uuidExists( uuid )\n")),(0,r.kt)("p",null,"Returns whether the shape uuid exists."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"uuid")," [",(0,r.kt)("strong",null," uuid "),"]: The shape uuid.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," bool "),"]",": Whether the uuid exists or not.")),(0,r.kt)("hr",null))}k.isMDXComponent=!0}}]);