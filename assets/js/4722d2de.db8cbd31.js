"use strict";(self.webpackChunksm_docs=self.webpackChunksm_docs||[]).push([[7531],{3905:(t,l,e)=>{e.d(l,{Zo:()=>i,kt:()=>p});var n=e(7294);function r(t,l,e){return l in t?Object.defineProperty(t,l,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[l]=e,t}function a(t,l){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);l&&(n=n.filter((function(l){return Object.getOwnPropertyDescriptor(t,l).enumerable}))),e.push.apply(e,n)}return e}function o(t){for(var l=1;l<arguments.length;l++){var e=null!=arguments[l]?arguments[l]:{};l%2?a(Object(e),!0).forEach((function(l){r(t,l,e[l])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):a(Object(e)).forEach((function(l){Object.defineProperty(t,l,Object.getOwnPropertyDescriptor(e,l))}))}return t}function u(t,l){if(null==t)return{};var e,n,r=function(t,l){if(null==t)return{};var e,n,r={},a=Object.keys(t);for(n=0;n<a.length;n++)e=a[n],l.indexOf(e)>=0||(r[e]=t[e]);return r}(t,l);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(n=0;n<a.length;n++)e=a[n],l.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(r[e]=t[e])}return r}var k=n.createContext({}),s=function(t){var l=n.useContext(k),e=l;return t&&(e="function"==typeof t?t(l):o(o({},l),t)),e},i=function(t){var l=s(t.components);return n.createElement(k.Provider,{value:l},t.children)},d="mdxType",b={inlineCode:"code",wrapper:function(t){var l=t.children;return n.createElement(n.Fragment,{},l)}},c=n.forwardRef((function(t,l){var e=t.components,r=t.mdxType,a=t.originalType,k=t.parentName,i=u(t,["components","mdxType","originalType","parentName"]),d=s(e),c=r,p=d["".concat(k,".").concat(c)]||d[c]||b[c]||a;return e?n.createElement(p,o(o({ref:l},i),{},{components:e})):n.createElement(p,o({ref:l},i))}));function p(t,l){var e=arguments,r=l&&l.mdxType;if("string"==typeof t||r){var a=e.length,o=new Array(a);o[0]=c;var u={};for(var k in l)hasOwnProperty.call(l,k)&&(u[k]=l[k]);u.originalType=t,u[d]="string"==typeof t?t:r,o[1]=u;for(var s=2;s<a;s++)o[s]=e[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,e)}c.displayName="MDXCreateElement"},5167:(t,l,e)=>{e.r(l),e.d(l,{assets:()=>k,contentTitle:()=>o,default:()=>b,frontMatter:()=>a,metadata:()=>u,toc:()=>s});var n=e(7462),r=(e(7294),e(3905));const a={sidebar_position:4,title:"Body",hide_title:!0,"sidebar-label":"Body"},o=void 0,u={unversionedId:"Game-Script-Environment/Userdata/Body",id:"Game-Script-Environment/Userdata/Body",title:"Body",description:"Body",source:"@site/docs/Game-Script-Environment/Userdata/Body.md",sourceDirName:"Game-Script-Environment/Userdata",slug:"/Game-Script-Environment/Userdata/Body",permalink:"/docs/Game-Script-Environment/Userdata/Body",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Game-Script-Environment/Userdata/Body.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Body",hide_title:!0,"sidebar-label":"Body"},sidebar:"tutorialSidebar",previous:{title:"BlueprintVisualization",permalink:"/docs/Game-Script-Environment/Userdata/BlueprintVisualization"},next:{title:"BuilderGuide",permalink:"/docs/Game-Script-Environment/Userdata/BuilderGuide"}},k={},s=[{value:"Body",id:"body",level:2},{value:"Functions",id:"functions",level:2},{value:"createBlock",id:"createblock",level:3},{value:"createPart",id:"createpart",level:3},{value:"getAllSeatedCharacter",id:"getallseatedcharacter",level:3},{value:"getAngularVelocity",id:"getangularvelocity",level:3},{value:"getCenterOfMassPosition",id:"getcenterofmassposition",level:3},{value:"getCreationBodies",id:"getcreationbodies",level:3},{value:"getCreationId",id:"getcreationid",level:3},{value:"getCreationJoints",id:"getcreationjoints",level:3},{value:"getCreationShapes",id:"getcreationshapes",level:3},{value:"getId",id:"getid",level:3},{value:"getInteractables",id:"getinteractables",level:3},{value:"getJoints",id:"getjoints",level:3},{value:"getLocalAabb",id:"getlocalaabb",level:3},{value:"getMass",id:"getmass",level:3},{value:"getShapes",id:"getshapes",level:3},{value:"getVelocity",id:"getvelocity",level:3},{value:"getWorld",id:"getworld",level:3},{value:"getWorldAabb",id:"getworldaabb",level:3},{value:"getWorldPosition",id:"getworldposition",level:3},{value:"hasChanged",id:"haschanged",level:3},{value:"isBuildable",id:"isbuildable",level:3},{value:"isConnectable",id:"isconnectable",level:3},{value:"isConvertibleToDynamic",id:"isconvertibletodynamic",level:3},{value:"isDestructable",id:"isdestructable",level:3},{value:"isDynamic",id:"isdynamic",level:3},{value:"isErasable",id:"iserasable",level:3},{value:"isLiftable",id:"isliftable",level:3},{value:"isOnLift",id:"isonlift",level:3},{value:"isPaintable",id:"ispaintable",level:3},{value:"isStatic",id:"isstatic",level:3},{value:"isUsable",id:"isusable",level:3},{value:"setBuildable",id:"setbuildable",level:3},{value:"setConnectable",id:"setconnectable",level:3},{value:"setConvertibleToDynamic",id:"setconvertibletodynamic",level:3},{value:"setDestructable",id:"setdestructable",level:3},{value:"setErasable",id:"seterasable",level:3},{value:"setLiftable",id:"setliftable",level:3},{value:"setPaintable",id:"setpaintable",level:3},{value:"setUsable",id:"setusable",level:3},{value:"transformPoint",id:"transformpoint",level:3}],i={toc:s},d="wrapper";function b(t){let{components:l,...e}=t;return(0,r.kt)(d,(0,n.Z)({},i,e,{components:l,mdxType:"MDXLayout"}),(0,r.kt)("br",null),(0,r.kt)("h2",{id:"body"},"Body"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Associated namespace:")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Static-Functions/sm.body"},"sm.body")),(0,r.kt)("p",null,"A userdata object representing a ",(0,r.kt)("strong",null,"body")," in the game."),(0,r.kt)("strong",null,"Values:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"angularVelocity")," [",(0,r.kt)("strong",null," vec3 "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": The angular velocity of the body.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"buildable")," [",(0,r.kt)("strong",null," bool "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": Whether the body is buildable or not."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Set"),": (Server-Only) Controls whether a body is buildable.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"centerOfMassPosition ")," [",(0,r.kt)("strong",null," vec3 "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": The center of mass world position of a body.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"connectable")," [",(0,r.kt)("strong",null," bool "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": Whether the body is connectable or not."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Set"),": (Server-Only) Controls whether a body is connectable.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"convertableToDynamic")," [",(0,r.kt)("strong",null," bool "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": Whether the body is convertible to dynamic or not."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Set"),": (Server-Only) Controls whether a body is convertible to dynamic.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"destructable")," [",(0,r.kt)("strong",null," bool "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": Whether the body is destructable or not."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Set"),": (Server-Only) Controls whether a body is destructable.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"erasable")," [",(0,r.kt)("strong",null," bool "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": Whether the body is erasable or not."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Set"),": (Server-Only) Controls whether a body is erasable.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"id")," [",(0,r.kt)("strong",null," int "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": The id of the body.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"liftable")," [",(0,r.kt)("strong",null," bool "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": Whether the body is liftable or not."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Set"),": (Server-Only) Controls whether a body is liftable.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"mass")," [",(0,r.kt)("strong",null," number "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": The mass of the body.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"paintable")," [",(0,r.kt)("strong",null," bool "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": Whether the body is paintable or not."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Set"),": (Server-Only) Controls whether a body is paintable.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"usable")," [",(0,r.kt)("strong",null," bool "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": Whether the body is interactable or not."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Set"),": (Server-Only) Controls whether a body is interactable.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"velocity")," [",(0,r.kt)("strong",null," vec3 "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": The linear velocity of the body.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"worldPosition")," [",(0,r.kt)("strong",null," vec3 "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": The world position of the body.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"worldRotation")," [",(0,r.kt)("strong",null," quat "),"] ",(0,r.kt)("br",null),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"Get"),": The world rotation of the body.")))),(0,r.kt)("strong",null,"Operations:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Operation"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Body")," == ",(0,r.kt)("code",null,"Body")),(0,r.kt)("td",{parentName:"tr",align:null},"Checks if two instances of ",(0,r.kt)("code",null,"Body")," refer to the same ",(0,r.kt)("code",null,"Body"),".")))),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("h3",{id:"createblock"},"createBlock"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:createBlock( uuid, size, position, forceAccept )\n")),(0,r.kt)("code",null,"Server-Only")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Creates a block on the body."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"uuid")," [",(0,r.kt)("strong",null," uuid "),"]:  The uuid of the shape."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"size")," [",(0,r.kt)("strong",null," vec3 "),"]: The shape's size."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"position")," [",(0,r.kt)("strong",null," vec3 "),"]: The shape's local position."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"forceAccept")," [",(0,r.kt)("strong",null," bool "),"]: Set true to force the body to accept the shape. (Defaults to true)")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," shape "),"]",": The created shape.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"createpart"},"createPart"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:createPart( uuid, position, z-axis, x-axis, forceAccept )\n")),(0,r.kt)("code",null,"Server-Only")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Creates a part on the body."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"uuid")," [",(0,r.kt)("strong",null," uuid "),"]:  The uuid of the shape."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"position")," [",(0,r.kt)("strong",null," vec3 "),"]: The shape's local position."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"z-axis")," [",(0,r.kt)("strong",null," bool "),"]: The shape's local z direction."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"x-axis")," [",(0,r.kt)("strong",null," bool "),"]: The shape's local x direction."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"forceAccept")," [",(0,r.kt)("strong",null," bool "),"]: Set true to force the body to accept the shape. (Defaults to true)")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," shape "),"]",": The created shape.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getallseatedcharacter"},"getAllSeatedCharacter"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:getAllSeatedCharacter()\n")),(0,r.kt)("code",null,"Server-Only")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Returns a table with all seated characters in this body."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," table "),"]",": The table of all seated characters.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getangularvelocity"},"getAngularVelocity"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:getAngularVelocity()\n")),(0,r.kt)("code",null,"Server + Client")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Returns the angular velocity of the body."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," vec3 "),"]",": The body's angular velocity.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getcenterofmassposition"},"getCenterOfMassPosition"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:getCenterOfMassPosition()\n")),(0,r.kt)("code",null,"Server + Client")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Returns the center of mass world position of the body."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," vec3 "),"]",": The body's center of mass position.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getcreationbodies"},"getCreationBodies"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:getCreationBodies()\n")),(0,r.kt)("code",null,"Server + Client")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Returns a table of all bodies in the creation."),(0,r.kt)("p",null,"A creation includes all bodies connected by ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Joint"},"joints"),", etc."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," table "),"]",": The table of all bodies in the creation. ")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getcreationid"},"getCreationId"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:getCreationId()\n")),(0,r.kt)("code",null,"Server-Only")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Returns the id of the creation."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," int "),"]",": The id of the creation. ")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getcreationjoints"},"getCreationJoints"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:getCreationJoints()\n")),(0,r.kt)("code",null,"Server + Client")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Returns a table of all ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Joint"},"joints")," that are part of the creation."),(0,r.kt)("p",null,"A creation includes all bodies connected by ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Joint"},"joints"),", etc."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," table "),"]",": The table of joints in the creation.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getcreationshapes"},"getCreationShapes"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:getCreationShapes()\n")),(0,r.kt)("code",null,"Server + Client")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Returns a table of all ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Shape"},"shapes")," that are part of the creation."),(0,r.kt)("p",null,"A creation includes all bodies connected by ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Joint"},"joints"),", etc."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," table "),"]",": The table of shapes in the creation.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getid"},"getId"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:getId()\n")),(0,r.kt)("code",null,"Server + Client")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Returns the id of the body."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," int "),"]",": The id of the body.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getinteractables"},"getInteractables"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:getInteractables()\n")),(0,r.kt)("code",null,"Server + Client")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Returns a table of all ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Interactable"},"interactables")," that are part of a body."),(0,r.kt)("p",null,"This will ",(0,r.kt)("strong",null,"not")," return interactables in neighbouring bodies connected by ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Joint"},"joints"),", etc."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," table "),"]",": The table of interactables in the body.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getjoints"},"getJoints"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:getJoints()\n")),(0,r.kt)("code",null,"Server + Client")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Returns a table of all ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Joint"},"joints")," that are part of a body."),(0,r.kt)("p",null,"This will ",(0,r.kt)("strong",null,"not")," return joints in neighbouring bodies."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," table "),"]",": The table of joints in the body.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getlocalaabb"},"getLocalAabb"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:getLocalAabb()\n")),(0,r.kt)("code",null,"Server + Client")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Returns the local aabb of the body."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," vec3 "),"]",": The aabb min."),(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," vec3 "),"]",": The aabb max.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getmass"},"getMass"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:getMass()\n")),(0,r.kt)("code",null,"Server + Client")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Returns the mass of the body."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," number "),"]",": The mass of the body.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getshapes"},"getShapes"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:getShapes()\n")),(0,r.kt)("code",null,"Server + Client")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Returns a table of all ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Shape"},"shapes")," that are part of the body."),(0,r.kt)("p",null,"This will ",(0,r.kt)("strong",null,"not")," return shapes in neighbouring bodies connected by ",(0,r.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Joint"},"joints"),", etc."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," table "),"]",": The table of shapes in the body.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getvelocity"},"getVelocity"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:getVelocity()\n")),(0,r.kt)("code",null,"Server + Client")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Returns the linear velocity of the body."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," vec3 "),"]",": The linear velocity of the body.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getworld"},"getWorld"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:getWorld()\n")),(0,r.kt)("code",null,"Server + Client")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Returns the world that the body exists in."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," world "),"]",": The world of the body.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getworldaabb"},"getWorldAabb"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:getWorldAabb()\n")),(0,r.kt)("code",null,"Server + Client")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Returns the world aabb of the body."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," vec3 "),"]",": The aabb min."),(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," vec3 "),"]",": The aabb max.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getworldposition"},"getWorldPosition"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:getWorldPosition()\n")),(0,r.kt)("code",null,"Server + Client")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Returns the world position of the body."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," vec3 "),"]",": The body's world position.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"haschanged"},"hasChanged"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:hasChanged( tick )\n")),(0,r.kt)("code",null,"Server + Client")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Returns true if the given tick is lower than the tick the body was last changed."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"tick")," [",(0,r.kt)("strong",null," int "),"]: The tick.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," bool "),"]",": True if the body has changed.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"isbuildable"},"isBuildable"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:isBuildable()\n")),(0,r.kt)("code",null,"Server + Client")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Returns whether the body is buildable or not."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," bool "),"]",": Whether the body is buildable or not.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"isconnectable"},"isConnectable"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:isConnectable()\n")),(0,r.kt)("code",null,"Server + Client")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Returns whether the body is connectable or not."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," bool "),"]",": Whether the body is connectable or not.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"isconvertibletodynamic"},"isConvertibleToDynamic"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:isConvertibleToDynamic()\n")),(0,r.kt)("code",null,"Server + Client")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Returns whether the body is convertable to dynamic or not."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," bool "),"]",": Whether the body is convertable to dynamic or not.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"isdestructable"},"isDestructable"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:isDestructable()\n")),(0,r.kt)("code",null,"Server + Client")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Returns whether the body is destructable or not."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," bool "),"]",": Whether the body is destructable or not.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"isdynamic"},"isDynamic"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:isDynamic()\n")),(0,r.kt)("code",null,"Server + Client")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Returns whether the body is dynamic or not."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," bool "),"]",": Whether the body is dynamic or not.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"iserasable"},"isErasable"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:isErasable()\n")),(0,r.kt)("code",null,"Server + Client")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Returns whether the body is erasable or not."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," bool "),"]",": Whether the body is erasable or not.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"isliftable"},"isLiftable"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:isLiftable()\n")),(0,r.kt)("code",null,"Server + Client")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Returns whether the body is liftable or not."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," bool "),"]",": Whether the body is liftable or not.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"isonlift"},"isOnLift"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:isOnLift()\n")),(0,r.kt)("code",null,"Server + Client")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Returns whether the body is on a lift or not."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," bool "),"]",": Whether the body is on a lift or not.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"ispaintable"},"isPaintable"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:isPaintable()\n")),(0,r.kt)("code",null,"Server + Client")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Returns whether the body is paintable or not."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," bool "),"]",": Whether the body is paintable or not.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"isstatic"},"isStatic"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:isStatic()\n")),(0,r.kt)("code",null,"Server + Client")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Returns whether the body is static or not."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," bool "),"]",": Whether the body is static or not.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"isusable"},"isUsable"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:isUsable()\n")),(0,r.kt)("code",null,"Server + Client")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Returns whether the body is interactable or not."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body.")),(0,r.kt)("strong",null,"Returns:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[",(0,r.kt)("strong",null," bool "),"]",": Whether the body is interactable or not.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"setbuildable"},"setBuildable"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:setBuildable( state )\n")),(0,r.kt)("code",null,"Server-Only")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Controls whether the body is buildable or not."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"state")," [",(0,r.kt)("strong",null," bool "),"]: Whether the body is buildable or not.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"setconnectable"},"setConnectable"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:setConnectable( state )\n")),(0,r.kt)("code",null,"Server-Only")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Controls whether the body is connectable or not."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"state")," [",(0,r.kt)("strong",null," bool "),"]: Whether the body is connectable or not.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"setconvertibletodynamic"},"setConvertibleToDynamic"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:setConvertibleToDynamic( state )\n")),(0,r.kt)("code",null,"Server-Only")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Controls whether the body is convertible to dynamic or not."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"state")," [",(0,r.kt)("strong",null," bool "),"]: Whether the body is convertible to dynamic or not.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"setdestructable"},"setDestructable"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:setDestructable( state )\n")),(0,r.kt)("code",null,"Server-Only")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Controls whether the body is destructable or not."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"state")," [",(0,r.kt)("strong",null," bool "),"]: Whether the body is destructable or not.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"seterasable"},"setErasable"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:setErasable( state )\n")),(0,r.kt)("code",null,"Server-Only")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Controls whether the body is erasable or not."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"state")," [",(0,r.kt)("strong",null," bool "),"]: Whether the body is erasable or not.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"setliftable"},"setLiftable"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:setLiftable( state )\n")),(0,r.kt)("code",null,"Server-Only")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Controls whether the body is liftable or not."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"state")," [",(0,r.kt)("strong",null," bool "),"]: Whether the body is liftable or not.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"setpaintable"},"setPaintable"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:setPaintable( state )\n")),(0,r.kt)("code",null,"Server-Only")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Controls whether the body is paintable or not."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"state")," [",(0,r.kt)("strong",null," bool "),"]: Whether the body is paintable or not.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"setusable"},"setUsable"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:setUsable( state )\n")),(0,r.kt)("code",null,"Server-Only")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Controls whether the body is interactable or not."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"state")," [",(0,r.kt)("strong",null," bool "),"]: Whether the body is interactable or not.")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"transformpoint"},"transformPoint"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"body:transformPoint( point )\n")),(0,r.kt)("code",null,"Server + Client")," ",(0,r.kt)("br",null),(0,r.kt)("p",null,"Transforms a point from local space to world space."),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," body "),"]: The body."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"point")," [",(0,r.kt)("strong",null," vec3 "),"]: The point in local space.")),(0,r.kt)("strong",null,"Arguments:")," ",(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"body")," [",(0,r.kt)("strong",null," vec3 "),"]: The point in world space.")),(0,r.kt)("hr",null))}b.isMDXComponent=!0}}]);