"use strict";(self.webpackChunksm_docs=self.webpackChunksm_docs||[]).push([[6636],{3905:(t,e,l)=>{l.d(e,{Zo:()=>k,kt:()=>m});var n=l(7294);function a(t,e,l){return e in t?Object.defineProperty(t,e,{value:l,enumerable:!0,configurable:!0,writable:!0}):t[e]=l,t}function r(t,e){var l=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),l.push.apply(l,n)}return l}function u(t){for(var e=1;e<arguments.length;e++){var l=null!=arguments[e]?arguments[e]:{};e%2?r(Object(l),!0).forEach((function(e){a(t,e,l[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(l)):r(Object(l)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(l,e))}))}return t}function i(t,e){if(null==t)return{};var l,n,a=function(t,e){if(null==t)return{};var l,n,a={},r=Object.keys(t);for(n=0;n<r.length;n++)l=r[n],e.indexOf(l)>=0||(a[l]=t[l]);return a}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)l=r[n],e.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(t,l)&&(a[l]=t[l])}return a}var o=n.createContext({}),s=function(t){var e=n.useContext(o),l=e;return t&&(l="function"==typeof t?t(e):u(u({},e),t)),l},k=function(t){var e=s(t.components);return n.createElement(o.Provider,{value:e},t.children)},c="mdxType",g={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},p=n.forwardRef((function(t,e){var l=t.components,a=t.mdxType,r=t.originalType,o=t.parentName,k=i(t,["components","mdxType","originalType","parentName"]),c=s(l),p=a,m=c["".concat(o,".").concat(p)]||c[p]||g[p]||r;return l?n.createElement(m,u(u({ref:e},k),{},{components:l})):n.createElement(m,u({ref:e},k))}));function m(t,e){var l=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var r=l.length,u=new Array(r);u[0]=p;var i={};for(var o in e)hasOwnProperty.call(e,o)&&(i[o]=e[o]);i.originalType=t,i[c]="string"==typeof t?t:a,u[1]=i;for(var s=2;s<r;s++)u[s]=l[s];return n.createElement.apply(null,u)}return n.createElement.apply(null,l)}p.displayName="MDXCreateElement"},6348:(t,e,l)=>{l.r(e),l.d(e,{assets:()=>o,contentTitle:()=>u,default:()=>g,frontMatter:()=>r,metadata:()=>i,toc:()=>s});var n=l(7462),a=(l(7294),l(3905));const r={sidebar_position:13,title:"Interactable",hide_title:!0,"sidebar-label":"Interactable"},u=void 0,i={unversionedId:"Game-Script-Environment/Userdata/Interactable",id:"Game-Script-Environment/Userdata/Interactable",title:"Interactable",description:"Interactable",source:"@site/docs/Game-Script-Environment/Userdata/Interactable.md",sourceDirName:"Game-Script-Environment/Userdata",slug:"/Game-Script-Environment/Userdata/Interactable",permalink:"/docs/Game-Script-Environment/Userdata/Interactable",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Game-Script-Environment/Userdata/Interactable.md",tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13,title:"Interactable",hide_title:!0,"sidebar-label":"Interactable"},sidebar:"tutorialSidebar",previous:{title:"Harvestable",permalink:"/docs/Game-Script-Environment/Userdata/Harvestable"},next:{title:"Joint",permalink:"/docs/Game-Script-Environment/Userdata/Joint"}},o={},s=[{value:"Interactable",id:"interactable",level:2},{value:"Functions",id:"functions",level:2},{value:"addContainer",id:"addcontainer",level:3},{value:"connect",id:"connect",level:3},{value:"connectToJoint",id:"connecttojoint",level:3},{value:"disconnect",id:"disconnect",level:3},{value:"getAnimDuration",id:"getanimduration",level:3},{value:"getBearings",id:"getbearings",level:3},{value:"getBody",id:"getbody",level:3},{value:"getChildren",id:"getchildren",level:3},{value:"getColorHighlight",id:"getcolorhighlight",level:3},{value:"getColorNormal",id:"getcolornormal",level:3},{value:"getConnectionInputType",id:"getconnectioninputtype",level:3},{value:"getConnectionOutputType",id:"getconnectionoutputtype",level:3},{value:"getContainer",id:"getcontainer",level:3},{value:"getGlowMultiplier",id:"getglowmultiplier",level:3},{value:"getId",id:"getid",level:3},{value:"getJoints",id:"getjoints",level:3},{value:"getLocalBonePosition",id:"getlocalboneposition",level:3},{value:"getMaxChildCount",id:"getmaxchildcount",level:3},{value:"getMaxParentCount",id:"getmaxparentcount",level:3},{value:"getParents",id:"getparents",level:3},{value:"getPistons",id:"getpistons",level:3},{value:"getPoseWeight",id:"getposeweight",level:3},{value:"getPower",id:"getpower",level:3},{value:"getPublicData",id:"getpublicdata",level:3},{value:"getSeatCharacter",id:"getseatcharacter",level:3},{value:"getSeatInteractables",id:"getseatinteractables",level:3},{value:"getShape",id:"getshape",level:3},{value:"getSingleParent",id:"getsingleparent",level:3},{value:"getSteeringAngle",id:"getsteeringangle",level:3},{value:"getSteeringJointLeftAngleLimit",id:"getsteeringjointleftanglelimit",level:3},{value:"getSteeringJointLeftAngleSpeed",id:"getsteeringjointleftanglespeed",level:3},{value:"getSteeringJointRightAngleLimit",id:"getsteeringjointrightanglelimit",level:3},{value:"getSteeringJointRightAngleSpeed",id:"getsteeringjointrightanglespeed",level:3},{value:"getSteeringJointSettings",id:"getsteeringjointsettings",level:3},{value:"getSteeringJointUnlocked",id:"getsteeringjointunlocked",level:3},{value:"getSteeringPower",id:"getsteeringpower",level:3},{value:"getType",id:"gettype",level:3},{value:"getUvFrameIndex",id:"getuvframeindex",level:3},{value:"getWorldBonePosition",id:"getworldboneposition",level:3},{value:"hasAnim",id:"hasanim",level:3},{value:"hasOutputType",id:"hasoutputtype",level:3},{value:"hasSeat",id:"hasseat",level:3},{value:"hasSteering",id:"hassteering",level:3},{value:"isActive",id:"isactive",level:3},{value:"pressSeatInteractable",id:"pressseatinteractable",level:3},{value:"releaseSeatInteractable",id:"releaseseatinteractable",level:3},{value:"removeContainer",id:"removecontainer",level:3},{value:"setActive",id:"setactive",level:3},{value:"setAnimEnabled",id:"setanimenabled",level:3},{value:"setAnimProgress",id:"setanimprogress",level:3},{value:"setGlowMultiplier",id:"setglowmultiplier",level:3},{value:"setGyroDirection",id:"setgyrodirection",level:3},{value:"setParams",id:"setparams",level:3},{value:"setPoseWeight",id:"setposeweight",level:3},{value:"setPower",id:"setpower",level:3},{value:"setPublicData",id:"setpublicdata",level:3},{value:"setSeatCharacter",id:"setseatcharacter",level:3},{value:"setSteeringFlag",id:"setsteeringflag",level:3},{value:"setSteeringJointLeftAngleLimit",id:"setsteeringjointleftanglelimit",level:3},{value:"setSteeringJointLeftAngleSpeed",id:"setsteeringjointleftanglespeed",level:3},{value:"setSteeringJointRightAngleLimit",id:"setsteeringjointrightanglelimit",level:3},{value:"setSteeringJointRightAngleSpeed",id:"setsteeringjointrightanglespeed",level:3},{value:"setSteeringJointSettings",id:"setsteeringjointsettings",level:3},{value:"setSteeringJointUnlocked",id:"setsteeringjointunlocked",level:3},{value:"setSubMeshVisible",id:"setsubmeshvisible",level:3},{value:"setUvFrameIndex",id:"setuvframeindex",level:3},{value:"unsetSteeringFlag",id:"unsetsteeringflag",level:3}],k={toc:s},c="wrapper";function g(t){let{components:e,...l}=t;return(0,a.kt)(c,(0,n.Z)({},k,l,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("br",null),(0,a.kt)("h2",{id:"interactable"},"Interactable"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Associated namespace:")," ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Static-Functions/sm.interactable"},"sm.interactable")),(0,a.kt)("p",null,"A userdata object representing an ",(0,a.kt)("strong",null,"interactable shape")," in the game."),(0,a.kt)("strong",null,"Values:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"active")," [",(0,a.kt)("strong",null," bool "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": The interactable's logic output signal."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Set"),": (Server-Only) Sets the interactable's logic output signal.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"body")," [",(0,a.kt)("strong",null," body "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": The interactable shape's body.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"id")," [",(0,a.kt)("strong",null," int "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": The interactable's id.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"power")," [",(0,a.kt)("strong",null," number "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": The interactable's power output signal."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Set"),": (Server-Only) Sets the interactable's power output signal.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"publicData")," [",(0,a.kt)("strong",null," table "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": (Server-only) The interactable's server public data."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Set"),": (Server-Only) Sets the interactable's server public data.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," shape "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": The interactable's shape.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"type")," [",(0,a.kt)("strong",null," string "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": The interactable's type.")))),(0,a.kt)("strong",null,"Operations:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Operation"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"Interactable")," == ",(0,a.kt)("code",null,"Interactable")),(0,a.kt)("td",{parentName:"tr",align:null},"Checks if two instances of ",(0,a.kt)("code",null,"Interactable")," refer to the same ",(0,a.kt)("code",null,"Interactable"),".")))),(0,a.kt)("h2",{id:"functions"},"Functions"),(0,a.kt)("h3",{id:"addcontainer"},"addContainer"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:addContainer( index, size, stackSize )\n")),(0,a.kt)("code",null,"Server-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Creates and stores a container in the given index inside the controller."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"index")," [",(0,a.kt)("strong",null," int "),"]: The index of the container (0 - 15)."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"size")," [",(0,a.kt)("strong",null," int "),"]: The number of slots in the container."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"stackSize")," [",(0,a.kt)("strong",null," int "),"]: The stack size. Defaults to max stack size (65535).")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," container "),"]",": The created container.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"connect"},"connect"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:connect( child )\n")),(0,a.kt)("code",null,"Server-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Connects the interactable to another compatible interactable. Similar to using the Connect Tool."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"child")," [",(0,a.kt)("strong",null," interactable "),"]: The child (receiving) interactable.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," bool "),"]",": Whether the connection was successful or not.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"connecttojoint"},"connectToJoint"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:connectToJoint( child )\n")),(0,a.kt)("code",null,"Server-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Connects the interactable to a compatible joint."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"child")," [",(0,a.kt)("strong",null," joint "),"]: The child (receiving) joint.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"disconnect"},"disconnect"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:disconnect( child )\n")),(0,a.kt)("code",null,"Server-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Disconnects the interactable from another interactable. Similar to using the Connect Tool."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"child")," [",(0,a.kt)("strong",null," interactable "),"]: The child interactable.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," bool "),"]",": Whether the disconnection was successful or not.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getanimduration"},"getAnimDuration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getAnimDuration( name )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Returns animation duration in seconds."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"name")," [",(0,a.kt)("strong",null," string "),"]: The name of the animation.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," number "),"]",": The animation duration.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getbearings"},"getBearings"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getBearings()\n")),(0,a.kt)("p",null,"Returns a table of ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Joint"},"bearings")," that the interactable is connected to."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," table "),"]",": The table of connected bearings.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getbody"},"getBody"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getBody()\n")),(0,a.kt)("p",null,"Returns the ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Body"},"body")," of the interactable's ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Shape"},"shape"),"."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," body "),"]",": The body.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getchildren"},"getChildren"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getChildren( connectionType )\n")),(0,a.kt)("p",null,"Returns a table of child interactables that the interactable is connected to. ",(0,a.kt)("br",null),"\nThe children listen to the interactable's output."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"connectionType")," [",(0,a.kt)("strong",null," int "),"]: Connection type filter. Defaults to all types except ",(0,a.kt)("code",null,"bearing")," (for backwards compatibility).")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," table "),"]",": The table of connected child interactables.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getcolorhighlight"},"getColorHighlight"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getColorHighlight()\n")),(0,a.kt)("p",null,"Returns the connection-point highlight color of the interactable. ",(0,a.kt)("br",null),"\nThis point color is shown when aiming at the shape with the Connect Tool."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," color "),"]",": The highlight color.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getcolornormal"},"getColorNormal"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getColorNormal()\n")),(0,a.kt)("p",null,"Returns the connection-point color of the interactable. ",(0,a.kt)("br",null),"\nThis point color is shown when the Connect Tool is equipped."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," color "),"]",": The color.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getconnectioninputtype"},"getConnectionInputType"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getConnectionInputType()\n")),(0,a.kt)("p",null,"Returns the interactable's input connection type."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," int "),"]",": The connection type.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getconnectionoutputtype"},"getConnectionOutputType"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getConnectionOutputType()\n")),(0,a.kt)("p",null,"Returns the interactable's output connection type."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," int "),"]",": The connection type.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getcontainer"},"getContainer"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getContainer( index )\n")),(0,a.kt)("p",null,"Returns the container stored at the given index inside the controller."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"index")," [",(0,a.kt)("strong",null," int "),"]: The index (default 0).")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," container "),"]",": The container.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getglowmultiplier"},"getGlowMultiplier"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getGlowMultiplier()\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Returns the interactable's glow multiplier."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," number "),"]",": The glow multiplier (0.0 - 1.0).")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getid"},"getId"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getId()\n")),(0,a.kt)("p",null,"Returns the interactable's id."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," int "),"]",": The id.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getjoints"},"getJoints"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getJoints()\n")),(0,a.kt)("p",null,"Returns a table of all ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Joint"},"joints")," that an interactable is connected to. ",(0,a.kt)("br",null),"\nJoints include ",(0,a.kt)("strong",null,"bearings")," and ",(0,a.kt)("strong",null,"pistons"),"."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," table "),"]",": The table of connected joints.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getlocalboneposition"},"getLocalBonePosition"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getLocalBonePosition( name )\n")),(0,a.kt)("p",null,"Returns the local position of a bone."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"name")," [",(0,a.kt)("strong",null," string "),"]: The bone name.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," vec3 "),"]",": The position.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getmaxchildcount"},"getMaxChildCount"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getMaxChildCount()\n")),(0,a.kt)("p",null,"Returns the maximum number of allowed child connections of the interactable - the number of outgoing connections."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," int "),"]",": The max child connection count.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getmaxparentcount"},"getMaxParentCount"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getMaxParentCount()\n")),(0,a.kt)("p",null,"Returns the maximum number of allowed parent connections of the interactable - the number of incoming connections."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," int "),"]",": The max parent connection count.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getparents"},"getParents"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getParents( connectionType )\n")),(0,a.kt)("p",null,"Returns a table of parent interactables that are connected to the interactable. ",(0,a.kt)("br",null),"\nThe parents act as the interactable's input."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"connectionType")," [",(0,a.kt)("strong",null," int "),"]: Connection type filter. Defaults to all types.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," table "),"]",": The table of connected parent interactables.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getpistons"},"getPistons"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getPistons()\n")),(0,a.kt)("p",null,"Returns a table of ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Joint"},"pistons")," that the interactable is connected to."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," table "),"]",": The table of connected pistons.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getposeweight"},"getPoseWeight"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getPoseWeight( index )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Returns the pose weight of the pose in the given index."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"index")," [",(0,a.kt)("strong",null," int "),"]: The index.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," number "),"]",": The pose weight.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getpower"},"getPower"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getPower()\n")),(0,a.kt)("p",null,"Returns the power output signal of the interactable. ",(0,a.kt)("br",null),"\nThis signal is usually a number between -1 to 1, where 1 is forward and -1 backward. ",(0,a.kt)("br",null),"\nHowever, it can also be used for other numbers."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," number "),"]",": The power output signal.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getpublicdata"},"getPublicData"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getPublicData()\n")),(0,a.kt)("code",null,"Server-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Returns the interactable's server public data."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," table "),"]",": The public data.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getseatcharacter"},"getSeatCharacter"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getSeatCharacter()\n")),(0,a.kt)("p",null,"Returns the ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Character"},"Character")," that is currently seated in the interactable."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," character "),"]",": The seated character.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getseatinteractables"},"getSeatInteractables"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getSeatInteractables()\n")),(0,a.kt)("p",null,"Returns a table of interactables that are connected to the seat."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," table "),"]",": The table of seat interactables.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getshape"},"getShape"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getShape()\n")),(0,a.kt)("p",null,"Returns the interactable's ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Shape"},"Shape"),"."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," shape "),"]",": The interactable's host shape.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getsingleparent"},"getSingleParent"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getSingleParent()\n")),(0,a.kt)("p",null,"Returns the interactable's parent interactable. ",(0,a.kt)("br",null),"\nThe parent act as the interactable's input."),(0,a.kt)("admonition",{title:"warning",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"This method is ",(0,a.kt)("strong",null,"not")," allowed for an interactable that allows more than one parent connection.")),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," interactable "),"]",": The parent interactable.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getsteeringangle"},"getSteeringAngle"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getSteeringAngle()\n")),(0,a.kt)("p",null,"Returns the steering angle of the steering interactable."),(0,a.kt)("p",null,"The value ranges from -1 to +1, where -1 represents steering right ",(0,a.kt)("br",null),"\nand +1 represents steering left."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," number "),"]",": The steering angle.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getsteeringjointleftanglelimit"},"getSteeringJointLeftAngleLimit"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getSteeringJointLeftAngleLimit( joint )\n")),(0,a.kt)("p",null,"Returns the left angle limit of a ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Joint"},"Joint")," connected to the steering Interactable."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"joint")," [",(0,a.kt)("strong",null," joint "),"]: The joint.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," number "),"]",": The left angle limit.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getsteeringjointleftanglespeed"},"getSteeringJointLeftAngleSpeed"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getSteeringJointLeftAngleSpeed( joint )\n")),(0,a.kt)("p",null,"Returns the left angle speed of a ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Joint"},"Joint")," connected to the steering Interactable."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"joint")," [",(0,a.kt)("strong",null," joint "),"]: The joint.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," number "),"]",": The left angle speed.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getsteeringjointrightanglelimit"},"getSteeringJointRightAngleLimit"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getSteeringJointRightAngleLimit( joint )\n")),(0,a.kt)("p",null,"Returns the right angle limit of a ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Joint"},"Joint")," connected to the steering Interactable."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"joint")," [",(0,a.kt)("strong",null," joint "),"]: The joint.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," number "),"]",": The right angle limit.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getsteeringjointrightanglespeed"},"getSteeringJointRightAngleSpeed"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getSteeringJointRightAngleSpeed( joint )\n")),(0,a.kt)("p",null,"Returns the right angle speed of a ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Joint"},"Joint")," connected to the steering Interactable."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"joint")," [",(0,a.kt)("strong",null," joint "),"]: The joint.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," number "),"]",": The right angle speed.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getsteeringjointsettings"},"getSteeringJointSettings"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getSteeringJointSettings( joint )\n")),(0,a.kt)("p",null,"Returns the settings of a ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Joint"},"Joint")," connected to the steering Interactable."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"joint")," [",(0,a.kt)("strong",null," joint "),"]: The joint.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," number "),"]",": The left angle speed."),(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," number "),"]",": The right angle speed."),(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," number "),"]",": The left angle limit."),(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," number "),"]",": The right angle limit."),(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," bool "),"]",": Whether the joint is unlocked or not.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getsteeringjointunlocked"},"getSteeringJointUnlocked"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getSteeringJointUnlocked( joint )\n")),(0,a.kt)("p",null,"Returns the lock state of a ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Joint"},"Joint")," connected to the steering Interactable."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"joint")," [",(0,a.kt)("strong",null," joint "),"]: The joint.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," bool "),"]",": Whether the joint is unlocked or not.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getsteeringpower"},"getSteeringPower"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getSteeringPower()\n")),(0,a.kt)("p",null,"Returns the steering power of the steering interactable."),(0,a.kt)("p",null,'The value ranges from -1 to +1, where +1 represents pressing "forward" ',(0,a.kt)("br",null),'\nand -1 represents pressing "backwards".'),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," number "),"]",": The steering power.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"gettype"},"getType"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getType()\n")),(0,a.kt)("p",null,"Returns the interactable's type."),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Constants"},"sm.interactable.types")," for details."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," string "),"]",": The type.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getuvframeindex"},"getUvFrameIndex"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getUvFrameIndex()\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Returns the index of the current UV animation frame."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," int "),"]",": The UV frame.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getworldboneposition"},"getWorldBonePosition"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:getWorldBonePosition( name )\n")),(0,a.kt)("p",null,"Returns the world position of a bone."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"name")," [",(0,a.kt)("strong",null," string "),"]: The bone name.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," vec3 "),"]",": The world position.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"hasanim"},"hasAnim"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:hasAnim( name )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Returns whether an animation exists."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"name")," [",(0,a.kt)("strong",null," string "),"]: The animation name.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," bool "),"]",": Whether the animation exists or not.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"hasoutputtype"},"hasOutputType"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:hasOutputType( type )\n")),(0,a.kt)("p",null,"Returns whether the interactable has the specified output connection type."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"type")," [",(0,a.kt)("strong",null," int "),"]: The connection type.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," bool "),"]",": Whether the interactable has the connection type or not.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"hasseat"},"hasSeat"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:hasSeat()\n")),(0,a.kt)("p",null,"Returns whether the interactable has a seat component."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," bool "),"]",": Whether the interactable has a seat component or not.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"hassteering"},"hasSteering"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:hasSteering()\n")),(0,a.kt)("p",null,"Returns whether the interactable has a steering component."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," bool "),"]",": Whether the interactable has a steering component or not.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"isactive"},"isActive"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:isActive()\n")),(0,a.kt)("p",null,"Returns the interactable's logic output signal. ",(0,a.kt)("br",null),"\nThis signal is a boolean, ",(0,a.kt)("strong",null,"on")," or ",(0,a.kt)("strong",null,"off"),"."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," bool "),"]",": The logic output signal.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"pressseatinteractable"},"pressSeatInteractable"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:pressSeatInteractable( index )\n")),(0,a.kt)("p",null,"Triggers a ",(0,a.kt)("strong",null,"press")," interaction on an interactable connected to the seat."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"index")," [",(0,a.kt)("strong",null," int "),"]: The index of the interactable.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," bool "),"]",": Whether the action was successful or not.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"releaseseatinteractable"},"releaseSeatInteractable"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:releaseSeatInteractable( index )\n")),(0,a.kt)("p",null,"Triggers a ",(0,a.kt)("strong",null,"release")," interaction on an interactable connected to the seat."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"index")," [",(0,a.kt)("strong",null," int "),"]: The index of the interactable.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," bool "),"]",": Whether the action was successful or not.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"removecontainer"},"removeContainer"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:removeContainer( index )\n")),(0,a.kt)("code",null,"Server-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Removes the container stored in the given index inside the controller."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"index")," [",(0,a.kt)("strong",null," int "),"]: The index of the container.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setactive"},"setActive"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:setActive( signal )\n")),(0,a.kt)("code",null,"Server-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets the logic output signal of an interactable. ",(0,a.kt)("br",null),"\nThis signal is a boolean, ",(0,a.kt)("strong",null,"on")," or ",(0,a.kt)("strong",null,"off"),"."),(0,a.kt)("admonition",{title:"warning",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},'Every time an interactable\'s logic output signal ("active state") changes, ',(0,a.kt)("br",null),"\nthis change is transmitted over the network to every connected client."),(0,a.kt)("p",{parentName:"admonition"},"This means, if a large amount of interactables update their states too often, this can have ",(0,a.kt)("br",null),"\na significant impact on multiplayer performance, to the point of becoming almost unplayable."),(0,a.kt)("p",{parentName:"admonition"},'To avoid causing such problems, change the interactable\'s "active state" only ',(0,a.kt)("br",null),"\nif neccessary (and make sure to ",(0,a.kt)("strong",null,"not")," set it every tick, if possible).")),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"signal")," [",(0,a.kt)("strong",null," bool "),"]: The logic output signal.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setanimenabled"},"setAnimEnabled"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:setAnimEnabled( name, enabled )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets whether the animation with the given name should be applied to the mesh. ",(0,a.kt)("br",null),"\nTrue enables the animation and false disables it."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"name")," [",(0,a.kt)("strong",null," string "),"]: The animation name."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"enabled")," [",(0,a.kt)("strong",null," bool "),"]: Whether the animation is enabled or not.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setanimprogress"},"setAnimProgress"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:setAnimProgress( name, progress )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets the progress on the animation with the given name."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"name")," [",(0,a.kt)("strong",null," string "),"]: The animation name."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"progress")," [",(0,a.kt)("strong",null," number "),"]: The progress (between 0 and 1).")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setglowmultiplier"},"setGlowMultiplier"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:setGlowMultiplier( value )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets a value to multiply the glow from asg texture with."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"value")," [",(0,a.kt)("strong",null," number "),"]: The glow multiplier.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setgyrodirection"},"setGyroDirection"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:setGyroDirection( direction )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets the direction of the gyro."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"direction")," [",(0,a.kt)("strong",null," vec3 "),"]: The gyro direction.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setparams"},"setParams"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:setParams( data )\n")),(0,a.kt)("p",null,"Sets the interactable's script param data."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"data")," [",(0,a.kt)("strong",null," any "),"]: The param data.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setposeweight"},"setPoseWeight"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:setPoseWeight( index, value )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Set the pose weight of the pose in the given index."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"index")," [",(0,a.kt)("strong",null," int "),"]: The index."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"value")," [",(0,a.kt)("strong",null," number "),"]: The pose weight.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setpower"},"setPower"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:setPower( signal )\n")),(0,a.kt)("code",null,"Server-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Returns the power output signal of the interactable. ",(0,a.kt)("br",null),"\nThis signal is usually a number between -1 to 1, where 1 is forward and -1 backward. ",(0,a.kt)("br",null),"\nHowever, it can also be used for other numbers."),(0,a.kt)("admonition",{title:"warning",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},'Every time an interactable\'s power output signal ("power") changes, ',(0,a.kt)("br",null),"\nthis change is transmitted over the network to every connected client."),(0,a.kt)("p",{parentName:"admonition"},'This means, if a large amount of interactables update their "power" too often, this can have ',(0,a.kt)("br",null),"\na significant impact on multiplayer performance, to the point of becoming almost unplayable."),(0,a.kt)("p",{parentName:"admonition"},'To avoid causing such problems, change the interactable\'s "power" only ',(0,a.kt)("br",null),"\nif neccessary (and make sure to ",(0,a.kt)("strong",null,"not")," set it every tick, if possible).")),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"signal")," [",(0,a.kt)("strong",null," number "),"]: The power output signal.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setpublicdata"},"setPublicData"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:setPublicData( data )\n")),(0,a.kt)("code",null,"Server-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Set the interactable's server public data."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"data")," [",(0,a.kt)("strong",null," table "),"]: The data to set.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setseatcharacter"},"setSeatCharacter"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:setSeatCharacter( character )\n")),(0,a.kt)("p",null,"Requests to seat a ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Character"},"Character")," in the Interactable."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"character")," [",(0,a.kt)("strong",null," character "),"]: The character.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setsteeringflag"},"setSteeringFlag"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:setSteeringFlag( flag )\n")),(0,a.kt)("p",null,"Sets the steering flag for the steering interactable."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"flag")," [",(0,a.kt)("strong",null," int "),"]: The steering flag.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setsteeringjointleftanglelimit"},"setSteeringJointLeftAngleLimit"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:setSteeringJointLeftAngleLimit( joint, value )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets the left angle limit settings of a ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Joint"},"Joint")," connected to the steering Interactable."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"joint")," [",(0,a.kt)("strong",null," joint "),"]: The joint."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"value")," [",(0,a.kt)("strong",null," number "),"]: The left angle limit.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setsteeringjointleftanglespeed"},"setSteeringJointLeftAngleSpeed"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:setSteeringJointLeftAngleSpeed( joint, value )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets the left angle speed settings of a ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Joint"},"Joint")," connected to the steering Interactable."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"joint")," [",(0,a.kt)("strong",null," joint "),"]: The joint."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"value")," [",(0,a.kt)("strong",null," number "),"]: The left angle speed.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setsteeringjointrightanglelimit"},"setSteeringJointRightAngleLimit"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:setSteeringJointRightAngleLimit( joint, value )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets the right angle limit settings of a ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Joint"},"Joint")," connected to the steering Interactable."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"joint")," [",(0,a.kt)("strong",null," joint "),"]: The joint."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"value")," [",(0,a.kt)("strong",null," number "),"]: The right angle limit.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setsteeringjointrightanglespeed"},"setSteeringJointRightAngleSpeed"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:setSteeringJointRightAngleSpeed( joint, value )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets the right angle speed settings of a ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Joint"},"Joint")," connected to the steering Interactable."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"joint")," [",(0,a.kt)("strong",null," joint "),"]: The joint."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"value")," [",(0,a.kt)("strong",null," number "),"]: The right angle speed.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setsteeringjointsettings"},"setSteeringJointSettings"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:setSteeringJointSettings( joint, leftSpeed, rightSpeed, leftLimit, rightLimit, unlocked )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets the right angle speed settings of a ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Joint"},"Joint")," connected to the steering Interactable."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"joint")," [",(0,a.kt)("strong",null," joint "),"]: The joint."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"leftSpeed")," [",(0,a.kt)("strong",null," number "),"]: The left angle speed."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"rightSpeed")," [",(0,a.kt)("strong",null," number "),"]: The right angle speed."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"leftLimit")," [",(0,a.kt)("strong",null," number "),"]: The left angle limit."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"rightLimit")," [",(0,a.kt)("strong",null," number "),"]: The right angle limit."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"unlocked")," [",(0,a.kt)("strong",null," bool "),"]: Whether the joint is unlocked or not.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setsteeringjointunlocked"},"setSteeringJointUnlocked"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:setSteeringJointUnlocked( joint, value )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets the lock state of a ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Joint"},"Joint")," connected to the steering Interactable."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"joint")," [",(0,a.kt)("strong",null," joint "),"]: The joint."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"value")," [",(0,a.kt)("strong",null," bool "),"]: Whether the joint is unlocked or not.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setsubmeshvisible"},"setSubMeshVisible"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:setSubMeshVisible( name, visible )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets the visibility of a submesh."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"name")," [",(0,a.kt)("strong",null," string "),"]: The submesh name."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"visible")," [",(0,a.kt)("strong",null," bool "),"]: Whether the submesh is visible or not.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setuvframeindex"},"setUvFrameIndex"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:setUvFrameIndex( index )\n")),(0,a.kt)("code",null,"Client-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets the UV animation frame with the given index."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"index")," [",(0,a.kt)("strong",null," int "),"]: The index.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"unsetsteeringflag"},"unsetSteeringFlag"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"interactable:unsetSteeringFlag( flag )\n")),(0,a.kt)("p",null,"Unsets the steering flag for a steering interactable."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," interactable "),"]: The interactable."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"flag")," [",(0,a.kt)("strong",null," int "),"]: The steering flag.")),(0,a.kt)("hr",null))}g.isMDXComponent=!0}}]);