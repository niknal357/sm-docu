"use strict";(self.webpackChunksm_docs=self.webpackChunksm_docs||[]).push([[2735],{7849:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>o});var r=t(5893),s=t(1151);const i={sidebar_position:2,title:"ShapeClass",hide_title:!0,"sidebar-label":"ShapeClass"},a=void 0,c={id:"Game-Script-Environment/Classes/ShapeClass",title:"ShapeClass",description:"ShapeClass",source:"@site/docs/Game-Script-Environment/Classes/ShapeClass.md",sourceDirName:"Game-Script-Environment/Classes",slug:"/Game-Script-Environment/Classes/ShapeClass",permalink:"/docs/Game-Script-Environment/Classes/ShapeClass",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"ShapeClass",hide_title:!0,"sidebar-label":"ShapeClass"},sidebar:"tutorialSidebar",previous:{title:"Common Callbacks",permalink:"/docs/Game-Script-Environment/Classes/CommonCallbacks"},next:{title:"ToolClass",permalink:"/docs/Game-Script-Environment/Classes/ToolClass"}},l={},o=[{value:"ShapeClass",id:"shapeclass",level:3},{value:"Server + Client",id:"server--client",level:2},{value:"onProjectile",id:"onprojectile",level:3},{value:"onMelee",id:"onmelee",level:3},{value:"onCollision",id:"oncollision",level:3},{value:"canErase",id:"canerase",level:3},{value:"Server-only",id:"server-only",level:2},{value:"onUnload",id:"onunload",level:3},{value:"onExplosion",id:"onexplosion",level:3},{value:"onSledgehammer",id:"onsledgehammer",level:3},{value:"Client-only",id:"client-only",level:2},{value:"onInteract",id:"oninteract",level:3},{value:"canInteract",id:"caninteract",level:3},{value:"onTinker",id:"ontinker",level:3},{value:"canTinker",id:"cantinker",level:3},{value:"onInteractThroughJoint",id:"oninteractthroughjoint",level:3},{value:"canInteractThroughJoint",id:"caninteractthroughjoint",level:3},{value:"onAction",id:"onaction",level:3},{value:"canCarry",id:"cancarry",level:3},{value:"getAvailableParentConnectionCount",id:"getavailableparentconnectioncount",level:3},{value:"getAvailableChildConnectionCount",id:"getavailablechildconnectioncount",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h3,{id:"shapeclass",children:"ShapeClass"}),"\n",(0,r.jsxs)(n.p,{children:['A script class that is instanced for every "scripted" ',(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Interactable",children:"Interactable Shape"})," in the game."]}),"\n",(0,r.jsxs)(n.p,{children:["An interactable part is a ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Shape",children:"Shape"})," that is usually built by the player and can be interacted with, for example a button or an engine."]}),"\n",(0,r.jsxs)(n.p,{children:["The class can receive events sent with ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Static-Functions/sm.event#sendtointeractable",children:"sm.event.sendToInteractable"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The fields below are accessed using ",(0,r.jsx)("code",{children:"self.fieldName"})," in the ShapeClass script:"]}),"\n",(0,r.jsx)("strong",{children:"Fields:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Interactable",children:"Interactable"})}),(0,r.jsx)(n.td,{children:"interactable"}),(0,r.jsxs)(n.td,{children:["The ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Interactable",children:"Interactable"})," game object belonging to this class instance. The same as ",(0,r.jsx)("code",{children:"shape.interactable"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Shape",children:"Shape"})}),(0,r.jsx)(n.td,{children:"shape"}),(0,r.jsxs)(n.td,{children:["The ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Shape",children:"Shape"})," game object that the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Interactable",children:"Interactable"})," is attached to. (The same as interactable.shape)"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Network",children:"Network"})}),(0,r.jsx)(n.td,{children:"network"}),(0,r.jsxs)(n.td,{children:["A ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Network",children:"Network"})," object that can be used to send data between client and server."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Storage",children:"Storage"})}),(0,r.jsx)(n.td,{children:"storage"}),(0,r.jsxs)(n.td,{children:["A server-side ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Storage",children:"Storage"})," object that can be used to save and load data to/from the world database."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"any"}),(0,r.jsx)(n.td,{children:"data"}),(0,r.jsxs)(n.td,{children:["Data from the ",(0,r.jsx)("code",{children:"data"})," entry in the shape's JSON file entry."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"any"}),(0,r.jsx)(n.td,{children:"params"}),(0,r.jsxs)(n.td,{children:["Parameter set with ",(0,r.jsxs)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Interactable#setparams",children:["Interactable",":setParams"]})," when created from a script."]})]})]})]}),"\n",(0,r.jsx)("strong",{children:"Constants:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Constants#shapeclass",children:"colorHighlight"})," ",(0,r.jsx)("br",{}),"\r\n",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Constants#shapeclass",children:"colorNormal"})," ",(0,r.jsx)("br",{}),"\r\n",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Constants#shapeclass",children:"connectionInput"})," ",(0,r.jsx)("br",{}),"\r\n",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Constants#shapeclass",children:"connectionOutput"})," ",(0,r.jsx)("br",{}),"\r\n",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Constants#shapeclass",children:"maxChildCount"})," ",(0,r.jsx)("br",{}),"\r\n",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Constants#shapeclass",children:"maxParentCount"})," ",(0,r.jsx)("br",{}),"\r\n",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Constants#shapeclass",children:"poseWeightCount"})," ",(0,r.jsx)("br",{})]}),"\n",(0,r.jsx)("strong",{children:"Callbacks:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h2,{id:"server--client",children:"Server + Client"}),"\n",(0,r.jsx)(n.h3,{id:"onprojectile",children:"onProjectile"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function ShapeClass.server_onProjectile( self, position, airTime, velocity, projectileName, shooter, damage, customData, normal, uuid )\r\nend\r\nfunction ShapeClass.client_onProjectile( self, position, airTime, velocity, projectileName, shooter, damage, customData, normal, uuid )\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called when the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Shape",children:"Shape"})," is hit by a projectile."]}),"\n",(0,r.jsx)(n.admonition,{title:"note",type:"info",children:(0,r.jsx)(n.p,{children:"If the shooter is destroyed before the projectile hits, the shooter value will be nil."})}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"position"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The position in world space where the projectile hit the Shape."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"airTime"})," [",(0,r.jsx)("strong",{children:" number "}),"]: The time, in seconds, that the projectile spent flying before the hit."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"velocity"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The velocity of the projectile at impact."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"projectileName"})," [",(0,r.jsx)("strong",{children:" string "}),"]: The name of the projectile. (Legacy, use uuid instead)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"shooter"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Player",children:" Player "}),"/",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Unit",children:" Unit "}),"/",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape",children:" Shape "}),"/",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Harvestable",children:" Harvestable "}),"/ nil "]}),"]: The shooter. Can be a Player, Unit, Shape, Harvestable or nil if unknown."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"damage"})," [",(0,r.jsx)("strong",{children:" int "}),"]: The damage value of the projectile."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"customData"})," [",(0,r.jsx)("strong",{children:" any "}),"]: A Lua object that can be defined at shoot time using ",(0,r.jsx)("code",{children:"sm.projectile.customProjectileAttack"})," or any other custom version."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"normal"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The normal at the point of impact."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"uuid"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Uuid",children:" Uuid "})," "]}),"]: The uuid of the projectile."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"onmelee",children:"onMelee"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function ShapeClass.server_onMelee( self, position, attacker, damage, power, direction, normal )\r\nend\r\nfunction ShapeClass.client_onMelee( self, position, attacker, damage, power, direction, normal )\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called when the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Shape",children:"Shape"})," is hit by a melee attack."]}),"\n",(0,r.jsx)(n.admonition,{title:"note",type:"info",children:(0,r.jsx)(n.p,{children:"If the attacker is destroyed before the hit lands, the attacker value will be nil."})}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"position"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The position in world space where the Shape was hit."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"attacker"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Player",children:" Player "}),"/ nil "]}),"]: The attacker. Can be a Player or nil if unknown. Attacks made by a Unit will be nil on the client."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"damage"})," [",(0,r.jsx)("strong",{children:" int "}),"]: The damage value of the melee hit."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"power"})," [",(0,r.jsx)("strong",{children:" number "}),"]: The physical impact of the hit."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"direction"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The direction of the melee attack."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"normal"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The normal at the point of impact."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"oncollision",children:"onCollision"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function ShapeClass.server_onCollision( self, other, position, selfPointVelocity, otherPointVelocity, normal )\r\nend\r\nfunction ShapeClass.client_onCollision( self, other, position, selfPointVelocity, otherPointVelocity, normal )\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called when the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Shape",children:"Shape"})," collides with another object."]}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"other"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape",children:" Shape "}),"/",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Character",children:" Character "}),"/",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Harvestable",children:" Harvestable "}),"/",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Lift",children:" Lift "}),"/ nil "]}),"]: The other object. Nil if terrain."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"position"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Player",children:" Player "}),"/ nil "]}),"]: The position in world space where the collision occurred."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"selfPointVelocity"})," [",(0,r.jsx)("strong",{children:" int "}),"]: The velocity that that the Shape had at the point of collision."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"otherPointVelocity"})," [",(0,r.jsx)("strong",{children:" number "}),"]: The velocity that that the other object had at the point of collision."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"normal"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The collision normal between the Shape and the other object."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"canerase",children:"canErase"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function ShapeClass.server_canErase( self )\r\n\treturn true --true or false, default true\r\nend\r\nfunction ShapeClass.client_canErase( self )\r\n\treturn true --true or false, default true\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called to check whether the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Shape",children:"Shape"})," can be erased at this moment."]}),"\n",(0,r.jsx)(n.admonition,{title:"note",type:"info",children:(0,r.jsxs)(n.p,{children:["This can be used to override restrictions. (See ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Shape",children:"Shape.erasable"}),")"]})}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n"]}),"\n",(0,r.jsx)("strong",{children:"Returns:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["[",(0,r.jsx)("strong",{children:" bool "}),"]: A boolean indicating whether the Shape can be erased or not. (Defaults to true)"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"server-only",children:"Server-only"}),"\n",(0,r.jsx)(n.h3,{id:"onunload",children:"onUnload"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function ShapeClass.server_onUnload( self )\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called when the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Interactable",children:"Interactable"})," is unloaded from the game because no ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Player",children:"Player"}),"'s ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Character",children:"Character"})," is close enough to it. ",(0,r.jsx)("br",{}),"\r\nAlso called when exiting the game."]}),"\n",(0,r.jsx)(n.admonition,{title:"note",type:"info",children:(0,r.jsxs)(n.p,{children:["The creation, consisting of one or more ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Body",children:"bodies"}),", consisting of one or more ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Shape",children:"shapes"})," joined together with ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Joint",children:"joints"})," are always unloaded at the same time."]})}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"onexplosion",children:"onExplosion"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function ShapeClass.server_onExplosion( self, center, destructionLevel )\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called when the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Shape",children:"Shape"})," is hit by an explosion. ",(0,r.jsx)("br",{})]}),"\n",(0,r.jsxs)(n.p,{children:["For more information about explosions, see ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Static-Functions/sm.physics#explode",children:"sm.physics.explode"}),"."]}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"center"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The center of the explosion."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"destructionLevel"})," [",(0,r.jsx)("strong",{children:" int "}),"]: The level of destruction done by this explosion. Corresponds to the ",(0,r.jsx)("code",{children:"durability"})," rating of a Shape."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"onsledgehammer",children:"onSledgehammer"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function ShapeClass.server_onSledgehammer( self )\r\nend\n"})}),"\n",(0,r.jsx)(n.admonition,{title:"deprecated",type:"caution",children:(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.a,{href:"#onmelee",children:"onMelee"})," instead."]})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"client-only",children:"Client-only"}),"\n",(0,r.jsx)(n.h3,{id:"oninteract",children:"onInteract"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function ShapeClass.client_onInteract( self, character, state )\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called when a ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Player",children:"Player"})," is interacting with the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Interactable",children:"Interactable"})," by pressing the ",(0,r.jsx)("code",{children:"Use"})," key (default ",(0,r.jsx)("code",{children:"E"}),") ",(0,r.jsx)("br",{}),"\r\nor pressing ",(0,r.jsx)("code",{children:"0-9"})," if the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Interactable",children:"Interactable"})," is connected to a seat (See: ",(0,r.jsxs)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Interactable#pressseatinteractable",children:["Interactable",":pressSeatInteractable"]}),")."]}),"\n",(0,r.jsx)(n.admonition,{title:"note",type:"info",children:(0,r.jsxs)(n.p,{children:["If this method is defined, the player will see the interaction text ",(0,r.jsx)("code",{children:"E Use"})," when looking at the Shape."]})}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"character"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Character",children:" Character "})," "]}),"]: The Character of the Player that is interacting with the Interactable."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"state"})," [",(0,r.jsx)("strong",{children:" bool "}),"]: The interaction state (",(0,r.jsx)("code",{children:"true"})," if pressed, ",(0,r.jsx)("code",{children:"false"})," if released)."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",metastring:'title="Example Usage"',children:"-- Example of interaction\r\nfunction MySwitch.client_onInteract( self, character, state ) \r\n\tif state then\r\n\t\tself.network:sendToServer( 'sv_n_toggle' )\r\n\tend\r\nend\r\n\r\nfunction MySwitch.sv_n_toggle( self ) \r\n\t-- Toggle on and off\r\n\tself.interactable.active = not self.interactable.active\r\nend\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"caninteract",children:"canInteract"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function ShapeClass.client_canInteract( self, character )\r\n\treturn true --true or false, default true if onInteract is implemented\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called to check whether the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Interactable",children:"Interactable"})," can be interacted with at this moment."]}),"\n",(0,r.jsxs)(n.admonition,{title:"note",type:"info",children:[(0,r.jsxs)(n.p,{children:["This callback can also be used to change the interaction text shown to the player using ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Static-Functions/sm.gui#setinteractiontext",children:"sm.gui.setInteractionText"})," (Defaults to ",(0,r.jsx)("code",{children:"E Use"}),")."]}),(0,r.jsxs)(n.p,{children:["This can be used to override restrictions (See ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Shape",children:"Shape.usable"}),")."]})]}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"character"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Character",children:" Character "})," "]}),"]: The Character of the Player that is looking at the Shape."]}),"\n"]}),"\n",(0,r.jsx)("strong",{children:"Returns:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["[",(0,r.jsx)("strong",{children:" bool "}),"]: A boolean indicating whether the interactable can be interacted with or not (Defaults to true if ",(0,r.jsx)("code",{children:"client_onInteract"})," is implemented, otherwise false)."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"ontinker",children:"onTinker"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function ShapeClass.client_onTinker( self, character, state )\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called when a ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Player",children:"Player"})," is interacting with the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Interactable",children:"Interactable"})," by pressing the ",(0,r.jsx)("code",{children:"Tinker"})," key (default ",(0,r.jsx)("code",{children:"U"}),")."]}),"\n",(0,r.jsx)(n.admonition,{title:"note",type:"info",children:(0,r.jsx)(n.p,{children:"Tinkering usually means opening the upgrade menu for seats."})}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"character"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Character",children:" Character "})," "]}),"]: The Character of the Player that is tinkering with the Interactable."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"state"})," [",(0,r.jsx)("strong",{children:" bool "}),"]: The interaction state (",(0,r.jsx)("code",{children:"true"})," if pressed, ",(0,r.jsx)("code",{children:"false"})," if released)."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"cantinker",children:"canTinker"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function ShapeClass.client_canTinker( self, character )\r\n\treturn true --true or false, default true if onTinker is implemented\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called to check whether the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Interactable",children:"Interactable"})," can be tinkered with at this moment."]}),"\n",(0,r.jsx)(n.admonition,{title:"note",type:"info",children:(0,r.jsx)(n.p,{children:"Tinkering usually means opening the upgrade menu for seats."})}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"character"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Character",children:" Character "})," "]}),"]: The Character of the Player that is looking at the Shape."]}),"\n"]}),"\n",(0,r.jsx)("strong",{children:"Returns:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["[",(0,r.jsx)("strong",{children:" bool "}),"]: A boolean indicating whether the interactable can be tinkered with or not (Defaults to true if ",(0,r.jsx)("code",{children:"client_onTinker"})," is implemented, otherwise false)."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"oninteractthroughjoint",children:"onInteractThroughJoint"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function ShapeClass.client_onInteractThroughJoint( self, character, state, joint )\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called when a ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Player",children:"Player"})," is interacting with the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Interactable",children:"Interactable"})," through a connected ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Joint",children:"Joint"}),"."]}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"character"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Character",children:" Character "})," "]}),"]: The Character of the Player that is interacting with the Interactable."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"state"})," [",(0,r.jsx)("strong",{children:" bool "}),"]: The interaction state. Always true. ",(0,r.jsx)("code",{children:"client_onInteractThroughJoint"})," only receives the key down event."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"joint"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Joint",children:" Joint "})," "]}),"]: The Joint that the Player interacted through."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"caninteractthroughjoint",children:"canInteractThroughJoint"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function ShapeClass.client_canInteractThroughJoint( self, character )\r\n\treturn true --true or false, default true if onInteractThroughJoint is implemented\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called to check whether the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Interactable",children:"Interactable"})," can be interacted with through a child ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Joint",children:"Joint"})," at this moment."]}),"\n",(0,r.jsx)(n.admonition,{title:"note",type:"info",children:(0,r.jsxs)(n.p,{children:["This callback can also be used to change the interaction text shown to the player using ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Static-Functions/sm.gui#setinteractiontext",children:"sm.gui.setInteractionText"})," (Defaults to ",(0,r.jsx)("code",{children:"E Use"}),")"]})}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"character"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Character",children:" Character "})," "]}),"]: The Character of the Player that is looking at the Joint."]}),"\n"]}),"\n",(0,r.jsx)("strong",{children:"Returns:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["[",(0,r.jsx)("strong",{children:" bool "}),"]: A boolean indicating whether the interactable can be interacted with or not (Defaults to true if ",(0,r.jsx)("code",{children:"client_onInteractThroughJoint"})," is implemented, otherwise false)."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"onaction",children:"onAction"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function ShapeClass.client_onAction( self, action, state )\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called when the interactable receives input from a ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Player",children:"Player"})," with the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Character",children:"Character"})," locked to the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Interactable",children:"Interactable"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["When a ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Character",children:"Character"})," is seated in an ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Interactable",children:"Interactable"})," ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Shape",children:"Shape"})," with a ",(0,r.jsx)("code",{children:"seat"})," component, the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Character",children:"Character"})," is also considered locked to the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Interactable",children:"Interactable"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Details about the ",(0,r.jsx)("code",{children:"action"})," value are in ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Constants#sminteractableactions",children:"sm.interactable.actions"}),"."]}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"action"})," [",(0,r.jsx)("strong",{children:" int "}),"]: The action as an integer value."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"state"})," [",(0,r.jsx)("strong",{children:" bool "}),"]: True on begin action, false on end action."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"cancarry",children:"canCarry"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function ShapeClass.client_canCarry( self )\r\n\treturn true --true or false, default false\r\nend\n"})}),"\n",(0,r.jsx)(n.p,{children:"Called to check if the shape must be carried instead of put in the inventory."}),"\n",(0,r.jsx)(n.admonition,{title:"note",type:"info",children:(0,r.jsxs)(n.p,{children:["Shapes with the ",(0,r.jsx)("code",{children:"carryItem"})," attribute are always carried."]})}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n"]}),"\n",(0,r.jsx)("strong",{children:"Returns:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["[",(0,r.jsx)("strong",{children:" bool "}),"]: A boolean indicating whether the interacable must be carried or not. (Defaults to false)"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"getavailableparentconnectioncount",children:"getAvailableParentConnectionCount"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function ShapeClass.client_getAvailableParentConnectionCount( self, connectionType )\r\n\treturn int --The number of available connections.\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called to check how many more parent (input) connections with the given ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Constants#sminteractableconnectiontype",children:"connectionType"})," the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Interactable",children:"Interactable"})," will accept. ",(0,r.jsx)("br",{}),"\r\nReturn 1 or more to allow a connection of this type."]}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Constants#sminteractableconnectiontype",children:"sm.interactable.connectionType"})," for details about the connection type."]}),"\n",(0,r.jsx)(n.admonition,{title:"note",type:"info",children:(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Constants#shapeclass",children:"maxParentCount"})," constant must be 1 or more for this callback to be called."]})}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"connectionType"})," [",(0,r.jsx)("strong",{children:" int "}),"]: The connection type(s)."]}),"\n"]}),"\n",(0,r.jsx)("strong",{children:"Returns:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["[",(0,r.jsx)("strong",{children:" int "}),"]: The number of available connections."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",metastring:'title="Example Usage"',children:"-- Example of implementation where logic and power shares the same slot but electricity counts as separate\r\nMyInteractable.maxParentCount = 2\r\nMyInteractable.connectionInput = sm.interactable.connectionType.logic + sm.interactable.connectionType.power + sm.interactable.connectionType.electricity\r\n\r\nfunction MyInteractable.client_getAvailableParentConnectionCount( self, connectionType )\r\n\tif bit.band( connectionType, bit.bor( sm.interactable.connectionType.logic, sm.interactable.connectionType.power ) ) ~= 0 then\r\n\t\treturn 1 - self:getParents( bit.bor( sm.interactable.connectionType.logic, sm.interactable.connectionType.power ) )\r\n\tend\r\n\tif bit.band( connectionType, sm.interactable.connectionType.electricity ) ~= 0 then\r\n\t\treturn 1 - self:getParents( sm.interactable.connectionType.electricity )\r\n\tend\r\n\treturn 0\r\nend\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"getavailablechildconnectioncount",children:"getAvailableChildConnectionCount"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function ShapeClass.client_getAvailableChildConnectionCount( self, connectionType )\r\n\treturn int --The number of available connections.\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called to check how many more child (output) connections with the given ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Constants#sminteractableconnectiontype",children:"connectionType"})," the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Interactable",children:"Interactable"})," will accept. ",(0,r.jsx)("br",{}),"\r\nReturn 1 or more to allow a connection of this type."]}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Constants#sminteractableconnectiontype",children:"sm.interactable.connectionType"})," for details about the connection type."]}),"\n",(0,r.jsx)(n.admonition,{title:"note",type:"info",children:(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Constants#shapeclass",children:"maxChildCount"})," constant must be 1 or more for this callback to be called."]})}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"connectionType"})," [",(0,r.jsx)("strong",{children:" int "}),"]: The connection type(s)."]}),"\n"]}),"\n",(0,r.jsx)("strong",{children:"Returns:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["[",(0,r.jsx)("strong",{children:" int "}),"]: The number of available connections."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",metastring:'title="Example Usage"',children:"-- Example of implementation that accepts 10 logic connections and 1 power connection\r\nMyInteractable.maxChildCount = 11\r\nMyInteractable.connectionOutput = sm.interactable.connectionType.logic + sm.interactable.connectionType.power\r\n\r\nfunction MyIteractable.client_getAvailableChildConnectionCount( self, connectionType )\r\n\tif bit.band( connectionType, sm.interactable.connectionType.logic ) ~= 0 then\r\n\t\treturn 10 - self:getParents( sm.interactable.connectionType.logic )\r\n\tend\r\n\tif bit.band( connectionType, sm.interactable.connectionType.power ) ~= 0 then\r\n\t\treturn 1 - self:getParents( sm.interactable.connectionType.power )\r\n\tend\r\n\treturn 0\r\nend\n"})}),"\n",(0,r.jsx)(n.hr,{})]})}function d(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>a});var r=t(7294);const s={},i=r.createContext(s);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);