"use strict";(self.webpackChunksm_docs=self.webpackChunksm_docs||[]).push([[1306],{3905:(t,e,l)=>{l.d(e,{Zo:()=>i,kt:()=>d});var n=l(7294);function a(t,e,l){return e in t?Object.defineProperty(t,e,{value:l,enumerable:!0,configurable:!0,writable:!0}):t[e]=l,t}function r(t,e){var l=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),l.push.apply(l,n)}return l}function u(t){for(var e=1;e<arguments.length;e++){var l=null!=arguments[e]?arguments[e]:{};e%2?r(Object(l),!0).forEach((function(e){a(t,e,l[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(l)):r(Object(l)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(l,e))}))}return t}function o(t,e){if(null==t)return{};var l,n,a=function(t,e){if(null==t)return{};var l,n,a={},r=Object.keys(t);for(n=0;n<r.length;n++)l=r[n],e.indexOf(l)>=0||(a[l]=t[l]);return a}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)l=r[n],e.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(t,l)&&(a[l]=t[l])}return a}var s=n.createContext({}),k=function(t){var e=n.useContext(s),l=e;return t&&(l="function"==typeof t?t(e):u(u({},e),t)),l},i=function(t){var e=k(t.components);return n.createElement(s.Provider,{value:e},t.children)},p="mdxType",h={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},c=n.forwardRef((function(t,e){var l=t.components,a=t.mdxType,r=t.originalType,s=t.parentName,i=o(t,["components","mdxType","originalType","parentName"]),p=k(l),c=a,d=p["".concat(s,".").concat(c)]||p[c]||h[c]||r;return l?n.createElement(d,u(u({ref:e},i),{},{components:l})):n.createElement(d,u({ref:e},i))}));function d(t,e){var l=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var r=l.length,u=new Array(r);u[0]=c;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o[p]="string"==typeof t?t:a,u[1]=o;for(var k=2;k<r;k++)u[k]=l[k];return n.createElement.apply(null,u)}return n.createElement.apply(null,l)}c.displayName="MDXCreateElement"},8958:(t,e,l)=>{l.r(e),l.d(e,{assets:()=>s,contentTitle:()=>u,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>k});var n=l(7462),a=(l(7294),l(3905));const r={sidebar_position:24,title:"Shape",hide_title:!0,"sidebar-label":"Shape"},u=void 0,o={unversionedId:"Game-Script-Environment/Userdata/Shape",id:"Game-Script-Environment/Userdata/Shape",title:"Shape",description:"Shape",source:"@site/docs/Game-Script-Environment/Userdata/Shape.md",sourceDirName:"Game-Script-Environment/Userdata",slug:"/Game-Script-Environment/Userdata/Shape",permalink:"/docs/Game-Script-Environment/Userdata/Shape",draft:!1,tags:[],version:"current",sidebarPosition:24,frontMatter:{sidebar_position:24,title:"Shape",hide_title:!0,"sidebar-label":"Shape"},sidebar:"tutorialSidebar",previous:{title:"ScriptableObject",permalink:"/docs/Game-Script-Environment/Userdata/ScriptableObject"},next:{title:"Storage",permalink:"/docs/Game-Script-Environment/Userdata/Storage"}},s={},k=[{value:"Shape",id:"shape",level:2},{value:"Functions",id:"functions",level:2},{value:"createJoint",id:"createjoint",level:3},{value:"destroyBlock",id:"destroyblock",level:3},{value:"destroyPart",id:"destroypart",level:3},{value:"destroyShape",id:"destroyshape",level:3},{value:"getAt",id:"getat",level:3},{value:"getBody",id:"getbody",level:3},{value:"getBoundingBox",id:"getboundingbox",level:3},{value:"getBuoyancy",id:"getbuoyancy",level:3},{value:"getClosestBlockLocalPosition",id:"getclosestblocklocalposition",level:3},{value:"getColor",id:"getcolor",level:3},{value:"getId",id:"getid",level:3},{value:"getInteractable",id:"getinteractable",level:3},{value:"getInterpolatedAt",id:"getinterpolatedat",level:3},{value:"getInterpolatedRight",id:"getinterpolatedright",level:3},{value:"getInterpolatedUp",id:"getinterpolatedup",level:3},{value:"getInterpolatedWorldPosition",id:"getinterpolatedworldposition",level:3},{value:"getIsHarvest",id:"getisharvest",level:3},{value:"getIsStackable",id:"getisstackable",level:3},{value:"getJoints",id:"getjoints",level:3},{value:"getLocalPosition",id:"getlocalposition",level:3},{value:"getLocalRotation",id:"getlocalrotation",level:3},{value:"getMass",id:"getmass",level:3},{value:"getMaterial",id:"getmaterial",level:3},{value:"getMaterialId",id:"getmaterialid",level:3},{value:"getNeighbours",id:"getneighbours",level:3},{value:"getPipedNeighbours",id:"getpipedneighbours",level:3},{value:"getRight",id:"getright",level:3},{value:"getShapeUuid",id:"getshapeuuid",level:3},{value:"getSticky",id:"getsticky",level:3},{value:"getUp",id:"getup",level:3},{value:"getVelocity",id:"getvelocity",level:3},{value:"getWorldPosition",id:"getworldposition",level:3},{value:"getWorldRotation",id:"getworldrotation",level:3},{value:"getXAxis",id:"getxaxis",level:3},{value:"getYAxis",id:"getyaxis",level:3},{value:"getZAxis",id:"getzaxis",level:3},{value:"replaceShape",id:"replaceshape",level:3},{value:"setColor",id:"setcolor",level:3},{value:"shapeExists",id:"shapeexists",level:3},{value:"shapesInSphere",id:"shapesinsphere",level:3},{value:"transformDirection",id:"transformdirection",level:3},{value:"transformLocalPoint",id:"transformlocalpoint",level:3},{value:"transformPoint",id:"transformpoint",level:3},{value:"transformRotation",id:"transformrotation",level:3}],i={toc:k},p="wrapper";function h(t){let{components:e,...l}=t;return(0,a.kt)(p,(0,n.Z)({},i,l,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("br",null),(0,a.kt)("h2",{id:"shape"},"Shape"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Associated namespace:")," ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Static-Functions/sm.shape"},"sm.shape")),(0,a.kt)("p",null,"A userdata object representing a ",(0,a.kt)("strong",null,"shape")," in the game."),(0,a.kt)("strong",null,"Values:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"at")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": The direction of the shape's front side.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"body")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Body"}," Body ")," "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": The body that the shape is part of.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"buildable")," [",(0,a.kt)("strong",null," bool "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": Whether the shape is buildable or not.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"buoyancy")," [",(0,a.kt)("strong",null," number "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": The buoyancy multiplier of the shape.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"color")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Color"}," Color ")," "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": The color of the shape."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Set"),": (Server-Only) Sets the color of the shape.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"connectable")," [",(0,a.kt)("strong",null," bool "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": Whether the shape is connectable or not.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"convertableToDynamic")," [",(0,a.kt)("strong",null," bool "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": Whether the shape is convertable to dynamic or not.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"destructable")," [",(0,a.kt)("strong",null," bool "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": Whether the shape is destructable or not.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"erasable")," [",(0,a.kt)("strong",null," bool "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": Whether the shape is erasable or not.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"id")," [",(0,a.kt)("strong",null," id "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": The shape's id.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"interactable")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Interactable"}," Interactable ")," "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": The interactable of the shape, if it exists.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"isBlock")," [",(0,a.kt)("strong",null," bool "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": Whether the shape is a block or not.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"liftable")," [",(0,a.kt)("strong",null," bool "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": Whether the shape is liftable or not.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"localPosition")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": The local grid position of the shape.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"localRotation")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Quat"}," Quat ")," "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": The local rotation of the shape.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"mass")," [",(0,a.kt)("strong",null," number "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": The shape's mass.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"material")," [",(0,a.kt)("strong",null," string "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": The shape's material.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"materialId")," [",(0,a.kt)("strong",null," int "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": the shape's material id.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"paintable")," [",(0,a.kt)("strong",null," bool "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": Whether the shape is paintable or not.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"right")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": The direction of the shape's right side.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"stackedAmount")," [",(0,a.kt)("strong",null," int "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": The item amount that is stacked in the shape."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Set"),": (Server-Only) Sets the item amount that is stacked in the shape.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"stackedItem")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Uuid"}," Uuid ")," "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": The item uuid that is stacked in the shape."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Set"),": (Server-Only) Sets the item uuid that is stacked in the shape.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"up")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": The direction of the shape's top side.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"usable")," [",(0,a.kt)("strong",null," bool "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": Whether the shape is interactable or not.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shapeUuid")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Uuid"}," Uuid ")," "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": The shape's uuid.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"uuid")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Uuid"}," Uuid ")," "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": The shape's uuid.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"velocity")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": The shape's linear velocity.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"worldPosition")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": The world position of the shape.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"worldRotation")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Quat"}," Quat ")," "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": The world rotation of the shape.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"xAxis")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": The local x-axis vector of the shape.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"yAxis")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": The local y-axis vector of the shape.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"zAxis")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"] ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"Get"),": The local z-axis vector of the shape.")))),(0,a.kt)("strong",null,"Operations:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Operation"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"Shape")," == ",(0,a.kt)("code",null,"Shape")),(0,a.kt)("td",{parentName:"tr",align:null},"Checks if two instances of ",(0,a.kt)("code",null,"Shape")," refer to the same ",(0,a.kt)("code",null,"Shape"),".")))),(0,a.kt)("h2",{id:"functions"},"Functions"),(0,a.kt)("h3",{id:"createjoint"},"createJoint"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:createJoint( uuid, position, direction )\n")),(0,a.kt)("code",null,"Server-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Creates a joint on the shape."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"uuid")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Uuid"}," Uuid ")," "),"]: The joint's uuid."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"position")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The joint's position."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"direction")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The joint's normal direction.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Joint"}," Joint ")," "),"]",": The created joint.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"destroyblock"},"destroyBlock"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:destroyBlock( position, size, attackLevel )\n")),(0,a.kt)("code",null,"Server-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Destroys a block in the shape."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"position")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The local position of the removal box corner."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"size")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The size of the removal box (defaults to 1x1x1)."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"attackLevel")," [",(0,a.kt)("strong",null," int "),"]: Determines which quality level of block the attack can destroy. Setting it to 0 (default) will destroy any block.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"destroypart"},"destroyPart"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:destroyPart( attackLevel )\n")),(0,a.kt)("code",null,"Server-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Destroys the part."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"attackLevel")," [",(0,a.kt)("strong",null," int "),"]: Determines which quality level of block the attack can destroy. Setting it to 0 (default) will destroy any block.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"destroyshape"},"destroyShape"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:destroyShape( attackLevel )\n")),(0,a.kt)("code",null,"Server-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Destroys the shape."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"attackLevel")," [",(0,a.kt)("strong",null," int "),"]: Determines which quality level of block the attack can destroy. Setting it to 0 (default) will destroy any block.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getat"},"getAt"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getAt()\n")),(0,a.kt)("p",null,"Returns the direction of the shape's front side."),(0,a.kt)("p",null,"The direction is affected by the shape's rotation in the world."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]",": The direction.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getbody"},"getBody"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getBody()\n")),(0,a.kt)("p",null,"Returns the body that the shape is part of."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Body"}," Body ")," "),"]",": The body.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getboundingbox"},"getBoundingBox"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getBoundingBox()\n")),(0,a.kt)("p",null,"Returns the bounding box of the shape - the dimensions that the shape occupies."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]",": The bounding box.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getbuoyancy"},"getBuoyancy"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getBuoyancy()\n")),(0,a.kt)("p",null,"Returns the buoyancy multiplier of the shape."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," number "),"]",": The buoyancy multiplier.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getclosestblocklocalposition"},"getClosestBlockLocalPosition"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getClosestBlockLocalPosition( position )\n")),(0,a.kt)("p",null,"Transform a world position to the closest block's local position in a shape."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"position")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The world position.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]",": The closest local block position.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getcolor"},"getColor"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getColor()\n")),(0,a.kt)("p",null,"Returns the shape's color."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Color"}," Color ")," "),"]",": The color.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getid"},"getId"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getId()\n")),(0,a.kt)("p",null,"Returns the shape's id."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," int "),"]",": The id.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getinteractable"},"getInteractable"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getInteractable()\n")),(0,a.kt)("p",null,"Returns the ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Interactable"},"Interactable")," of the shape, if it exists."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Interactable"}," Interactable ")," "),"]",": The shape's interactable.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getinterpolatedat"},"getInterpolatedAt"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getInterpolatedAt()\n")),(0,a.kt)("p",null,"Returns the interpolated direction of the shape's front side."),(0,a.kt)("p",null,"The direction is affected by the shape's rotation in the world."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]",": The interpolated direction.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getinterpolatedright"},"getInterpolatedRight"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getInterpolatedRight()\n")),(0,a.kt)("p",null,"Returns the interpolated direction of a shape's right side."),(0,a.kt)("p",null,"The direction is affected by the shape's rotation in the world."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]",": The interpolated direction.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getinterpolatedup"},"getInterpolatedUp"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getInterpolatedUp()\n")),(0,a.kt)("p",null,"Returns the interpolated direction of a shape's top side."),(0,a.kt)("p",null,"The direction is affected by the shape's rotation in the world."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]",": The interpolated direction.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getinterpolatedworldposition"},"getInterpolatedWorldPosition"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getInterpolatedWorldPosition()\n")),(0,a.kt)("p",null,"Returns the interpolated world position of a shape."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]",": The interpolated position.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getisharvest"},"getIsHarvest"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getIsHarvest(uuid)\n")),(0,a.kt)("p",null,"Returns whether the uuid belongs to a harvestable."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"uuid")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Uuid"}," Uuid ")," "),"]: The uuid.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," bool "),"]",": Whether the uuid belongs to a harvestable or not.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getisstackable"},"getIsStackable"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getIsStackable( uuid )\n")),(0,a.kt)("p",null,"Returns whether the uuid belongs to a stackable shape."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"uuid")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Uuid"}," Uuid ")," "),"]: The uuid.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," bool "),"]",": Whether the uuid belongs to a stackable shape or not.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getjoints"},"getJoints"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getJoints( onlyChildJoints, onlySubshapes )\n")),(0,a.kt)("p",null,"Returns a table of all ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Userdata/Joint"},"joints")," that are attached to the shape."),(0,a.kt)("p",null,"Will return all attached joints when ",(0,a.kt)("code",null,"onlyChildJoints")," is set to false."),(0,a.kt)("p",null,"Will only get the joints which are subshapes to the shape when ",(0,a.kt)("code",null,"onlySubshapes")," is set to true."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"onlyChildJoints")," [",(0,a.kt)("strong",null," bool "),"]: Filters what joints to return (Optional, defaults to true)."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"onlySubshapes")," [",(0,a.kt)("strong",null," bool "),"]: Only get joints which are subshapes to the shape (Optional, defaults to false).")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," table "),"]",": The table of attached joints.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getlocalposition"},"getLocalPosition"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getLocalPosition()\n")),(0,a.kt)("p",null,"Returns the local grid position of the shape."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]",": The shape's local position.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getlocalrotation"},"getLocalRotation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getLocalRotation()\n")),(0,a.kt)("p",null,"Returns the local grid rotation of the shape."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Quat"}," Quat ")," "),"]",": The shape's local rotation.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getmass"},"getMass"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getMass()\n")),(0,a.kt)("p",null,"Returns the shape's mass."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," number "),"]",": The shape's mass.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getmaterial"},"getMaterial"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getMaterial()\n")),(0,a.kt)("p",null,"Returns the shape's material."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," string "),"]",": The material.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getmaterialid"},"getMaterialId"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getMaterialId()\n")),(0,a.kt)("p",null,"Returns the shape's material id."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," int "),"]",": The material id.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getneighbours"},"getNeighbours"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getNeighbours()\n")),(0,a.kt)("code",null,"Server-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,'Returns a table of "neighbor" shapes that are attached to the shape.'),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," table "),"]",": The table of attached neighbor shapes.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getpipedneighbours"},"getPipedNeighbours"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getPipedNeighbours()\n")),(0,a.kt)("code",null,"Server-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,'Returns a table of piped "neighbor" shapes that are attached to the shape through pipes.'),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," table "),"]",": The table of piped neighbor shapes.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getright"},"getRight"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getRight()\n")),(0,a.kt)("p",null,"Returns the direction of the shape's right side."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]",": The direction.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getshapeuuid"},"getShapeUuid"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getShapeUuid()\n")),(0,a.kt)("p",null,"Returns the shape's uuid."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Uuid"}," Uuid ")," "),"]",": The shape's uuid.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getsticky"},"getSticky"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getSticky()\n")),(0,a.kt)("p",null,"Returns the sticky directions of the shape for positive xyz and negative xyz."),(0,a.kt)("p",null,"A value of 1 means that the direction is sticky and a value of 0 means that the direction is not sticky."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]",": The negative sticky directions."),(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]",": The positive sticky directions.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getup"},"getUp"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getUp()\n")),(0,a.kt)("p",null,"Returns the direction of the shape's top side."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]",": The direction.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getvelocity"},"getVelocity"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getVelocity()\n")),(0,a.kt)("p",null,"Returns the shape's linear velocity."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]",": The velocity.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getworldposition"},"getWorldPosition"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getWorldPosition()\n")),(0,a.kt)("p",null,"Returns the shape's world position."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]",": The position.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getworldrotation"},"getWorldRotation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getWorldRotation()\n")),(0,a.kt)("p",null,"Returns the shape's world rotation."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Quat"}," Quat ")," "),"]",": The rotation.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getxaxis"},"getXAxis"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getXAxis()\n")),(0,a.kt)("p",null,"Returns the local x-axis vector of the shape."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]",": The x-axis vector.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getyaxis"},"getYAxis"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getYAxis()\n")),(0,a.kt)("p",null,"Returns the local y-axis vector of the shape."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]",": The y-axis vector.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getzaxis"},"getZAxis"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:getZAxis()\n")),(0,a.kt)("p",null,"Returns the local z-axis vector of the shape."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]",": The z-axis vector.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"replaceshape"},"replaceShape"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:replaceShape( uuid )\n")),(0,a.kt)("code",null,"Server-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Replaces a shape with another."),(0,a.kt)("admonition",{title:"note",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"The replacement shape must have the exact same size/bounding box as the current shape!")),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"uuid")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Uuid"}," Uuid ")," "),"]: The uuid of the replacement shape.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"setcolor"},"setColor"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:setColor()\n")),(0,a.kt)("code",null,"Server-Only")," ",(0,a.kt)("br",null),(0,a.kt)("p",null,"Sets the shape's color."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"color")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Color"}," Color ")," "),"]: The color.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"shapeexists"},"shapeExists"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:shapeExists()\n")),(0,a.kt)("admonition",{title:"warning",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"This function is deprecated! ",(0,a.kt)("br",null),"\nUse ",(0,a.kt)("a",{parentName:"p",href:"/docs/Game-Script-Environment/Static-Functions/sm#exists"},"sm.exists")," instead.")),(0,a.kt)("p",null,"Returns true if the shape exists."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," bool "),"]",": Whether the shape exists or not.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"shapesinsphere"},"shapesInSphere"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape.shapesInSphere( center, radius )\n")),(0,a.kt)("admonition",{title:"note",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Due to a bug in the game, this function needs to be called with ",(0,a.kt)("code",null,".")," instead of ",(0,a.kt)("code",null,":"),".")),(0,a.kt)("p",null,"Returns a table of shapes that are inside the sphere."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"center")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The sphere center position."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"radius")," [",(0,a.kt)("strong",null," number "),"]: The sphere radius.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," table "),"]",": The table of shapes in the sphere.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"transformdirection"},"transformDirection"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:transformDirection( vector )\n")),(0,a.kt)("p",null,"Transform a world direction to the local shape transform."),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"vector")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The untransformed direction.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]",": The transformed direction.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"transformlocalpoint"},"transformLocalPoint"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:transformLocalPoint( vector )\n")),(0,a.kt)("p",null,"Transforms a local point to world space."),(0,a.kt)("code",null,"local worldPos = self.shape:transformLocalPoint( localPos )")," ",(0,a.kt)("br",null),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"vector")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The local point.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]",": The world point.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"transformpoint"},"transformPoint"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:transformPoint( vector )\n")),(0,a.kt)("p",null,"Transforms a world point to the local shape transform."),(0,a.kt)("code",null,"local localpos = self.shape:transformPoint( worldPos )")," ",(0,a.kt)("br",null),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"vector")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]: The world point.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3"}," Vec3 ")," "),"]",": The local point.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"transformrotation"},"transformRotation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"shape:transformRotation( quat )\n")),(0,a.kt)("p",null,"Transforms a world rotation to the local shape transform."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"local worldUp = sm.vec3.new( 0, 0, 1 )\nlocal worldRot = sm.vec3.getRotation( worldUp, worldDir )\nlocal localRot = self.shape:transformRotation( worldRot )\n")),(0,a.kt)("strong",null,"Arguments:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"shape")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape"}," Shape ")," "),"]: The shape."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"quat")," [",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Quat"}," Quat ")," "),"]: The untransformed quaternion.")),(0,a.kt)("strong",null,"Returns:")," ",(0,a.kt)("br",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[",(0,a.kt)("strong",null," ",(0,a.kt)("a",{href:"/docs/Game-Script-Environment/Userdata/Quat"}," Quat ")," "),"]",": The transformed quaternion.")),(0,a.kt)("hr",null))}h.isMDXComponent=!0}}]);