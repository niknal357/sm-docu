"use strict";(self.webpackChunksm_docs=self.webpackChunksm_docs||[]).push([[7305],{9527:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>o});var r=s(5893),i=s(1151);const t={sidebar_position:5,title:"UnitClass",hide_title:!0,"sidebar-label":"UnitClass"},c=void 0,a={id:"Game-Script-Environment/Classes/UnitClass",title:"UnitClass",description:"UnitClass",source:"@site/docs/Game-Script-Environment/Classes/UnitClass.md",sourceDirName:"Game-Script-Environment/Classes",slug:"/Game-Script-Environment/Classes/UnitClass",permalink:"/docs/Game-Script-Environment/Classes/UnitClass",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"UnitClass",hide_title:!0,"sidebar-label":"UnitClass"},sidebar:"tutorialSidebar",previous:{title:"CharacterClass",permalink:"/docs/Game-Script-Environment/Classes/CharacterClass"},next:{title:"PlayerClass",permalink:"/docs/Game-Script-Environment/Classes/PlayerClass"}},l={},o=[{value:"UnitClass",id:"unitclass",level:3},{value:"Server-only",id:"server-only",level:2},{value:"onProjectile",id:"onprojectile",level:3},{value:"onExplosion",id:"onexplosion",level:3},{value:"onMelee",id:"onmelee",level:3},{value:"onCollision",id:"oncollision",level:3},{value:"onCollisionCrush",id:"oncollisioncrush",level:3},{value:"onUnitUpdate",id:"onunitupdate",level:3},{value:"onCharacterChangedColor",id:"oncharacterchangedcolor",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h3,{id:"unitclass",children:"UnitClass"}),"\n",(0,r.jsxs)(n.p,{children:["A script class that is instanced for every ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Unit",children:"Unit"})," in the game."]}),"\n",(0,r.jsxs)(n.p,{children:["A unit represents an AI controlling a ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Character",children:"Character"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"The unit script runs only on the server."}),"\n",(0,r.jsxs)(n.p,{children:["The class can receive events sent with ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Static-Functions/sm.event#sendtounit",children:"sm.event.sendToUnit"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The fields below are accessed using ",(0,r.jsx)("code",{children:"self.fieldName"})," in the UnitClass script:"]}),"\n",(0,r.jsx)("strong",{children:"Fields:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Unit",children:"Unit"})}),(0,r.jsx)(n.td,{children:"unit"}),(0,r.jsxs)(n.td,{children:["The ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Unit",children:"Unit"})," game object belonging to this class instance."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Storage",children:"Storage"})}),(0,r.jsx)(n.td,{children:"storage"}),(0,r.jsxs)(n.td,{children:["A server-side ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Storage",children:"Storage"})," object that can be used to save and load data to/from the world database."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"any"}),(0,r.jsx)(n.td,{children:"data"}),(0,r.jsxs)(n.td,{children:["Data from the ",(0,r.jsx)("code",{children:"data"})," entry in the unit character's JSON file entry."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"any"}),(0,r.jsx)(n.td,{children:"params"}),(0,r.jsxs)(n.td,{children:["Parameters passed to ",(0,r.jsx)("code",{children:"sm.unit.createUnit"})]})]})]})]}),"\n",(0,r.jsx)("strong",{children:"Constants:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Constants#unitclass",children:"isSaveObject"})}),"\n",(0,r.jsx)("strong",{children:"Callbacks:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h2,{id:"server-only",children:"Server-only"}),"\n",(0,r.jsx)(n.h3,{id:"onprojectile",children:"onProjectile"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function UnitClass.server_onProjectile( self, position, airTime, velocity, projectileName, shooter, damage, customData, normal, uuid )\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called when the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Unit",children:"Unit"}),"'s ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Character",children:"Character"})," is hit by a projectile."]}),"\n",(0,r.jsx)(n.admonition,{title:"note",type:"info",children:(0,r.jsx)(n.p,{children:"If the shooter is destroyed before the projectile hits, the shooter value will be nil."})}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"position"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The position in world space where the projectile hit the Character."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"airTime"})," [",(0,r.jsx)("strong",{children:" number "}),"]: The time, in seconds, that the projectile spent flying before the hit."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"velocity"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The velocity of the projectile at impact."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"projectileName"})," [",(0,r.jsx)("strong",{children:" string "}),"]: The name of the projectile. (Legacy, use uuid instead)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"shooter"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Player",children:" Player "}),"/",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Unit",children:" Unit "}),"/",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape",children:" Shape "}),"/",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Harvestable",children:" Harvestable "}),"/ nil "]}),"]: The shooter. Can be a Player, Unit, Shape, Harvestable or nil if unknown."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"damage"})," [",(0,r.jsx)("strong",{children:" int "}),"]: The damage value of the projectile."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"customData"})," [",(0,r.jsx)("strong",{children:" any "}),"]: A Lua object that can be defined at shoot time using ",(0,r.jsx)("code",{children:"sm.projectile.customProjectileAttack"})," or any other custom version."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"normal"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The normal at the point of impact."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"uuid"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Uuid",children:" Uuid "})," "]}),"]: The uuid of the projectile."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"onexplosion",children:"onExplosion"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function UnitClass.server_onExplosion( self, center, destructionLevel )\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called when the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Unit",children:"Unit"}),"'s ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Character",children:"Character"})," is hit by an explosion. ",(0,r.jsx)("br",{})]}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"center"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The center of the explosion."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"destructionLevel"})," [",(0,r.jsx)("strong",{children:" int "}),"]: The level of destruction done by this explosion. Corresponds to the ",(0,r.jsx)("code",{children:"durability"})," rating of a Shape."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"onmelee",children:"onMelee"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function UnitClass.server_onMelee( self, position, attacker, damage, power, direction, normal )\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called when the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Unit",children:"Unit"}),"'s ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Character",children:"Character"})," is hit by a melee attack."]}),"\n",(0,r.jsx)(n.admonition,{title:"note",type:"info",children:(0,r.jsx)(n.p,{children:"If the attacker is destroyed before the hit lands, the attacker value will be nil."})}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"position"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The position in world space where the Character was hit."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"attacker"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Player",children:" Player "}),"/ nil "]}),"]: The attacker. Can be a Player or nil if unknown. Attacks made by a Unit will be nil on the client."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"damage"})," [",(0,r.jsx)("strong",{children:" int "}),"]: The damage value of the melee hit."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"power"})," [",(0,r.jsx)("strong",{children:" number "}),"]: The physical impact of the hit."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"direction"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The direction of the melee attack."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"normal"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The normal at the point of impact."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"oncollision",children:"onCollision"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function UnitClass.server_onCollision( self, other, position, selfPointVelocity, otherPointVelocity, normal )\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called when the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Unit",children:"Unit"}),"'s ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Character",children:"Character"})," collides with another object."]}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"other"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Shape",children:" Shape "}),"/",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Character",children:" Character "}),"/",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Harvestable",children:" Harvestable "}),"/",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Lift",children:" Lift "}),"/ nil "]}),"]: The other object. Nil if terrain."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"position"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Player",children:" Player "}),"/ nil "]}),"]: The position in world space where the collision occurred."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"selfPointVelocity"})," [",(0,r.jsx)("strong",{children:" int "}),"]: The velocity that that the Character had at the point of collision."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"otherPointVelocity"})," [",(0,r.jsx)("strong",{children:" number "}),"]: The velocity that that the other object had at the point of collision."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"normal"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Vec3",children:" Vec3 "})," "]}),"]: The collision normal between the Character and the other object."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"oncollisioncrush",children:"onCollisionCrush"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function UnitClass.server_onCollisionCrush( self )\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called when the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Unit",children:"Unit"}),"'s ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Character",children:"Character"})," is being crushed."]}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"onunitupdate",children:"onUnitUpdate"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function UnitClass.server_onUnitUpdate( self, deltaTime )\r\nend\n"})}),"\n",(0,r.jsx)(n.p,{children:"Called occasionally for units based on how many units are active."}),"\n",(0,r.jsxs)(n.p,{children:["It is recommended to do heavier AI decisions here instead of in ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Classes/CommonCallbacks#onfixedupdate",children:"server_onFixedUpdate"}),"."]}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"deltaTime"})," [",(0,r.jsx)("strong",{children:" number "}),"]: The time, in seconds, since ",(0,r.jsx)("code",{children:"server_onUnitUpdate"})," was last called for this Unit."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"oncharacterchangedcolor",children:"onCharacterChangedColor"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"function UnitClass.server_onCharacterChangedColor( self, color )\r\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Called occasionally for units based on how many units are active.\r\nCalled when the ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Unit",children:"Unit"})," ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Character",children:"Character"}),"'s color is changed.\r\nThe color can be changed by painting, set using ",(0,r.jsxs)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Character#setcolor",children:["Character",":setColor"]})," or by modifying ",(0,r.jsx)(n.a,{href:"/docs/Game-Script-Environment/Userdata/Character",children:"Character.color"}),"."]}),"\n",(0,r.jsx)("strong",{children:"Arguments:"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"self"})," [",(0,r.jsx)("strong",{children:" table "}),"]: The class instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("code",{children:"color"})," [",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)("a",{href:"/docs/Game-Script-Environment/Userdata/Color",children:" Color "})," "]}),"]: The new Color of the Unit's Character."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>a,a:()=>c});var r=s(7294);const i={},t=r.createContext(i);function c(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);